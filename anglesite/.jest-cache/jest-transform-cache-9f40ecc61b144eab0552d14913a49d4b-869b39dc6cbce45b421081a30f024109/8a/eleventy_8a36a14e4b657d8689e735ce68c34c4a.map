{"version":3,"names":["exports","getHostnameFromTestDomain","cov_2he796eh8j","s","setLiveServerUrl","getCurrentLiveServerUrl","isLiveServerReady","getCurrentWebsiteName","setCurrentWebsiteName","liveServerReady","currentLiveServerUrl","currentWebsiteName","testDomainUrl","f","url","URL","hostname","error","console","name"],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/server/eleventy.ts"],"sourcesContent":["/**\n * @file Eleventy server management.\n */\nlet liveServerReady = false;\nlet currentLiveServerUrl = 'https://localhost:8080';\nlet currentWebsiteName = 'anglesite';\n\n/**\n * Get hostname from test domain URL.\n */\nexport function getHostnameFromTestDomain(testDomainUrl: string): string {\n  try {\n    const url = new URL(testDomainUrl);\n    return url.hostname;\n  } catch (error) {\n    console.error('Failed to parse test domain URL:', error);\n    return 'localhost';\n  }\n}\n\n/**\n * Set the current live-server URL.\n */\nexport function setLiveServerUrl(url: string) {\n  currentLiveServerUrl = url;\n  liveServerReady = true;\n}\n\n/**\n * Returns the URL of the currently running Eleventy server.\n */\nexport function getCurrentLiveServerUrl(): string {\n  return currentLiveServerUrl;\n}\n\n/**\n * Checks whether the Eleventy server has finished starting up and is ready to serve content.\n */\nexport function isLiveServerReady(): boolean {\n  return liveServerReady;\n}\n\n/**\n * Returns the name of the website currently being served by Eleventy.\n */\nexport function getCurrentWebsiteName(): string {\n  return currentWebsiteName;\n}\n\n/**\n * Updates the name of the website currently being served.\n */\nexport function setCurrentWebsiteName(name: string) {\n  currentWebsiteName = name;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUAA,OAAA,CAAAC,yBAAA,GAAAA,yBAAA;AAQC;AAAAC,cAAA,GAAAC,CAAA;AAKDH,OAAA,CAAAI,gBAAA,GAAAA,gBAAA;AAGC;AAAAF,cAAA,GAAAC,CAAA;AAKDH,OAAA,CAAAK,uBAAA,GAAAA,uBAAA;AAEC;AAAAH,cAAA,GAAAC,CAAA;AAKDH,OAAA,CAAAM,iBAAA,GAAAA,iBAAA;AAEC;AAAAJ,cAAA,GAAAC,CAAA;AAKDH,OAAA,CAAAO,qBAAA,GAAAA,qBAAA;AAEC;AAAAL,cAAA,GAAAC,CAAA;AAKDH,OAAA,CAAAQ,qBAAA,GAAAA,qBAAA;AApDA;;;AAGA,IAAIC,eAAe;AAAA;AAAA,CAAAP,cAAA,GAAAC,CAAA,OAAG,KAAK;AAC3B,IAAIO,oBAAoB;AAAA;AAAA,CAAAR,cAAA,GAAAC,CAAA,OAAG,wBAAwB;AACnD,IAAIQ,kBAAkB;AAAA;AAAA,CAAAT,cAAA,GAAAC,CAAA,OAAG,WAAW;AAEpC;;;AAGA,SAAgBF,yBAAyBA,CAACW,aAAqB;EAAA;EAAAV,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EAC7D,IAAI;IACF,MAAMW,GAAG;IAAA;IAAA,CAAAZ,cAAA,GAAAC,CAAA,QAAG,IAAIY,GAAG,CAACH,aAAa,CAAC;IAAC;IAAAV,cAAA,GAAAC,CAAA;IACnC,OAAOW,GAAG,CAACE,QAAQ;EACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA;IAAAf,cAAA,GAAAC,CAAA;IACde,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAAC;IAAAf,cAAA,GAAAC,CAAA;IACzD,OAAO,WAAW;EACpB;AACF;AAEA;;;AAGA,SAAgBC,gBAAgBA,CAACU,GAAW;EAAA;EAAAZ,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EAC1CO,oBAAoB,GAAGI,GAAG;EAAC;EAAAZ,cAAA,GAAAC,CAAA;EAC3BM,eAAe,GAAG,IAAI;AACxB;AAEA;;;AAGA,SAAgBJ,uBAAuBA,CAAA;EAAA;EAAAH,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EACrC,OAAOO,oBAAoB;AAC7B;AAEA;;;AAGA,SAAgBJ,iBAAiBA,CAAA;EAAA;EAAAJ,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EAC/B,OAAOM,eAAe;AACxB;AAEA;;;AAGA,SAAgBF,qBAAqBA,CAAA;EAAA;EAAAL,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EACnC,OAAOQ,kBAAkB;AAC3B;AAEA;;;AAGA,SAAgBH,qBAAqBA,CAACW,IAAY;EAAA;EAAAjB,cAAA,GAAAW,CAAA;EAAAX,cAAA,GAAAC,CAAA;EAChDQ,kBAAkB,GAAGQ,IAAI;AAC3B","ignoreList":[]}