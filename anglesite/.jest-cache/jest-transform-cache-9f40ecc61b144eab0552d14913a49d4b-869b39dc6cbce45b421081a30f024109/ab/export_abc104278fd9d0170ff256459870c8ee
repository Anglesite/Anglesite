1068813a3a2a52641a6138be892a8b19
"use strict";

/* istanbul ignore next */
function cov_1a0vsgllm2() {
  var path = "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/export.ts";
  var hash = "cb3d7542f9cafc367d17d9ce0bcc7ee1a04668f0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/export.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 50
        }
      },
      "39": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "40": {
        start: {
          line: 44,
          column: 19
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "41": {
        start: {
          line: 45,
          column: 19
        },
        end: {
          line: 45,
          column: 61
        }
      },
      "42": {
        start: {
          line: 46,
          column: 11
        },
        end: {
          line: 46,
          column: 38
        }
      },
      "43": {
        start: {
          line: 47,
          column: 13
        },
        end: {
          line: 47,
          column: 42
        }
      },
      "44": {
        start: {
          line: 48,
          column: 11
        },
        end: {
          line: 48,
          column: 38
        }
      },
      "45": {
        start: {
          line: 49,
          column: 19
        },
        end: {
          line: 49,
          column: 55
        }
      },
      "46": {
        start: {
          line: 50,
          column: 19
        },
        end: {
          line: 50,
          column: 55
        }
      },
      "47": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 51,
          column: 56
        }
      },
      "48": {
        start: {
          line: 52,
          column: 31
        },
        end: {
          line: 52,
          column: 68
        }
      },
      "49": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 61
        }
      },
      "50": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 7
        }
      },
      "51": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 46
        }
      },
      "52": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 65,
          column: 7
        }
      },
      "53": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "54": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 124
        }
      },
      "55": {
        start: {
          line: 93,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "56": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "57": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 236,
          column: 5
        }
      },
      "58": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 98,
          column: 73
        }
      },
      "59": {
        start: {
          line: 99,
          column: 30
        },
        end: {
          line: 99,
          column: 34
        }
      },
      "60": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "61": {
        start: {
          line: 102,
          column: 12
        },
        end: {
          line: 102,
          column: 91
        }
      },
      "62": {
        start: {
          line: 106,
          column: 35
        },
        end: {
          line: 106,
          column: 85
        }
      },
      "63": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "64": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 111,
          column: 17
        }
      },
      "65": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 50
        }
      },
      "66": {
        start: {
          line: 110,
          column: 20
        },
        end: {
          line: 110,
          column: 26
        }
      },
      "67": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "68": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 121,
          column: 15
        }
      },
      "69": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 122,
          column: 19
        }
      },
      "70": {
        start: {
          line: 125,
          column: 24
        },
        end: {
          line: 125,
          column: 48
        }
      },
      "71": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 126,
          column: 43
        }
      },
      "72": {
        start: {
          line: 128,
          column: 23
        },
        end: {
          line: 128,
          column: 27
        }
      },
      "73": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "74": {
        start: {
          line: 130,
          column: 12
        },
        end: {
          line: 130,
          column: 85
        }
      },
      "75": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "76": {
        start: {
          line: 133,
          column: 16
        },
        end: {
          line: 133,
          column: 23
        }
      },
      "77": {
        start: {
          line: 136,
          column: 31
        },
        end: {
          line: 136,
          column: 33
        }
      },
      "78": {
        start: {
          line: 137,
          column: 22
        },
        end: {
          line: 137,
          column: 24
        }
      },
      "79": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "80": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 44
        }
      },
      "81": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 140,
          column: 71
        }
      },
      "82": {
        start: {
          line: 142,
          column: 13
        },
        end: {
          line: 149,
          column: 9
        }
      },
      "83": {
        start: {
          line: 143,
          column: 12
        },
        end: {
          line: 143,
          column: 38
        }
      },
      "84": {
        start: {
          line: 144,
          column: 12
        },
        end: {
          line: 144,
          column: 69
        }
      },
      "85": {
        start: {
          line: 147,
          column: 12
        },
        end: {
          line: 147,
          column: 34
        }
      },
      "86": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 59
        }
      },
      "87": {
        start: {
          line: 151,
          column: 23
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "88": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "89": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 19
        }
      },
      "90": {
        start: {
          line: 159,
          column: 27
        },
        end: {
          line: 159,
          column: 42
        }
      },
      "91": {
        start: {
          line: 161,
          column: 28
        },
        end: {
          line: 161,
          column: 82
        }
      },
      "92": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "93": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 60
        }
      },
      "94": {
        start: {
          line: 167,
          column: 13
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "95": {
        start: {
          line: 168,
          column: 12
        },
        end: {
          line: 168,
          column: 54
        }
      },
      "96": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 34
        }
      },
      "97": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "98": {
        start: {
          line: 176,
          column: 31
        },
        end: {
          line: 176,
          column: 69
        }
      },
      "99": {
        start: {
          line: 178,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "100": {
        start: {
          line: 179,
          column: 16
        },
        end: {
          line: 188,
          column: 17
        }
      },
      "101": {
        start: {
          line: 181,
          column: 20
        },
        end: {
          line: 181,
          column: 70
        }
      },
      "102": {
        start: {
          line: 183,
          column: 20
        },
        end: {
          line: 183,
          column: 57
        }
      },
      "103": {
        start: {
          line: 186,
          column: 20
        },
        end: {
          line: 186,
          column: 107
        }
      },
      "104": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 47
        }
      },
      "105": {
        start: {
          line: 191,
          column: 36
        },
        end: {
          line: 193,
          column: 13
        }
      },
      "106": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 196,
          column: 13
        }
      },
      "107": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 56
        }
      },
      "108": {
        start: {
          line: 198,
          column: 35
        },
        end: {
          line: 198,
          column: 125
        }
      },
      "109": {
        start: {
          line: 199,
          column: 25
        },
        end: {
          line: 199,
          column: 90
        }
      },
      "110": {
        start: {
          line: 200,
          column: 12
        },
        end: {
          line: 200,
          column: 31
        }
      },
      "111": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "112": {
        start: {
          line: 204,
          column: 16
        },
        end: {
          line: 208,
          column: 17
        }
      },
      "113": {
        start: {
          line: 206,
          column: 20
        },
        end: {
          line: 206,
          column: 74
        }
      },
      "114": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 207,
          column: 27
        }
      },
      "115": {
        start: {
          line: 209,
          column: 16
        },
        end: {
          line: 209,
          column: 95
        }
      },
      "116": {
        start: {
          line: 211,
          column: 17
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "117": {
        start: {
          line: 212,
          column: 16
        },
        end: {
          line: 212,
          column: 66
        }
      },
      "118": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 216,
          column: 53
        }
      },
      "119": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 223,
          column: 15
        }
      },
      "120": {
        start: {
          line: 224,
          column: 12
        },
        end: {
          line: 224,
          column: 19
        }
      },
      "121": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 47
        }
      },
      "122": {
        start: {
          line: 229,
          column: 8
        },
        end: {
          line: 235,
          column: 11
        }
      },
      "123": {
        start: {
          line: 242,
          column: 4
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "124": {
        start: {
          line: 243,
          column: 8
        },
        end: {
          line: 253,
          column: 9
        }
      },
      "125": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 250,
          column: 15
        }
      },
      "126": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 59
        }
      },
      "127": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 19
        }
      },
      "128": {
        start: {
          line: 254,
          column: 23
        },
        end: {
          line: 254,
          column: 55
        }
      },
      "129": {
        start: {
          line: 255,
          column: 24
        },
        end: {
          line: 255,
          column: 78
        }
      },
      "130": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 260,
          column: 11
        }
      },
      "131": {
        start: {
          line: 258,
          column: 12
        },
        end: {
          line: 258,
          column: 66
        }
      },
      "132": {
        start: {
          line: 259,
          column: 12
        },
        end: {
          line: 259,
          column: 22
        }
      },
      "133": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 271,
          column: 11
        }
      },
      "134": {
        start: {
          line: 262,
          column: 12
        },
        end: {
          line: 262,
          column: 53
        }
      },
      "135": {
        start: {
          line: 263,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "136": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 24
        }
      },
      "137": {
        start: {
          line: 272,
          column: 8
        },
        end: {
          line: 272,
          column: 29
        }
      },
      "138": {
        start: {
          line: 273,
          column: 8
        },
        end: {
          line: 273,
          column: 43
        }
      },
      "139": {
        start: {
          line: 274,
          column: 8
        },
        end: {
          line: 274,
          column: 27
        }
      },
      "140": {
        start: {
          line: 281,
          column: 4
        },
        end: {
          line: 441,
          column: 5
        }
      },
      "141": {
        start: {
          line: 282,
          column: 8
        },
        end: {
          line: 291,
          column: 9
        }
      },
      "142": {
        start: {
          line: 283,
          column: 12
        },
        end: {
          line: 289,
          column: 15
        }
      },
      "143": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 290,
          column: 57
        }
      },
      "144": {
        start: {
          line: 293,
          column: 23
        },
        end: {
          line: 293,
          column: 34
        }
      },
      "145": {
        start: {
          line: 294,
          column: 25
        },
        end: {
          line: 294,
          column: 86
        }
      },
      "146": {
        start: {
          line: 295,
          column: 27
        },
        end: {
          line: 295,
          column: 75
        }
      },
      "147": {
        start: {
          line: 297,
          column: 32
        },
        end: {
          line: 297,
          column: 72
        }
      },
      "148": {
        start: {
          line: 298,
          column: 31
        },
        end: {
          line: 298,
          column: 42
        }
      },
      "149": {
        start: {
          line: 299,
          column: 8
        },
        end: {
          line: 307,
          column: 9
        }
      },
      "150": {
        start: {
          line: 300,
          column: 32
        },
        end: {
          line: 300,
          column: 84
        }
      },
      "151": {
        start: {
          line: 301,
          column: 28
        },
        end: {
          line: 301,
          column: 58
        }
      },
      "152": {
        start: {
          line: 302,
          column: 29
        },
        end: {
          line: 302,
          column: 93
        }
      },
      "153": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 66
        }
      },
      "154": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 83
        }
      },
      "155": {
        start: {
          line: 309,
          column: 28
        },
        end: {
          line: 315,
          column: 9
        }
      },
      "156": {
        start: {
          line: 317,
          column: 8
        },
        end: {
          line: 319,
          column: 9
        }
      },
      "157": {
        start: {
          line: 318,
          column: 12
        },
        end: {
          line: 318,
          column: 79
        }
      },
      "158": {
        start: {
          line: 320,
          column: 8
        },
        end: {
          line: 322,
          column: 9
        }
      },
      "159": {
        start: {
          line: 321,
          column: 12
        },
        end: {
          line: 321,
          column: 63
        }
      },
      "160": {
        start: {
          line: 323,
          column: 8
        },
        end: {
          line: 325,
          column: 9
        }
      },
      "161": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 65
        }
      },
      "162": {
        start: {
          line: 326,
          column: 8
        },
        end: {
          line: 328,
          column: 9
        }
      },
      "163": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 65
        }
      },
      "164": {
        start: {
          line: 330,
          column: 20
        },
        end: {
          line: 330,
          column: 78
        }
      },
      "165": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 395,
          column: 11
        }
      },
      "166": {
        start: {
          line: 334,
          column: 32
        },
        end: {
          line: 334,
          column: 41
        }
      },
      "167": {
        start: {
          line: 335,
          column: 30
        },
        end: {
          line: 393,
          column: 13
        }
      },
      "168": {
        start: {
          line: 336,
          column: 30
        },
        end: {
          line: 336,
          column: 80
        }
      },
      "169": {
        start: {
          line: 337,
          column: 30
        },
        end: {
          line: 337,
          column: 42
        }
      },
      "170": {
        start: {
          line: 338,
          column: 16
        },
        end: {
          line: 341,
          column: 17
        }
      },
      "171": {
        start: {
          line: 339,
          column: 20
        },
        end: {
          line: 339,
          column: 30
        }
      },
      "172": {
        start: {
          line: 340,
          column: 20
        },
        end: {
          line: 340,
          column: 27
        }
      },
      "173": {
        start: {
          line: 342,
          column: 16
        },
        end: {
          line: 392,
          column: 19
        }
      },
      "174": {
        start: {
          line: 343,
          column: 39
        },
        end: {
          line: 343,
          column: 70
        }
      },
      "175": {
        start: {
          line: 344,
          column: 39
        },
        end: {
          line: 344,
          column: 73
        }
      },
      "176": {
        start: {
          line: 345,
          column: 20
        },
        end: {
          line: 391,
          column: 21
        }
      },
      "177": {
        start: {
          line: 347,
          column: 24
        },
        end: {
          line: 376,
          column: 25
        }
      },
      "178": {
        start: {
          line: 348,
          column: 47
        },
        end: {
          line: 348,
          column: 57
        }
      },
      "179": {
        start: {
          line: 349,
          column: 28
        },
        end: {
          line: 368,
          column: 29
        }
      },
      "180": {
        start: {
          line: 350,
          column: 32
        },
        end: {
          line: 350,
          column: 60
        }
      },
      "181": {
        start: {
          line: 351,
          column: 32
        },
        end: {
          line: 360,
          column: 35
        }
      },
      "182": {
        start: {
          line: 352,
          column: 36
        },
        end: {
          line: 354,
          column: 37
        }
      },
      "183": {
        start: {
          line: 353,
          column: 40
        },
        end: {
          line: 353,
          column: 103
        }
      },
      "184": {
        start: {
          line: 356,
          column: 36
        },
        end: {
          line: 356,
          column: 70
        }
      },
      "185": {
        start: {
          line: 357,
          column: 36
        },
        end: {
          line: 357,
          column: 46
        }
      },
      "186": {
        start: {
          line: 358,
          column: 36
        },
        end: {
          line: 359,
          column: 50
        }
      },
      "187": {
        start: {
          line: 359,
          column: 40
        },
        end: {
          line: 359,
          column: 50
        }
      },
      "188": {
        start: {
          line: 364,
          column: 32
        },
        end: {
          line: 364,
          column: 66
        }
      },
      "189": {
        start: {
          line: 365,
          column: 32
        },
        end: {
          line: 365,
          column: 42
        }
      },
      "190": {
        start: {
          line: 366,
          column: 32
        },
        end: {
          line: 367,
          column: 46
        }
      },
      "191": {
        start: {
          line: 367,
          column: 36
        },
        end: {
          line: 367,
          column: 46
        }
      },
      "192": {
        start: {
          line: 372,
          column: 28
        },
        end: {
          line: 372,
          column: 62
        }
      },
      "193": {
        start: {
          line: 373,
          column: 28
        },
        end: {
          line: 373,
          column: 38
        }
      },
      "194": {
        start: {
          line: 374,
          column: 28
        },
        end: {
          line: 375,
          column: 42
        }
      },
      "195": {
        start: {
          line: 375,
          column: 32
        },
        end: {
          line: 375,
          column: 42
        }
      },
      "196": {
        start: {
          line: 380,
          column: 43
        },
        end: {
          line: 380,
          column: 74
        }
      },
      "197": {
        start: {
          line: 382,
          column: 40
        },
        end: {
          line: 382,
          column: 50
        }
      },
      "198": {
        start: {
          line: 383,
          column: 44
        },
        end: {
          line: 383,
          column: 74
        }
      },
      "199": {
        start: {
          line: 384,
          column: 24
        },
        end: {
          line: 384,
          column: 53
        }
      },
      "200": {
        start: {
          line: 385,
          column: 24
        },
        end: {
          line: 389,
          column: 27
        }
      },
      "201": {
        start: {
          line: 386,
          column: 28
        },
        end: {
          line: 386,
          column: 38
        }
      },
      "202": {
        start: {
          line: 387,
          column: 28
        },
        end: {
          line: 388,
          column: 42
        }
      },
      "203": {
        start: {
          line: 388,
          column: 32
        },
        end: {
          line: 388,
          column: 42
        }
      },
      "204": {
        start: {
          line: 390,
          column: 24
        },
        end: {
          line: 390,
          column: 56
        }
      },
      "205": {
        start: {
          line: 394,
          column: 12
        },
        end: {
          line: 394,
          column: 32
        }
      },
      "206": {
        start: {
          line: 397,
          column: 8
        },
        end: {
          line: 401,
          column: 11
        }
      },
      "207": {
        start: {
          line: 398,
          column: 12
        },
        end: {
          line: 400,
          column: 15
        }
      },
      "208": {
        start: {
          line: 399,
          column: 16
        },
        end: {
          line: 399,
          column: 26
        }
      },
      "209": {
        start: {
          line: 403,
          column: 28
        },
        end: {
          line: 403,
          column: 80
        }
      },
      "210": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 69
        }
      },
      "211": {
        start: {
          line: 406,
          column: 8
        },
        end: {
          line: 406,
          column: 49
        }
      },
      "212": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 64
        }
      },
      "213": {
        start: {
          line: 409,
          column: 8
        },
        end: {
          line: 409,
          column: 48
        }
      },
      "214": {
        start: {
          line: 410,
          column: 8
        },
        end: {
          line: 410,
          column: 62
        }
      },
      "215": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 63
        }
      },
      "216": {
        start: {
          line: 415,
          column: 23
        },
        end: {
          line: 415,
          column: 34
        }
      },
      "217": {
        start: {
          line: 416,
          column: 25
        },
        end: {
          line: 416,
          column: 101
        }
      },
      "218": {
        start: {
          line: 416,
          column: 65
        },
        end: {
          line: 416,
          column: 100
        }
      },
      "219": {
        start: {
          line: 417,
          column: 8
        },
        end: {
          line: 432,
          column: 11
        }
      },
      "220": {
        start: {
          line: 418,
          column: 12
        },
        end: {
          line: 431,
          column: 13
        }
      },
      "221": {
        start: {
          line: 419,
          column: 33
        },
        end: {
          line: 419,
          column: 55
        }
      },
      "222": {
        start: {
          line: 420,
          column: 16
        },
        end: {
          line: 427,
          column: 17
        }
      },
      "223": {
        start: {
          line: 421,
          column: 20
        },
        end: {
          line: 426,
          column: 21
        }
      },
      "224": {
        start: {
          line: 422,
          column: 24
        },
        end: {
          line: 422,
          column: 78
        }
      },
      "225": {
        start: {
          line: 425,
          column: 24
        },
        end: {
          line: 425,
          column: 61
        }
      },
      "226": {
        start: {
          line: 430,
          column: 16
        },
        end: {
          line: 430,
          column: 86
        }
      },
      "227": {
        start: {
          line: 433,
          column: 8
        },
        end: {
          line: 439,
          column: 11
        }
      },
      "228": {
        start: {
          line: 440,
          column: 8
        },
        end: {
          line: 440,
          column: 20
        }
      },
      "229": {
        start: {
          line: 447,
          column: 4
        },
        end: {
          line: 460,
          column: 7
        }
      },
      "230": {
        start: {
          line: 448,
          column: 23
        },
        end: {
          line: 448,
          column: 55
        }
      },
      "231": {
        start: {
          line: 449,
          column: 24
        },
        end: {
          line: 449,
          column: 78
        }
      },
      "232": {
        start: {
          line: 450,
          column: 8
        },
        end: {
          line: 452,
          column: 11
        }
      },
      "233": {
        start: {
          line: 451,
          column: 12
        },
        end: {
          line: 451,
          column: 22
        }
      },
      "234": {
        start: {
          line: 453,
          column: 8
        },
        end: {
          line: 456,
          column: 11
        }
      },
      "235": {
        start: {
          line: 454,
          column: 12
        },
        end: {
          line: 454,
          column: 59
        }
      },
      "236": {
        start: {
          line: 455,
          column: 12
        },
        end: {
          line: 455,
          column: 24
        }
      },
      "237": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 457,
          column: 29
        }
      },
      "238": {
        start: {
          line: 458,
          column: 8
        },
        end: {
          line: 458,
          column: 44
        }
      },
      "239": {
        start: {
          line: 459,
          column: 8
        },
        end: {
          line: 459,
          column: 27
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "setupExportHandlers",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 28
          }
        },
        loc: {
          start: {
            line: 57,
            column: 31
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 57
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 59,
            column: 53
          },
          end: {
            line: 59,
            column: 54
          }
        },
        loc: {
          start: {
            line: 59,
            column: 70
          },
          end: {
            line: 61,
            column: 5
          }
        },
        line: 59
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 63,
            column: 50
          },
          end: {
            line: 63,
            column: 51
          }
        },
        loc: {
          start: {
            line: 63,
            column: 67
          },
          end: {
            line: 65,
            column: 5
          }
        },
        line: 63
      },
      "13": {
        name: "exportSiteHandler",
        decl: {
          start: {
            line: 90,
            column: 15
          },
          end: {
            line: 90,
            column: 32
          }
        },
        loc: {
          start: {
            line: 90,
            column: 54
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 90
      },
      "14": {
        name: "createZipArchive",
        decl: {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 31
          }
        },
        loc: {
          start: {
            line: 241,
            column: 59
          },
          end: {
            line: 276,
            column: 1
          }
        },
        line: 241
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 242,
            column: 24
          }
        },
        loc: {
          start: {
            line: 242,
            column: 44
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 242
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 256,
            column: 27
          },
          end: {
            line: 256,
            column: 28
          }
        },
        loc: {
          start: {
            line: 256,
            column: 33
          },
          end: {
            line: 260,
            column: 9
          }
        },
        line: 256
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 261,
            column: 28
          },
          end: {
            line: 261,
            column: 29
          }
        },
        loc: {
          start: {
            line: 261,
            column: 37
          },
          end: {
            line: 271,
            column: 9
          }
        },
        line: 261
      },
      "18": {
        name: "createBagItArchive",
        decl: {
          start: {
            line: 280,
            column: 15
          },
          end: {
            line: 280,
            column: 33
          }
        },
        loc: {
          start: {
            line: 280,
            column: 84
          },
          end: {
            line: 442,
            column: 1
          }
        },
        line: 280
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 332,
            column: 26
          },
          end: {
            line: 332,
            column: 27
          }
        },
        loc: {
          start: {
            line: 332,
            column: 47
          },
          end: {
            line: 395,
            column: 9
          }
        },
        line: 332
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 335,
            column: 30
          },
          end: {
            line: 335,
            column: 31
          }
        },
        loc: {
          start: {
            line: 335,
            column: 64
          },
          end: {
            line: 393,
            column: 13
          }
        },
        line: 335
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 342,
            column: 30
          },
          end: {
            line: 342,
            column: 31
          }
        },
        loc: {
          start: {
            line: 342,
            column: 40
          },
          end: {
            line: 392,
            column: 17
          }
        },
        line: 342
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 351,
            column: 54
          },
          end: {
            line: 351,
            column: 55
          }
        },
        loc: {
          start: {
            line: 351,
            column: 63
          },
          end: {
            line: 360,
            column: 33
          }
        },
        line: 351
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 385,
            column: 49
          },
          end: {
            line: 385,
            column: 50
          }
        },
        loc: {
          start: {
            line: 385,
            column: 55
          },
          end: {
            line: 389,
            column: 25
          }
        },
        line: 385
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 397,
            column: 26
          },
          end: {
            line: 397,
            column: 27
          }
        },
        loc: {
          start: {
            line: 397,
            column: 39
          },
          end: {
            line: 401,
            column: 9
          }
        },
        line: 397
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 398,
            column: 25
          },
          end: {
            line: 398,
            column: 26
          }
        },
        loc: {
          start: {
            line: 398,
            column: 31
          },
          end: {
            line: 400,
            column: 13
          }
        },
        line: 398
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 416,
            column: 55
          },
          end: {
            line: 416,
            column: 56
          }
        },
        loc: {
          start: {
            line: 416,
            column: 65
          },
          end: {
            line: 416,
            column: 100
          }
        },
        line: 416
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 417,
            column: 25
          },
          end: {
            line: 417,
            column: 26
          }
        },
        loc: {
          start: {
            line: 417,
            column: 34
          },
          end: {
            line: 432,
            column: 9
          }
        },
        line: 417
      },
      "28": {
        name: "createZipArchiveFromDirectory",
        decl: {
          start: {
            line: 446,
            column: 15
          },
          end: {
            line: 446,
            column: 44
          }
        },
        loc: {
          start: {
            line: 446,
            column: 68
          },
          end: {
            line: 461,
            column: 1
          }
        },
        line: 446
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 447,
            column: 23
          },
          end: {
            line: 447,
            column: 24
          }
        },
        loc: {
          start: {
            line: 447,
            column: 44
          },
          end: {
            line: 460,
            column: 5
          }
        },
        line: 447
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 450,
            column: 27
          },
          end: {
            line: 450,
            column: 28
          }
        },
        loc: {
          start: {
            line: 450,
            column: 33
          },
          end: {
            line: 452,
            column: 9
          }
        },
        line: 450
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 453,
            column: 28
          },
          end: {
            line: 453,
            column: 29
          }
        },
        loc: {
          start: {
            line: 453,
            column: 37
          },
          end: {
            line: 456,
            column: 9
          }
        },
        line: 453
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 124
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 78
          }
        }, {
          start: {
            line: 92,
            column: 81
          },
          end: {
            line: 92,
            column: 124
          }
        }],
        line: 92
      },
      "21": {
        loc: {
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "22": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: 104,
            column: 13
          },
          end: {
            line: 113,
            column: 9
          }
        }],
        line: 101
      },
      "23": {
        loc: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 111,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 108
      },
      "24": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 123,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "25": {
        loc: {
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 8
          },
          end: {
            line: 135,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "26": {
        loc: {
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 12
          },
          end: {
            line: 134,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "27": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 149,
            column: 9
          }
        }],
        line: 138
      },
      "28": {
        loc: {
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 149,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 13
          },
          end: {
            line: 149,
            column: 9
          }
        }, {
          start: {
            line: 146,
            column: 13
          },
          end: {
            line: 149,
            column: 9
          }
        }],
        line: 142
      },
      "29": {
        loc: {
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 156,
            column: 8
          },
          end: {
            line: 158,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 156
      },
      "30": {
        loc: {
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 156,
            column: 12
          },
          end: {
            line: 156,
            column: 27
          }
        }, {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 47
          }
        }],
        line: 156
      },
      "31": {
        loc: {
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: 167,
            column: 13
          },
          end: {
            line: 172,
            column: 9
          }
        }],
        line: 164
      },
      "32": {
        loc: {
          start: {
            line: 167,
            column: 13
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 167,
            column: 13
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: 170,
            column: 13
          },
          end: {
            line: 172,
            column: 9
          }
        }],
        line: 167
      },
      "33": {
        loc: {
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 178,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 178
      },
      "34": {
        loc: {
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 194,
            column: 12
          },
          end: {
            line: 196,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 194
      },
      "35": {
        loc: {
          start: {
            line: 198,
            column: 35
          },
          end: {
            line: 198,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 198,
            column: 82
          },
          end: {
            line: 198,
            column: 111
          }
        }, {
          start: {
            line: 198,
            column: 114
          },
          end: {
            line: 198,
            column: 125
          }
        }],
        line: 198
      },
      "36": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 213,
            column: 13
          }
        }],
        line: 202
      },
      "37": {
        loc: {
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 204,
            column: 16
          },
          end: {
            line: 208,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 204
      },
      "38": {
        loc: {
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 213,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 211,
            column: 17
          },
          end: {
            line: 213,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 211
      },
      "39": {
        loc: {
          start: {
            line: 221,
            column: 24
          },
          end: {
            line: 221,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 221,
            column: 52
          },
          end: {
            line: 221,
            column: 68
          }
        }, {
          start: {
            line: 221,
            column: 71
          },
          end: {
            line: 221,
            column: 87
          }
        }],
        line: 221
      },
      "40": {
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 233,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 233,
            column: 45
          },
          end: {
            line: 233,
            column: 58
          }
        }, {
          start: {
            line: 233,
            column: 61
          },
          end: {
            line: 233,
            column: 74
          }
        }],
        line: 233
      },
      "41": {
        loc: {
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 8
          },
          end: {
            line: 253,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "42": {
        loc: {
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 282,
            column: 8
          },
          end: {
            line: 291,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 282
      },
      "43": {
        loc: {
          start: {
            line: 301,
            column: 28
          },
          end: {
            line: 301,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 28
          },
          end: {
            line: 301,
            column: 47
          }
        }, {
          start: {
            line: 301,
            column: 51
          },
          end: {
            line: 301,
            column: 58
          }
        }],
        line: 301
      },
      "44": {
        loc: {
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 302,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 302,
            column: 49
          }
        }, {
          start: {
            line: 302,
            column: 53
          },
          end: {
            line: 302,
            column: 93
          }
        }],
        line: 302
      },
      "45": {
        loc: {
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 317,
            column: 8
          },
          end: {
            line: 319,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 317
      },
      "46": {
        loc: {
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 320,
            column: 8
          },
          end: {
            line: 322,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 320
      },
      "47": {
        loc: {
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 323,
            column: 8
          },
          end: {
            line: 325,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 323
      },
      "48": {
        loc: {
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 8
          },
          end: {
            line: 328,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "49": {
        loc: {
          start: {
            line: 335,
            column: 42
          },
          end: {
            line: 335,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 335,
            column: 57
          },
          end: {
            line: 335,
            column: 59
          }
        }],
        line: 335
      },
      "50": {
        loc: {
          start: {
            line: 338,
            column: 16
          },
          end: {
            line: 341,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 338,
            column: 16
          },
          end: {
            line: 341,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 338
      },
      "51": {
        loc: {
          start: {
            line: 345,
            column: 20
          },
          end: {
            line: 391,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 345,
            column: 20
          },
          end: {
            line: 391,
            column: 21
          }
        }, {
          start: {
            line: 378,
            column: 25
          },
          end: {
            line: 391,
            column: 21
          }
        }],
        line: 345
      },
      "52": {
        loc: {
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 376,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 24
          },
          end: {
            line: 376,
            column: 25
          }
        }, {
          start: {
            line: 370,
            column: 29
          },
          end: {
            line: 376,
            column: 25
          }
        }],
        line: 347
      },
      "53": {
        loc: {
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 368,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 349,
            column: 28
          },
          end: {
            line: 368,
            column: 29
          }
        }, {
          start: {
            line: 362,
            column: 33
          },
          end: {
            line: 368,
            column: 29
          }
        }],
        line: 349
      },
      "54": {
        loc: {
          start: {
            line: 352,
            column: 36
          },
          end: {
            line: 354,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 352,
            column: 36
          },
          end: {
            line: 354,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 352
      },
      "55": {
        loc: {
          start: {
            line: 358,
            column: 36
          },
          end: {
            line: 359,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 36
          },
          end: {
            line: 359,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "56": {
        loc: {
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 367,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 366,
            column: 32
          },
          end: {
            line: 367,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 366
      },
      "57": {
        loc: {
          start: {
            line: 374,
            column: 28
          },
          end: {
            line: 375,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 374,
            column: 28
          },
          end: {
            line: 375,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 374
      },
      "58": {
        loc: {
          start: {
            line: 387,
            column: 28
          },
          end: {
            line: 388,
            column: 42
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 387,
            column: 28
          },
          end: {
            line: 388,
            column: 42
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 387
      },
      "59": {
        loc: {
          start: {
            line: 420,
            column: 16
          },
          end: {
            line: 427,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 420,
            column: 16
          },
          end: {
            line: 427,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 420
      },
      "60": {
        loc: {
          start: {
            line: 421,
            column: 20
          },
          end: {
            line: 426,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 421,
            column: 20
          },
          end: {
            line: 426,
            column: 21
          }
        }, {
          start: {
            line: 424,
            column: 25
          },
          end: {
            line: 426,
            column: 21
          }
        }],
        line: 421
      },
      "61": {
        loc: {
          start: {
            line: 437,
            column: 20
          },
          end: {
            line: 437,
            column: 74
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 437,
            column: 45
          },
          end: {
            line: 437,
            column: 58
          }
        }, {
          start: {
            line: 437,
            column: 61
          },
          end: {
            line: 437,
            column: 74
          }
        }],
        line: 437
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/export.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/export.ts"],
      sourcesContent: ["/**\n * @file IPC handlers for website export functionality\n */\nimport { ipcMain, BrowserWindow, dialog, IpcMainEvent } from 'electron';\nimport Eleventy from '@11ty/eleventy';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as os from 'os';\nimport archiver from 'archiver';\nimport BagIt from 'bagit-fs';\nimport { getBagItMetadata, BagItMetadata } from '../ui/window-manager';\nimport {\n  getAllWebsiteWindows,\n  isWebsiteEditorFocused,\n  getCurrentWebsiteEditorProject,\n} from '../ui/multi-window-manager';\nimport { getWebsitePath } from '../utils/website-manager';\n\n/**\n * Setup export functionality IPC handlers.\n */\nexport function setupExportHandlers(): void {\n  // Export site to folder handler\n  ipcMain.on('menu-export-site-folder', async (event) => {\n    await exportSiteHandler(event, false);\n  });\n\n  // Export site to zip handler\n  ipcMain.on('menu-export-site-zip', async (event) => {\n    await exportSiteHandler(event, true);\n  });\n}\n\n/**\n * Handle export site requests for folder, zip, and bagit formats\n *\n * Exports the currently focused website in the requested format:\n * - false/undefined: Export as folder\n * - true: Export as ZIP archive\n * - 'bagit': Export as BagIt archival format with metadata collection\n *\n * The function automatically builds the site using Eleventy before export,\n * shows appropriate save dialogs, and handles progress feedback to the user.\n * @param event IPC main event (null when called directly)\n * @param exportFormat Export format: false (folder), true (ZIP), or 'bagit' (BagIt archive)\n * @returns Promise that resolves when export is complete\n * @throws Will show error dialogs to user on export failure\n * @example\n * ```typescript\n * // Export as ZIP\n * await exportSiteHandler(null, true);\n *\n * // Export as BagIt with metadata\n * await exportSiteHandler(null, 'bagit');\n * ```\n */\nexport async function exportSiteHandler(event: IpcMainEvent | null, exportFormat: boolean | 'bagit'): Promise<void> {\n  // Get window from event or focused window\n  const win = event ? BrowserWindow.fromWebContents(event.sender) : BrowserWindow.getFocusedWindow();\n  if (!win) {\n    return;\n  }\n\n  try {\n    // Get the currently focused website window to determine which website to export\n    const focusedWindow = BrowserWindow.getFocusedWindow();\n    let websiteToExport: string | null = null;\n\n    // First check if any website window is focused\n    if (isWebsiteEditorFocused()) {\n      websiteToExport = getCurrentWebsiteEditorProject();\n    } else {\n      // Find which website window is focused from the website windows map\n      const websiteWindows = getAllWebsiteWindows();\n      for (const [websiteName, websiteWindow] of Array.from(websiteWindows)) {\n        if (websiteWindow.window === focusedWindow) {\n          websiteToExport = websiteName;\n          break;\n        }\n      }\n    }\n\n    if (!websiteToExport) {\n      dialog.showMessageBox(win, {\n        type: 'info',\n        title: 'No Website Selected',\n        message: 'Please open a website window first',\n        detail: 'To export a website, you need to have a website window open and focused.',\n        buttons: ['OK'],\n      });\n      return;\n    }\n\n    // Determine export format details\n    const isBagIt = exportFormat === 'bagit';\n    const isZip = exportFormat === true;\n\n    // For BagIt exports, collect metadata first\n    let metadata: BagItMetadata | null = null;\n    if (isBagIt) {\n      metadata = await getBagItMetadata(websiteToExport);\n      if (!metadata) {\n        // User cancelled the metadata dialog\n        return;\n      }\n    }\n\n    let defaultExtension = '';\n    let filters: { name: string; extensions: string[] }[] = [];\n\n    if (isBagIt) {\n      defaultExtension = '.bagit.zip';\n      filters = [{ name: 'BagIt Archive', extensions: ['zip'] }];\n    } else if (isZip) {\n      defaultExtension = '.zip';\n      filters = [{ name: 'Zip Archive', extensions: ['zip'] }];\n    } else {\n      defaultExtension = '';\n      filters = [{ name: 'Folder', extensions: [] }];\n    }\n\n    // Show appropriate save dialog based on export type\n    const result = await dialog.showSaveDialog(win, {\n      title: `Export ${websiteToExport}`,\n      defaultPath: websiteToExport + defaultExtension,\n      filters,\n    });\n\n    if (result.canceled || !result.filePath) {\n      return;\n    }\n\n    const exportPath = result.filePath;\n\n    // Get the website source path\n    const websitePath = getWebsitePath(websiteToExport);\n\n    // Determine the build output directory\n    let buildDir: string;\n    if (isBagIt) {\n      buildDir = exportPath.replace('.bagit.zip', '');\n    } else if (isZip) {\n      buildDir = exportPath.replace('.zip', '');\n    } else {\n      buildDir = exportPath;\n    }\n\n    // Build the current website in the target directory using Eleventy programmatic API\n    try {\n      // Look for .eleventy.js config file in the website directory\n      const configPath = path.join(websitePath, '.eleventy.js');\n      let eleventyConfig: unknown;\n\n      if (fs.existsSync(configPath)) {\n        try {\n          // Clear the require cache to ensure we get fresh config\n          delete require.cache[require.resolve(configPath)];\n          // eslint-disable-next-line @typescript-eslint/no-require-imports\n          eleventyConfig = require(configPath);\n        } catch (error) {\n          console.warn(`Failed to load config from ${configPath}, using default config:`, error);\n          eleventyConfig = undefined;\n        }\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const eleventyOptions: any = {\n        quietMode: false,\n      };\n\n      if (eleventyConfig) {\n        eleventyOptions.config = eleventyConfig;\n      }\n\n      // Account for the new src/ directory structure\n      const actualInputDir = fs.existsSync(path.join(websitePath, 'src')) ? path.join(websitePath, 'src') : websitePath;\n\n      const elev = new Eleventy(actualInputDir, buildDir, eleventyOptions);\n\n      await elev.write();\n\n      // Handle different export formats\n      if (isBagIt) {\n        // Use metadata collected before save dialog\n        if (!metadata) {\n          // This should not happen since we check above, but add safety check\n          fs.rmSync(buildDir, { recursive: true, force: true });\n          return;\n        }\n        await createBagItArchive(buildDir, exportPath, websiteToExport, win, metadata);\n      } else if (isZip) {\n        await createZipArchive(buildDir, exportPath, win);\n      }\n    } catch (buildErr) {\n      console.error('Build failed:', buildErr);\n      dialog.showMessageBox(win, {\n        type: 'error',\n        title: 'Export Failed',\n        message: 'Failed to build website for export',\n        detail: buildErr instanceof Error ? buildErr.message : String(buildErr),\n        buttons: ['OK'],\n      });\n      return;\n    }\n  } catch (error) {\n    console.error('Export failed:', error);\n    dialog.showMessageBox(win, {\n      type: 'error',\n      title: 'Export Failed',\n      message: 'Failed to export website',\n      detail: error instanceof Error ? error.message : String(error),\n      buttons: ['OK'],\n    });\n  }\n}\n\n/**\n * Create a zip archive from the build directory.\n */\nasync function createZipArchive(buildDir: string, exportPath: string, win: BrowserWindow): Promise<void> {\n  return new Promise((resolve, reject) => {\n    if (!fs.existsSync(buildDir)) {\n      dialog.showMessageBox(win, {\n        type: 'error',\n        title: 'Export Failed',\n        message: 'Built website not found',\n        detail: 'The build directory was not found after building.',\n        buttons: ['OK'],\n      });\n      reject(new Error('Build directory not found'));\n      return;\n    }\n\n    const output = fs.createWriteStream(exportPath);\n    const archive = archiver('zip', { zlib: { level: 9 } });\n\n    output.on('close', () => {\n      // Clean up the temporary build directory\n      fs.rmSync(buildDir, { recursive: true, force: true });\n      resolve();\n    });\n\n    archive.on('error', (err: Error) => {\n      console.error('Zip archive error:', err);\n      dialog.showMessageBox(win, {\n        type: 'error',\n        title: 'Export Failed',\n        message: 'Failed to create zip archive',\n        detail: err.message,\n        buttons: ['OK'],\n      });\n      reject(err);\n    });\n\n    archive.pipe(output);\n    archive.directory(buildDir, false);\n    archive.finalize();\n  });\n}\n\n/**\n * Create a BagIt archive from the build directory using Gladstone.\n */\nasync function createBagItArchive(\n  buildDir: string,\n  exportPath: string,\n  websiteName: string,\n  win: BrowserWindow,\n  metadata: BagItMetadata\n): Promise<void> {\n  try {\n    if (!fs.existsSync(buildDir)) {\n      dialog.showMessageBox(win, {\n        type: 'error',\n        title: 'Export Failed',\n        message: 'Built website not found',\n        detail: 'The build directory was not found after building.',\n        buttons: ['OK'],\n      });\n      throw new Error('Build directory not found');\n    }\n\n    // Create a unique temporary directory in the OS tmp directory\n    const tmpDir = os.tmpdir();\n    const uniqueId = `${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n    const tempBagDir = path.join(tmpDir, `anglesite_bagit_${uniqueId}`);\n\n    // Get package info for bag metadata\n    const packageJsonPath = path.join(process.cwd(), 'package.json');\n    let bagSoftwareAgent = 'Anglesite';\n\n    try {\n      const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));\n      const version = packageJson.version || '0.1.0';\n      const homepage = packageJson.homepage || 'https://github.com/anglesite/anglesite';\n      bagSoftwareAgent = `Anglesite ${version} ${homepage}`;\n    } catch (error) {\n      console.warn('Could not read package.json for BagIt metadata:', error);\n    }\n\n    // Prepare BagIt metadata\n    const bagMetadata: { [key: string]: string } = {\n      'External-Description': metadata.externalDescription,\n      'External-Identifier': metadata.externalIdentifier,\n      'Source-Organization': metadata.sourceOrganization,\n      'Bagging-Date': new Date().toISOString().split('T')[0],\n      'Bag-Software-Agent': bagSoftwareAgent,\n    };\n\n    // Add optional fields only if provided\n    if (metadata.organizationAddress.trim()) {\n      bagMetadata['Organization-Address'] = metadata.organizationAddress;\n    }\n    if (metadata.contactName.trim()) {\n      bagMetadata['Contact-Name'] = metadata.contactName;\n    }\n    if (metadata.contactPhone.trim()) {\n      bagMetadata['Contact-Phone'] = metadata.contactPhone;\n    }\n    if (metadata.contactEmail.trim()) {\n      bagMetadata['Contact-Email'] = metadata.contactEmail;\n    }\n\n    // Create the bag using bagit-fs\n    const bag = BagIt(tempBagDir, 'sha256', bagMetadata);\n\n    // Copy all files from build directory to bag\n    await new Promise<void>((resolve, reject) => {\n      // Track created directories to avoid redundant mkdir calls\n      const createdDirs = new Set<string>();\n\n      const copyFiles = (sourceDir: string, targetPrefix = '') => {\n        const files = fs.readdirSync(sourceDir, { withFileTypes: true });\n        let pending = files.length;\n\n        if (pending === 0) {\n          resolve();\n          return;\n        }\n\n        files.forEach((file) => {\n          const sourcePath = path.join(sourceDir, file.name);\n          const targetPath = path.join(targetPrefix, file.name);\n\n          if (file.isDirectory()) {\n            // Create the directory in the bag if it has a path\n            if (targetPath) {\n              const bagDirPath = targetPath;\n              if (!createdDirs.has(bagDirPath)) {\n                createdDirs.add(bagDirPath);\n                bag.mkdir(bagDirPath, (err) => {\n                  if (err) {\n                    console.warn(`Failed to create directory ${bagDirPath}:`, err);\n                  }\n                  // Recursively copy directory contents\n                  copyFiles(sourcePath, targetPath);\n                  pending--;\n                  if (pending === 0) resolve();\n                });\n              } else {\n                // Directory already created, just recurse\n                copyFiles(sourcePath, targetPath);\n                pending--;\n                if (pending === 0) resolve();\n              }\n            } else {\n              // Root level, just recurse\n              copyFiles(sourcePath, targetPath);\n              pending--;\n              if (pending === 0) resolve();\n            }\n          } else {\n            // Copy file to bag\n            const readStream = fs.createReadStream(sourcePath);\n            // Use relative path - BagIt library automatically handles /data/ prefix\n            const bagPath = targetPath;\n            const writeStream = bag.createWriteStream(bagPath);\n\n            readStream.pipe(writeStream);\n            writeStream.on('finish', () => {\n              pending--;\n              if (pending === 0) resolve();\n            });\n            writeStream.on('error', reject);\n          }\n        });\n      };\n\n      copyFiles(buildDir);\n    });\n\n    // Finalize the bag\n    await new Promise<void>((resolve) => {\n      bag.finalize(() => {\n        resolve();\n      });\n    });\n\n    // Create a temporary zip file from the bag\n    const tempZipPath = path.join(tmpDir, `anglesite_bagit_${uniqueId}.zip`);\n    await createZipArchiveFromDirectory(tempBagDir, tempZipPath);\n\n    // Copy the completed archive to the user-selected location\n    fs.copyFileSync(tempZipPath, exportPath);\n\n    // Clean up temporary files and directories\n    fs.rmSync(tempBagDir, { recursive: true, force: true });\n    fs.rmSync(tempZipPath, { force: true });\n    fs.rmSync(buildDir, { recursive: true, force: true });\n  } catch (error) {\n    console.error('BagIt archive creation failed:', error);\n\n    // Clean up any temporary files on error\n    const tmpDir = os.tmpdir();\n    const tempDirs = fs.readdirSync(tmpDir).filter((name) => name.startsWith('anglesite_bagit_'));\n    tempDirs.forEach((dir) => {\n      try {\n        const fullPath = path.join(tmpDir, dir);\n        if (fs.existsSync(fullPath)) {\n          if (fs.statSync(fullPath).isDirectory()) {\n            fs.rmSync(fullPath, { recursive: true, force: true });\n          } else {\n            fs.rmSync(fullPath, { force: true });\n          }\n        }\n      } catch (cleanupError) {\n        console.warn('Failed to clean up temporary file:', dir, cleanupError);\n      }\n    });\n\n    dialog.showMessageBox(win, {\n      type: 'error',\n      title: 'Export Failed',\n      message: 'Failed to create BagIt archive',\n      detail: error instanceof Error ? error.message : String(error),\n      buttons: ['OK'],\n    });\n    throw error;\n  }\n}\n\n/**\n * Helper function to create a zip archive from a directory.\n */\nasync function createZipArchiveFromDirectory(sourceDir: string, outputPath: string): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const output = fs.createWriteStream(outputPath);\n    const archive = archiver('zip', { zlib: { level: 9 } });\n\n    output.on('close', () => {\n      resolve();\n    });\n\n    archive.on('error', (err: Error) => {\n      console.error('BagIt zip archive error:', err);\n      reject(err);\n    });\n\n    archive.pipe(output);\n    archive.directory(sourceDir, false);\n    archive.finalize();\n  });\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "cb3d7542f9cafc367d17d9ce0bcc7ee1a04668f0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1a0vsgllm2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1a0vsgllm2();
var __createBinding =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[0]++,
/* istanbul ignore next */
(cov_1a0vsgllm2().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1a0vsgllm2().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1a0vsgllm2().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1a0vsgllm2().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[0]++;
  cov_1a0vsgllm2().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().b[2][0]++;
    cov_1a0vsgllm2().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1a0vsgllm2().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1a0vsgllm2().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1a0vsgllm2().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[5][1]++,
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().b[3][0]++;
    cov_1a0vsgllm2().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1a0vsgllm2().f[1]++;
        cov_1a0vsgllm2().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1a0vsgllm2().b[3][1]++;
  }
  cov_1a0vsgllm2().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1a0vsgllm2().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[2]++;
  cov_1a0vsgllm2().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().b[7][0]++;
    cov_1a0vsgllm2().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1a0vsgllm2().b[7][1]++;
  }
  cov_1a0vsgllm2().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[11]++,
/* istanbul ignore next */
(cov_1a0vsgllm2().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1a0vsgllm2().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1a0vsgllm2().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1a0vsgllm2().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[3]++;
  cov_1a0vsgllm2().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1a0vsgllm2().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[4]++;
  cov_1a0vsgllm2().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[14]++,
/* istanbul ignore next */
(cov_1a0vsgllm2().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1a0vsgllm2().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1a0vsgllm2().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[5]++;
  cov_1a0vsgllm2().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[6]++;
    cov_1a0vsgllm2().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[17]++, []);
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[12][0]++;
          cov_1a0vsgllm2().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1a0vsgllm2().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[8]++;
    cov_1a0vsgllm2().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[13][0]++;
      cov_1a0vsgllm2().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[26]++, {});
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[15][0]++;
      cov_1a0vsgllm2().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1a0vsgllm2().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1a0vsgllm2().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[16][0]++;
          cov_1a0vsgllm2().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[15][1]++;
    }
    cov_1a0vsgllm2().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[35]++,
/* istanbul ignore next */
(cov_1a0vsgllm2().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1a0vsgllm2().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1a0vsgllm2().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[9]++;
  cov_1a0vsgllm2().s[36]++;
  return /* istanbul ignore next */(cov_1a0vsgllm2().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1a0vsgllm2().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1a0vsgllm2().s[38]++;
exports.setupExportHandlers = setupExportHandlers;
/* istanbul ignore next */
cov_1a0vsgllm2().s[39]++;
exports.exportSiteHandler = exportSiteHandler;
/**
 * @file IPC handlers for website export functionality
 */
const electron_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[40]++, require("electron"));
const eleventy_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[41]++, __importDefault(require("@11ty/eleventy")));
const fs =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[42]++, __importStar(require("fs")));
const path =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[43]++, __importStar(require("path")));
const os =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[44]++, __importStar(require("os")));
const archiver_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[45]++, __importDefault(require("archiver")));
const bagit_fs_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[46]++, __importDefault(require("bagit-fs")));
const window_manager_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[47]++, require("../ui/window-manager"));
const multi_window_manager_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[48]++, require("../ui/multi-window-manager"));
const website_manager_1 =
/* istanbul ignore next */
(cov_1a0vsgllm2().s[49]++, require("../utils/website-manager"));
/**
 * Setup export functionality IPC handlers.
 */
function setupExportHandlers() {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[10]++;
  cov_1a0vsgllm2().s[50]++;
  // Export site to folder handler
  electron_1.ipcMain.on('menu-export-site-folder', async event => {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[11]++;
    cov_1a0vsgllm2().s[51]++;
    await exportSiteHandler(event, false);
  });
  // Export site to zip handler
  /* istanbul ignore next */
  cov_1a0vsgllm2().s[52]++;
  electron_1.ipcMain.on('menu-export-site-zip', async event => {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[12]++;
    cov_1a0vsgllm2().s[53]++;
    await exportSiteHandler(event, true);
  });
}
/**
 * Handle export site requests for folder, zip, and bagit formats
 *
 * Exports the currently focused website in the requested format:
 * - false/undefined: Export as folder
 * - true: Export as ZIP archive
 * - 'bagit': Export as BagIt archival format with metadata collection
 *
 * The function automatically builds the site using Eleventy before export,
 * shows appropriate save dialogs, and handles progress feedback to the user.
 * @param event IPC main event (null when called directly)
 * @param exportFormat Export format: false (folder), true (ZIP), or 'bagit' (BagIt archive)
 * @returns Promise that resolves when export is complete
 * @throws Will show error dialogs to user on export failure
 * @example
 * ```typescript
 * // Export as ZIP
 * await exportSiteHandler(null, true);
 *
 * // Export as BagIt with metadata
 * await exportSiteHandler(null, 'bagit');
 * ```
 */
async function exportSiteHandler(event, exportFormat) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[13]++;
  // Get window from event or focused window
  const win =
  /* istanbul ignore next */
  (cov_1a0vsgllm2().s[54]++, event ?
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[20][0]++, electron_1.BrowserWindow.fromWebContents(event.sender)) :
  /* istanbul ignore next */
  (cov_1a0vsgllm2().b[20][1]++, electron_1.BrowserWindow.getFocusedWindow()));
  /* istanbul ignore next */
  cov_1a0vsgllm2().s[55]++;
  if (!win) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().b[21][0]++;
    cov_1a0vsgllm2().s[56]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_1a0vsgllm2().b[21][1]++;
  }
  cov_1a0vsgllm2().s[57]++;
  try {
    // Get the currently focused website window to determine which website to export
    const focusedWindow =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[58]++, electron_1.BrowserWindow.getFocusedWindow());
    let websiteToExport =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[59]++, null);
    // First check if any website window is focused
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[60]++;
    if ((0, multi_window_manager_1.isWebsiteEditorFocused)()) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[22][0]++;
      cov_1a0vsgllm2().s[61]++;
      websiteToExport = (0, multi_window_manager_1.getCurrentWebsiteEditorProject)();
    } else {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[22][1]++;
      // Find which website window is focused from the website windows map
      const websiteWindows =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[62]++, (0, multi_window_manager_1.getAllWebsiteWindows)());
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[63]++;
      for (const [websiteName, websiteWindow] of Array.from(websiteWindows)) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[64]++;
        if (websiteWindow.window === focusedWindow) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[23][0]++;
          cov_1a0vsgllm2().s[65]++;
          websiteToExport = websiteName;
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[66]++;
          break;
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[23][1]++;
        }
      }
    }
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[67]++;
    if (!websiteToExport) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[24][0]++;
      cov_1a0vsgllm2().s[68]++;
      electron_1.dialog.showMessageBox(win, {
        type: 'info',
        title: 'No Website Selected',
        message: 'Please open a website window first',
        detail: 'To export a website, you need to have a website window open and focused.',
        buttons: ['OK']
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[69]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[24][1]++;
    }
    // Determine export format details
    const isBagIt =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[70]++, exportFormat === 'bagit');
    const isZip =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[71]++, exportFormat === true);
    // For BagIt exports, collect metadata first
    let metadata =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[72]++, null);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[73]++;
    if (isBagIt) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[25][0]++;
      cov_1a0vsgllm2().s[74]++;
      metadata = await (0, window_manager_1.getBagItMetadata)(websiteToExport);
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[75]++;
      if (!metadata) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[26][0]++;
        cov_1a0vsgllm2().s[76]++;
        // User cancelled the metadata dialog
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1a0vsgllm2().b[26][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[25][1]++;
    }
    let defaultExtension =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[77]++, '');
    let filters =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[78]++, []);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[79]++;
    if (isBagIt) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[27][0]++;
      cov_1a0vsgllm2().s[80]++;
      defaultExtension = '.bagit.zip';
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[81]++;
      filters = [{
        name: 'BagIt Archive',
        extensions: ['zip']
      }];
    } else {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[27][1]++;
      cov_1a0vsgllm2().s[82]++;
      if (isZip) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[28][0]++;
        cov_1a0vsgllm2().s[83]++;
        defaultExtension = '.zip';
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[84]++;
        filters = [{
          name: 'Zip Archive',
          extensions: ['zip']
        }];
      } else {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[28][1]++;
        cov_1a0vsgllm2().s[85]++;
        defaultExtension = '';
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[86]++;
        filters = [{
          name: 'Folder',
          extensions: []
        }];
      }
    }
    // Show appropriate save dialog based on export type
    const result =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[87]++, await electron_1.dialog.showSaveDialog(win, {
      title: `Export ${websiteToExport}`,
      defaultPath: websiteToExport + defaultExtension,
      filters
    }));
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[88]++;
    if (
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[30][0]++, result.canceled) ||
    /* istanbul ignore next */
    (cov_1a0vsgllm2().b[30][1]++, !result.filePath)) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[29][0]++;
      cov_1a0vsgllm2().s[89]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[29][1]++;
    }
    const exportPath =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[90]++, result.filePath);
    // Get the website source path
    const websitePath =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[91]++, (0, website_manager_1.getWebsitePath)(websiteToExport));
    // Determine the build output directory
    let buildDir;
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[92]++;
    if (isBagIt) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[31][0]++;
      cov_1a0vsgllm2().s[93]++;
      buildDir = exportPath.replace('.bagit.zip', '');
    } else {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[31][1]++;
      cov_1a0vsgllm2().s[94]++;
      if (isZip) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[32][0]++;
        cov_1a0vsgllm2().s[95]++;
        buildDir = exportPath.replace('.zip', '');
      } else {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[32][1]++;
        cov_1a0vsgllm2().s[96]++;
        buildDir = exportPath;
      }
    }
    // Build the current website in the target directory using Eleventy programmatic API
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[97]++;
    try {
      // Look for .eleventy.js config file in the website directory
      const configPath =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[98]++, path.join(websitePath, '.eleventy.js'));
      let eleventyConfig;
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[99]++;
      if (fs.existsSync(configPath)) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[33][0]++;
        cov_1a0vsgllm2().s[100]++;
        try {
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[101]++;
          // Clear the require cache to ensure we get fresh config
          delete require.cache[require.resolve(configPath)];
          // eslint-disable-next-line @typescript-eslint/no-require-imports
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[102]++;
          eleventyConfig = require(configPath);
        } catch (error) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[103]++;
          console.warn(`Failed to load config from ${configPath}, using default config:`, error);
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[104]++;
          eleventyConfig = undefined;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1a0vsgllm2().b[33][1]++;
      }
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      const eleventyOptions =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[105]++, {
        quietMode: false
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[106]++;
      if (eleventyConfig) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[34][0]++;
        cov_1a0vsgllm2().s[107]++;
        eleventyOptions.config = eleventyConfig;
      } else
      /* istanbul ignore next */
      {
        cov_1a0vsgllm2().b[34][1]++;
      }
      // Account for the new src/ directory structure
      const actualInputDir =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[108]++, fs.existsSync(path.join(websitePath, 'src')) ?
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[35][0]++, path.join(websitePath, 'src')) :
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[35][1]++, websitePath));
      const elev =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[109]++, new eleventy_1.default(actualInputDir, buildDir, eleventyOptions));
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[110]++;
      await elev.write();
      // Handle different export formats
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[111]++;
      if (isBagIt) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[36][0]++;
        cov_1a0vsgllm2().s[112]++;
        // Use metadata collected before save dialog
        if (!metadata) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[37][0]++;
          cov_1a0vsgllm2().s[113]++;
          // This should not happen since we check above, but add safety check
          fs.rmSync(buildDir, {
            recursive: true,
            force: true
          });
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[114]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[37][1]++;
        }
        cov_1a0vsgllm2().s[115]++;
        await createBagItArchive(buildDir, exportPath, websiteToExport, win, metadata);
      } else {
        /* istanbul ignore next */
        cov_1a0vsgllm2().b[36][1]++;
        cov_1a0vsgllm2().s[116]++;
        if (isZip) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[38][0]++;
          cov_1a0vsgllm2().s[117]++;
          await createZipArchive(buildDir, exportPath, win);
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[38][1]++;
        }
      }
    } catch (buildErr) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[118]++;
      console.error('Build failed:', buildErr);
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[119]++;
      electron_1.dialog.showMessageBox(win, {
        type: 'error',
        title: 'Export Failed',
        message: 'Failed to build website for export',
        detail: buildErr instanceof Error ?
        /* istanbul ignore next */
        (cov_1a0vsgllm2().b[39][0]++, buildErr.message) :
        /* istanbul ignore next */
        (cov_1a0vsgllm2().b[39][1]++, String(buildErr)),
        buttons: ['OK']
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[120]++;
      return;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[121]++;
    console.error('Export failed:', error);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[122]++;
    electron_1.dialog.showMessageBox(win, {
      type: 'error',
      title: 'Export Failed',
      message: 'Failed to export website',
      detail: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[40][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[40][1]++, String(error)),
      buttons: ['OK']
    });
  }
}
/**
 * Create a zip archive from the build directory.
 */
async function createZipArchive(buildDir, exportPath, win) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[14]++;
  cov_1a0vsgllm2().s[123]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[15]++;
    cov_1a0vsgllm2().s[124]++;
    if (!fs.existsSync(buildDir)) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[41][0]++;
      cov_1a0vsgllm2().s[125]++;
      electron_1.dialog.showMessageBox(win, {
        type: 'error',
        title: 'Export Failed',
        message: 'Built website not found',
        detail: 'The build directory was not found after building.',
        buttons: ['OK']
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[126]++;
      reject(new Error('Build directory not found'));
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[127]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[41][1]++;
    }
    const output =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[128]++, fs.createWriteStream(exportPath));
    const archive =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[129]++, (0, archiver_1.default)('zip', {
      zlib: {
        level: 9
      }
    }));
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[130]++;
    output.on('close', () => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[16]++;
      cov_1a0vsgllm2().s[131]++;
      // Clean up the temporary build directory
      fs.rmSync(buildDir, {
        recursive: true,
        force: true
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[132]++;
      resolve();
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[133]++;
    archive.on('error', err => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[17]++;
      cov_1a0vsgllm2().s[134]++;
      console.error('Zip archive error:', err);
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[135]++;
      electron_1.dialog.showMessageBox(win, {
        type: 'error',
        title: 'Export Failed',
        message: 'Failed to create zip archive',
        detail: err.message,
        buttons: ['OK']
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[136]++;
      reject(err);
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[137]++;
    archive.pipe(output);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[138]++;
    archive.directory(buildDir, false);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[139]++;
    archive.finalize();
  });
}
/**
 * Create a BagIt archive from the build directory using Gladstone.
 */
async function createBagItArchive(buildDir, exportPath, websiteName, win, metadata) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[18]++;
  cov_1a0vsgllm2().s[140]++;
  try {
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[141]++;
    if (!fs.existsSync(buildDir)) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[42][0]++;
      cov_1a0vsgllm2().s[142]++;
      electron_1.dialog.showMessageBox(win, {
        type: 'error',
        title: 'Export Failed',
        message: 'Built website not found',
        detail: 'The build directory was not found after building.',
        buttons: ['OK']
      });
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[143]++;
      throw new Error('Build directory not found');
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[42][1]++;
    }
    // Create a unique temporary directory in the OS tmp directory
    const tmpDir =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[144]++, os.tmpdir());
    const uniqueId =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[145]++, `${Date.now()}-${Math.random().toString(36).substring(2, 9)}`);
    const tempBagDir =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[146]++, path.join(tmpDir, `anglesite_bagit_${uniqueId}`));
    // Get package info for bag metadata
    const packageJsonPath =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[147]++, path.join(process.cwd(), 'package.json'));
    let bagSoftwareAgent =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[148]++, 'Anglesite');
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[149]++;
    try {
      const packageJson =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[150]++, JSON.parse(fs.readFileSync(packageJsonPath, 'utf8')));
      const version =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[151]++,
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[43][0]++, packageJson.version) ||
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[43][1]++, '0.1.0'));
      const homepage =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[152]++,
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[44][0]++, packageJson.homepage) ||
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[44][1]++, 'https://github.com/anglesite/anglesite'));
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[153]++;
      bagSoftwareAgent = `Anglesite ${version} ${homepage}`;
    } catch (error) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[154]++;
      console.warn('Could not read package.json for BagIt metadata:', error);
    }
    // Prepare BagIt metadata
    const bagMetadata =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[155]++, {
      'External-Description': metadata.externalDescription,
      'External-Identifier': metadata.externalIdentifier,
      'Source-Organization': metadata.sourceOrganization,
      'Bagging-Date': new Date().toISOString().split('T')[0],
      'Bag-Software-Agent': bagSoftwareAgent
    });
    // Add optional fields only if provided
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[156]++;
    if (metadata.organizationAddress.trim()) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[45][0]++;
      cov_1a0vsgllm2().s[157]++;
      bagMetadata['Organization-Address'] = metadata.organizationAddress;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[45][1]++;
    }
    cov_1a0vsgllm2().s[158]++;
    if (metadata.contactName.trim()) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[46][0]++;
      cov_1a0vsgllm2().s[159]++;
      bagMetadata['Contact-Name'] = metadata.contactName;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[46][1]++;
    }
    cov_1a0vsgllm2().s[160]++;
    if (metadata.contactPhone.trim()) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[47][0]++;
      cov_1a0vsgllm2().s[161]++;
      bagMetadata['Contact-Phone'] = metadata.contactPhone;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[47][1]++;
    }
    cov_1a0vsgllm2().s[162]++;
    if (metadata.contactEmail.trim()) {
      /* istanbul ignore next */
      cov_1a0vsgllm2().b[48][0]++;
      cov_1a0vsgllm2().s[163]++;
      bagMetadata['Contact-Email'] = metadata.contactEmail;
    } else
    /* istanbul ignore next */
    {
      cov_1a0vsgllm2().b[48][1]++;
    }
    // Create the bag using bagit-fs
    const bag =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[164]++, (0, bagit_fs_1.default)(tempBagDir, 'sha256', bagMetadata));
    // Copy all files from build directory to bag
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[165]++;
    await new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[19]++;
      // Track created directories to avoid redundant mkdir calls
      const createdDirs =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().s[166]++, new Set());
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[167]++;
      const copyFiles = (sourceDir, targetPrefix =
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[49][0]++, '')) => {
        /* istanbul ignore next */
        cov_1a0vsgllm2().f[20]++;
        const files =
        /* istanbul ignore next */
        (cov_1a0vsgllm2().s[168]++, fs.readdirSync(sourceDir, {
          withFileTypes: true
        }));
        let pending =
        /* istanbul ignore next */
        (cov_1a0vsgllm2().s[169]++, files.length);
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[170]++;
        if (pending === 0) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[50][0]++;
          cov_1a0vsgllm2().s[171]++;
          resolve();
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[172]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[50][1]++;
        }
        cov_1a0vsgllm2().s[173]++;
        files.forEach(file => {
          /* istanbul ignore next */
          cov_1a0vsgllm2().f[21]++;
          const sourcePath =
          /* istanbul ignore next */
          (cov_1a0vsgllm2().s[174]++, path.join(sourceDir, file.name));
          const targetPath =
          /* istanbul ignore next */
          (cov_1a0vsgllm2().s[175]++, path.join(targetPrefix, file.name));
          /* istanbul ignore next */
          cov_1a0vsgllm2().s[176]++;
          if (file.isDirectory()) {
            /* istanbul ignore next */
            cov_1a0vsgllm2().b[51][0]++;
            cov_1a0vsgllm2().s[177]++;
            // Create the directory in the bag if it has a path
            if (targetPath) {
              /* istanbul ignore next */
              cov_1a0vsgllm2().b[52][0]++;
              const bagDirPath =
              /* istanbul ignore next */
              (cov_1a0vsgllm2().s[178]++, targetPath);
              /* istanbul ignore next */
              cov_1a0vsgllm2().s[179]++;
              if (!createdDirs.has(bagDirPath)) {
                /* istanbul ignore next */
                cov_1a0vsgllm2().b[53][0]++;
                cov_1a0vsgllm2().s[180]++;
                createdDirs.add(bagDirPath);
                /* istanbul ignore next */
                cov_1a0vsgllm2().s[181]++;
                bag.mkdir(bagDirPath, err => {
                  /* istanbul ignore next */
                  cov_1a0vsgllm2().f[22]++;
                  cov_1a0vsgllm2().s[182]++;
                  if (err) {
                    /* istanbul ignore next */
                    cov_1a0vsgllm2().b[54][0]++;
                    cov_1a0vsgllm2().s[183]++;
                    console.warn(`Failed to create directory ${bagDirPath}:`, err);
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1a0vsgllm2().b[54][1]++;
                  }
                  // Recursively copy directory contents
                  cov_1a0vsgllm2().s[184]++;
                  copyFiles(sourcePath, targetPath);
                  /* istanbul ignore next */
                  cov_1a0vsgllm2().s[185]++;
                  pending--;
                  /* istanbul ignore next */
                  cov_1a0vsgllm2().s[186]++;
                  if (pending === 0) {
                    /* istanbul ignore next */
                    cov_1a0vsgllm2().b[55][0]++;
                    cov_1a0vsgllm2().s[187]++;
                    resolve();
                  } else
                  /* istanbul ignore next */
                  {
                    cov_1a0vsgllm2().b[55][1]++;
                  }
                });
              } else {
                /* istanbul ignore next */
                cov_1a0vsgllm2().b[53][1]++;
                cov_1a0vsgllm2().s[188]++;
                // Directory already created, just recurse
                copyFiles(sourcePath, targetPath);
                /* istanbul ignore next */
                cov_1a0vsgllm2().s[189]++;
                pending--;
                /* istanbul ignore next */
                cov_1a0vsgllm2().s[190]++;
                if (pending === 0) {
                  /* istanbul ignore next */
                  cov_1a0vsgllm2().b[56][0]++;
                  cov_1a0vsgllm2().s[191]++;
                  resolve();
                } else
                /* istanbul ignore next */
                {
                  cov_1a0vsgllm2().b[56][1]++;
                }
              }
            } else {
              /* istanbul ignore next */
              cov_1a0vsgllm2().b[52][1]++;
              cov_1a0vsgllm2().s[192]++;
              // Root level, just recurse
              copyFiles(sourcePath, targetPath);
              /* istanbul ignore next */
              cov_1a0vsgllm2().s[193]++;
              pending--;
              /* istanbul ignore next */
              cov_1a0vsgllm2().s[194]++;
              if (pending === 0) {
                /* istanbul ignore next */
                cov_1a0vsgllm2().b[57][0]++;
                cov_1a0vsgllm2().s[195]++;
                resolve();
              } else
              /* istanbul ignore next */
              {
                cov_1a0vsgllm2().b[57][1]++;
              }
            }
          } else {
            /* istanbul ignore next */
            cov_1a0vsgllm2().b[51][1]++;
            // Copy file to bag
            const readStream =
            /* istanbul ignore next */
            (cov_1a0vsgllm2().s[196]++, fs.createReadStream(sourcePath));
            // Use relative path - BagIt library automatically handles /data/ prefix
            const bagPath =
            /* istanbul ignore next */
            (cov_1a0vsgllm2().s[197]++, targetPath);
            const writeStream =
            /* istanbul ignore next */
            (cov_1a0vsgllm2().s[198]++, bag.createWriteStream(bagPath));
            /* istanbul ignore next */
            cov_1a0vsgllm2().s[199]++;
            readStream.pipe(writeStream);
            /* istanbul ignore next */
            cov_1a0vsgllm2().s[200]++;
            writeStream.on('finish', () => {
              /* istanbul ignore next */
              cov_1a0vsgllm2().f[23]++;
              cov_1a0vsgllm2().s[201]++;
              pending--;
              /* istanbul ignore next */
              cov_1a0vsgllm2().s[202]++;
              if (pending === 0) {
                /* istanbul ignore next */
                cov_1a0vsgllm2().b[58][0]++;
                cov_1a0vsgllm2().s[203]++;
                resolve();
              } else
              /* istanbul ignore next */
              {
                cov_1a0vsgllm2().b[58][1]++;
              }
            });
            /* istanbul ignore next */
            cov_1a0vsgllm2().s[204]++;
            writeStream.on('error', reject);
          }
        });
      };
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[205]++;
      copyFiles(buildDir);
    });
    // Finalize the bag
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[206]++;
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[24]++;
      cov_1a0vsgllm2().s[207]++;
      bag.finalize(() => {
        /* istanbul ignore next */
        cov_1a0vsgllm2().f[25]++;
        cov_1a0vsgllm2().s[208]++;
        resolve();
      });
    });
    // Create a temporary zip file from the bag
    const tempZipPath =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[209]++, path.join(tmpDir, `anglesite_bagit_${uniqueId}.zip`));
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[210]++;
    await createZipArchiveFromDirectory(tempBagDir, tempZipPath);
    // Copy the completed archive to the user-selected location
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[211]++;
    fs.copyFileSync(tempZipPath, exportPath);
    // Clean up temporary files and directories
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[212]++;
    fs.rmSync(tempBagDir, {
      recursive: true,
      force: true
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[213]++;
    fs.rmSync(tempZipPath, {
      force: true
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[214]++;
    fs.rmSync(buildDir, {
      recursive: true,
      force: true
    });
  } catch (error) {
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[215]++;
    console.error('BagIt archive creation failed:', error);
    // Clean up any temporary files on error
    const tmpDir =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[216]++, os.tmpdir());
    const tempDirs =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[217]++, fs.readdirSync(tmpDir).filter(name => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[26]++;
      cov_1a0vsgllm2().s[218]++;
      return name.startsWith('anglesite_bagit_');
    }));
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[219]++;
    tempDirs.forEach(dir => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[27]++;
      cov_1a0vsgllm2().s[220]++;
      try {
        const fullPath =
        /* istanbul ignore next */
        (cov_1a0vsgllm2().s[221]++, path.join(tmpDir, dir));
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[222]++;
        if (fs.existsSync(fullPath)) {
          /* istanbul ignore next */
          cov_1a0vsgllm2().b[59][0]++;
          cov_1a0vsgllm2().s[223]++;
          if (fs.statSync(fullPath).isDirectory()) {
            /* istanbul ignore next */
            cov_1a0vsgllm2().b[60][0]++;
            cov_1a0vsgllm2().s[224]++;
            fs.rmSync(fullPath, {
              recursive: true,
              force: true
            });
          } else {
            /* istanbul ignore next */
            cov_1a0vsgllm2().b[60][1]++;
            cov_1a0vsgllm2().s[225]++;
            fs.rmSync(fullPath, {
              force: true
            });
          }
        } else
        /* istanbul ignore next */
        {
          cov_1a0vsgllm2().b[59][1]++;
        }
      } catch (cleanupError) {
        /* istanbul ignore next */
        cov_1a0vsgllm2().s[226]++;
        console.warn('Failed to clean up temporary file:', dir, cleanupError);
      }
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[227]++;
    electron_1.dialog.showMessageBox(win, {
      type: 'error',
      title: 'Export Failed',
      message: 'Failed to create BagIt archive',
      detail: error instanceof Error ?
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[61][0]++, error.message) :
      /* istanbul ignore next */
      (cov_1a0vsgllm2().b[61][1]++, String(error)),
      buttons: ['OK']
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[228]++;
    throw error;
  }
}
/**
 * Helper function to create a zip archive from a directory.
 */
async function createZipArchiveFromDirectory(sourceDir, outputPath) {
  /* istanbul ignore next */
  cov_1a0vsgllm2().f[28]++;
  cov_1a0vsgllm2().s[229]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_1a0vsgllm2().f[29]++;
    const output =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[230]++, fs.createWriteStream(outputPath));
    const archive =
    /* istanbul ignore next */
    (cov_1a0vsgllm2().s[231]++, (0, archiver_1.default)('zip', {
      zlib: {
        level: 9
      }
    }));
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[232]++;
    output.on('close', () => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[30]++;
      cov_1a0vsgllm2().s[233]++;
      resolve();
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[234]++;
    archive.on('error', err => {
      /* istanbul ignore next */
      cov_1a0vsgllm2().f[31]++;
      cov_1a0vsgllm2().s[235]++;
      console.error('BagIt zip archive error:', err);
      /* istanbul ignore next */
      cov_1a0vsgllm2().s[236]++;
      reject(err);
    });
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[237]++;
    archive.pipe(output);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[238]++;
    archive.directory(sourceDir, false);
    /* istanbul ignore next */
    cov_1a0vsgllm2().s[239]++;
    archive.finalize();
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,