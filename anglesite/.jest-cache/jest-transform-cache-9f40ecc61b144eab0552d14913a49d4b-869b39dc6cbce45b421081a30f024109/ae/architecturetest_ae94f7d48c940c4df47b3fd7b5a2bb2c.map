{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/architecture.test.ts","mappings":";AAAA;;GAEG;;AAIH,+EAA+E;AAC/E,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE;IAC7C,MAAM,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,8BAA8B,CAAC,CAAC;IAE1E,8BAA8B;IAC9B,MAAM,SAAS,GAAG;QAChB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,EAAE,2BAA2B;QACrE,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;QACd,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,EAAE,CAAC;QACrC,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;QACjB,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE;QAChB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,KAAK,CAAC;KACtC,CAAC;IAEF,+BAA+B;IAC/B,MAAM,iBAAiB,GAAG;QACxB,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,EAAE;YAClC,IAAI,WAAW,KAAK,OAAO,EAAE,CAAC;gBAC5B,OAAO,SAAS,CAAC;YACnB,CAAC;YACD,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC;QACF,aAAa,EAAE,IAAI;KACpB,CAAC;IAEF,OAAO;QACL,GAAG,cAAc;QACjB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,iBAAiB,CAAC;QAC9D,gBAAgB,EAAE,iBAAiB;KACpC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,2CAA2C;AAC3C,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3B,GAAG,EAAE;QACH,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,+BAAc,CAAC,KAAK,CAAC,SAAS,CAAC;KACvD;IACD,WAAW,EAAE;QACX,mBAAmB,EAAE,KAAK;QAC1B,WAAW,EAAE,QAAQ;QACrB,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;KACd;IACD,OAAO,EAAE;QACP,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;QACjB,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;KACd;IACD,aAAa,EAAE;QACb,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;KACjC;CACF,CAAC,CAAC,CAAC;AAnDJ,+DAA4D;AAqD5D,0EAA0E;AAC1E,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC;AAClC,SAAS,CAAC,GAAG,EAAE;IACb,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC3B,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,GAAG,EAAE;IACZ,OAAO,CAAC,IAAI,GAAG,YAAY,CAAC;AAC9B,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;YAClC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YAChE,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;YACtC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YAC9D,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YACpE,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;YAChE,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE,GAAG,EAAE;YACpC,MAAM,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;YACrD,MAAM,aAAa,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;YAC1D,MAAM,CAAC,OAAO,aAAa,CAAC,0BAA0B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACzE,MAAM,CAAC,OAAO,aAAa,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjE,MAAM,CAAC,OAAO,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;YACvC,MAAM,CAAC,OAAO,IAAI,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC7D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,QAAQ,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;YACnD,MAAM,CAAC,OAAO,QAAQ,CAAC,yBAAyB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnE,MAAM,CAAC,OAAO,QAAQ,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,qBAAqB;QACtF,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,GAAG,EAAE;YACtD,MAAM,cAAc,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAC/D,MAAM,CAAC,OAAO,cAAc,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4CAA4C,EAAE,GAAG,EAAE;YACpD,MAAM,YAAY,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;YACzD,MAAM,CAAC,OAAO,YAAY,CAAC,qBAAqB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACnE,MAAM,CAAC,OAAO,YAAY,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC9D,MAAM,CAAC,OAAO,YAAY,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7D,MAAM,CAAC,OAAO,YAAY,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,0CAA0C,EAAE,GAAG,EAAE;YAClD,MAAM,EAAE,yBAAyB,EAAE,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;YAExE,MAAM,CACJ,yBAAyB,CACvB,WAAW,+BAAc,CAAC,QAAQ,CAAC,OAAO,IAAI,+BAAc,CAAC,OAAO,CAAC,WAAW,IAAI,+BAAc,CAAC,KAAK,CAAC,aAAa,EAAE,CACzH,CACF,CAAC,IAAI,CAAC,GAAG,+BAAc,CAAC,QAAQ,CAAC,OAAO,IAAI,+BAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;YACnF,MAAM,CACJ,yBAAyB,CACvB,WAAW,+BAAc,CAAC,QAAQ,CAAC,YAAY,IAAI,+BAAc,CAAC,OAAO,CAAC,WAAW,IAAI,+BAAc,CAAC,KAAK,CAAC,aAAa,EAAE,CAC9H,CACF,CAAC,IAAI,CAAC,GAAG,+BAAc,CAAC,QAAQ,CAAC,YAAY,IAAI,+BAAc,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;QAC1F,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAExE,2CAA2C;YAC3C,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC3D,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,2BAA2B;YACvF,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,sBAAsB;YACjF,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB;YAE/E,gBAAgB;YAChB,MAAM,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;YAC3D,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc;YACnE,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB;YACjF,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB;YACnF,MAAM,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,cAAc;YACxE,MAAM,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe;YACvE,MAAM,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB;YAC9E,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY;YAC3E,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ;YACpE,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB;YAC7E,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS;YACxE,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO;YACnE,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,gBAAgB;YAC7E,MAAM,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,WAAW;YACvE,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,wBAAwB;YAC9E,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,2CAA2C;QACnG,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE;YAChE,MAAM,EAAE,mBAAmB,EAAE,GAAG,OAAO,CAAC,8BAA8B,CAAC,CAAC;YAExE,4CAA4C;YAC5C,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACtD,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjE,MAAM,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7D,MAAM,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnE,MAAM,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxD,MAAM,CAAC,mBAAmB,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC9D,MAAM,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAEhE,+DAA+D;YAC/D,MAAM,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;YACzC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAEtD,yDAAyD;YACzD,MAAM,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,kCAAkC;YAC5F,MAAM,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,+BAA+B;QAC7F,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE;YAC5D,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;YAE7B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;YAC9D,MAAM,WAAW,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YAEtD,0CAA0C;YAC1C,MAAM,SAAS,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;YACjD,MAAM,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,+BAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,qEAAqE;YAErI,6BAA6B;YAC7B,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC;YAChE,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC;YAChE,uEAAuE;YACvE,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAClD,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mCAAmC,EAAE,GAAG,EAAE;YAC3C,MAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YACzB,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;YAE7B,iCAAiC;YACjC,MAAM,OAAO,GAAG;gBACd,sBAAsB;gBACtB,YAAY;gBACZ,oBAAoB;gBACpB,uBAAuB;gBACvB,iBAAiB;gBACjB,0BAA0B;gBAC1B,sBAAsB;gBACtB,iBAAiB;aAClB,CAAC;YAEF,OAAO,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,EAAE;gBAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;gBAC/D,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/architecture.test.ts"],"sourcesContent":["/**\n * @file Simple architecture validation tests\n */\n\nimport { TEST_CONSTANTS } from './constants/test-constants';\n\n// Mock the global context system to prevent initialization errors during tests\njest.mock('../app/core/service-registry', () => {\n  const originalModule = jest.requireActual('../app/core/service-registry');\n\n  // Create a mock store service\n  const mockStore = {\n    get: jest.fn().mockReturnValue('system'), // Default theme preference\n    set: jest.fn(),\n    getAll: jest.fn().mockReturnValue({}),\n    delete: jest.fn(),\n    clear: jest.fn(),\n    has: jest.fn().mockReturnValue(false),\n  };\n\n  // Create a mock global context\n  const mockGlobalContext = {\n    getService: jest.fn((serviceName) => {\n      if (serviceName === 'store') {\n        return mockStore;\n      }\n      return {};\n    }),\n    isInitialized: true,\n  };\n\n  return {\n    ...originalModule,\n    getGlobalContext: jest.fn().mockReturnValue(mockGlobalContext),\n    globalAppContext: mockGlobalContext,\n  };\n});\n\n// Mock Electron modules before any imports\njest.mock('electron', () => ({\n  app: {\n    getPath: jest.fn(() => TEST_CONSTANTS.PATHS.MOCK_PATH),\n  },\n  nativeTheme: {\n    shouldUseDarkColors: false,\n    themeSource: 'system',\n    on: jest.fn(),\n  },\n  ipcMain: {\n    handle: jest.fn(),\n    on: jest.fn(),\n  },\n  BrowserWindow: {\n    getAllWindows: jest.fn(() => []),\n  },\n}));\n\n// Mock console.warn to suppress deprecated function warnings during tests\nconst originalWarn = console.warn;\nbeforeAll(() => {\n  console.warn = jest.fn();\n});\n\nafterAll(() => {\n  console.warn = originalWarn;\n});\n\ndescribe('Modular Architecture', () => {\n  describe('Module Imports', () => {\n    it('should import UI modules', () => {\n      expect(() => require('../app/ui/window-manager')).not.toThrow();\n      expect(() => require('../app/ui/menu')).not.toThrow();\n    });\n\n    it('should import server modules', () => {\n      expect(() => require('../app/server/eleventy')).not.toThrow();\n      expect(() => require('../app/server/https-proxy')).not.toThrow();\n    });\n\n    it('should import utility modules', () => {\n      expect(() => require('../app/utils/website-manager')).not.toThrow();\n      expect(() => require('../app/dns/hosts-manager')).not.toThrow();\n      expect(() => require('../app/certificates')).not.toThrow();\n    });\n\n    it('should import IPC handlers', () => {\n      expect(() => require('../app/ipc/handlers')).not.toThrow();\n    });\n  });\n\n  describe('Function Exports', () => {\n    it('should export functions from window manager', () => {\n      const windowManager = require('../app/ui/window-manager');\n      expect(typeof windowManager.openWebsiteSelectionWindow).toBe('function');\n      expect(typeof windowManager.openSettingsWindow).toBe('function');\n      expect(typeof windowManager.getNativeInput).toBe('function');\n    });\n\n    it('should export functions from menu module', () => {\n      const menu = require('../app/ui/menu');\n      expect(typeof menu.createApplicationMenu).toBe('function');\n    });\n\n    it('should export functions from eleventy server', () => {\n      const eleventy = require('../app/server/eleventy');\n      expect(typeof eleventy.getHostnameFromTestDomain).toBe('function');\n      expect(typeof eleventy.validateWebsiteName).toBe('undefined'); // Not in this module\n    });\n\n    it('should export functions from website manager', () => {\n      const websiteManager = require('../app/utils/website-manager');\n      expect(typeof websiteManager.validateWebsiteName).toBe('function');\n    });\n\n    it('should export functions from hosts manager', () => {\n      const hostsManager = require('../app/dns/hosts-manager');\n      expect(typeof hostsManager.addLocalDnsResolution).toBe('function');\n      expect(typeof hostsManager.cleanupHostsFile).toBe('function');\n      expect(typeof hostsManager.updateHostsFile).toBe('function');\n      expect(typeof hostsManager.checkAndSuggestTouchIdSetup).toBe('function');\n    });\n  });\n\n  describe('Pure Functions', () => {\n    it('should extract hostnames from valid URLs', () => {\n      const { getHostnameFromTestDomain } = require('../app/server/eleventy');\n\n      expect(\n        getHostnameFromTestDomain(\n          `https://${TEST_CONSTANTS.WEBSITES.MY_SITE}.${TEST_CONSTANTS.DOMAINS.TEST_DOMAIN}:${TEST_CONSTANTS.PORTS.DEFAULT_HTTPS}`\n        )\n      ).toBe(`${TEST_CONSTANTS.WEBSITES.MY_SITE}.${TEST_CONSTANTS.DOMAINS.TEST_DOMAIN}`);\n      expect(\n        getHostnameFromTestDomain(\n          `https://${TEST_CONSTANTS.WEBSITES.EXAMPLE_SITE}.${TEST_CONSTANTS.DOMAINS.TEST_DOMAIN}:${TEST_CONSTANTS.PORTS.DEFAULT_HTTPS}`\n        )\n      ).toBe(`${TEST_CONSTANTS.WEBSITES.EXAMPLE_SITE}.${TEST_CONSTANTS.DOMAINS.TEST_DOMAIN}`);\n    });\n\n    it('should validate website names', () => {\n      const { validateWebsiteName } = require('../app/utils/website-manager');\n\n      // Valid names (filesystem-safe characters)\n      expect(validateWebsiteName('valid-name').valid).toBe(true);\n      expect(validateWebsiteName('site123').valid).toBe(true);\n      expect(validateWebsiteName('my_site').valid).toBe(true);\n      expect(validateWebsiteName('My Website').valid).toBe(true); // Spaces allowed in middle\n      expect(validateWebsiteName('site (v2)').valid).toBe(true); // Parentheses allowed\n      expect(validateWebsiteName('site+more').valid).toBe(true); // Plus sign allowed\n\n      // Invalid names\n      expect(validateWebsiteName('').valid).toBe(false); // Empty\n      expect(validateWebsiteName('  ').valid).toBe(false); // Only spaces\n      expect(validateWebsiteName(' leading space').valid).toBe(false); // Leading space\n      expect(validateWebsiteName('trailing space ').valid).toBe(false); // Trailing space\n      expect(validateWebsiteName('.hidden').valid).toBe(false); // Leading dot\n      expect(validateWebsiteName('site.').valid).toBe(false); // Trailing dot\n      expect(validateWebsiteName('site/folder').valid).toBe(false); // Forward slash\n      expect(validateWebsiteName('site\\\\folder').valid).toBe(false); // Backslash\n      expect(validateWebsiteName('site:port').valid).toBe(false); // Colon\n      expect(validateWebsiteName('site<tag>').valid).toBe(false); // Angle brackets\n      expect(validateWebsiteName('site\"quoted\"').valid).toBe(false); // Quotes\n      expect(validateWebsiteName('site|pipe').valid).toBe(false); // Pipe\n      expect(validateWebsiteName('site?query').valid).toBe(false); // Question mark\n      expect(validateWebsiteName('site*glob').valid).toBe(false); // Asterisk\n      expect(validateWebsiteName('CON').valid).toBe(false); // Reserved Windows name\n      expect(validateWebsiteName('prn').valid).toBe(false); // Reserved Windows name (case insensitive)\n    });\n\n    it('should prevent path traversal attacks in website names', () => {\n      const { validateWebsiteName } = require('../app/utils/website-manager');\n\n      // Path traversal attempts using double dots\n      expect(validateWebsiteName('..').valid).toBe(false);\n      expect(validateWebsiteName('../').valid).toBe(false);\n      expect(validateWebsiteName('..\\\\').valid).toBe(false);\n      expect(validateWebsiteName('../etc').valid).toBe(false);\n      expect(validateWebsiteName('..\\\\..\\\\windows').valid).toBe(false);\n      expect(validateWebsiteName('site/../etc').valid).toBe(false);\n      expect(validateWebsiteName('site\\\\..\\\\windows').valid).toBe(false);\n      expect(validateWebsiteName('....//').valid).toBe(false);\n      expect(validateWebsiteName('site..parent').valid).toBe(false);\n      expect(validateWebsiteName('normal..butbad').valid).toBe(false);\n\n      // Ensure the error message indicates path traversal protection\n      const result = validateWebsiteName('..');\n      expect(result.valid).toBe(false);\n      expect(result.error).toContain('directory traversal');\n\n      // Valid names that contain dots (but not path traversal)\n      expect(validateWebsiteName('site.com').valid).toBe(true); // Valid, dot in middle is allowed\n      expect(validateWebsiteName('my-site-v2').valid).toBe(true); // Valid, no dots for traversal\n    });\n  });\n\n  describe('Refactoring Success', () => {\n    it('should have moved main.ts from monolith to modular', () => {\n      const fs = require('fs');\n      const path = require('path');\n\n      const mainPath = path.join(__dirname, '..', 'app', 'main.ts');\n      const mainContent = fs.readFileSync(mainPath, 'utf8');\n\n      // Should be much shorter now (refactored)\n      const lineCount = mainContent.split('\\n').length;\n      expect(lineCount).toBeLessThan(TEST_CONSTANTS.SIZES.MAX_LINES); // Was over ${TEST_CONSTANTS.SIZES.COMPLEXITY_THRESHOLD} lines before\n\n      // Should import from modules\n      expect(mainContent).toContain('import { createApplicationMenu');\n      expect(mainContent).toContain('import { setupIpcMainListeners');\n      // Check that DNS management functions are imported (may be multi-line)\n      expect(mainContent).toContain('cleanupHostsFile');\n      expect(mainContent).toContain('checkAndSuggestTouchIdSetup');\n    });\n\n    it('should have separate module files', () => {\n      const fs = require('fs');\n      const path = require('path');\n\n      // Check that modular files exist\n      const modules = [\n        'ui/window-manager.ts',\n        'ui/menu.ts',\n        'server/eleventy.ts',\n        'server/https-proxy.ts',\n        'ipc/handlers.ts',\n        'utils/website-manager.ts',\n        'dns/hosts-manager.ts',\n        'certificates.ts',\n      ];\n\n      modules.forEach((modulePath) => {\n        const fullPath = path.join(__dirname, '..', 'app', modulePath);\n        expect(fs.existsSync(fullPath)).toBe(true);\n      });\n    });\n  });\n});\n"],"version":3}