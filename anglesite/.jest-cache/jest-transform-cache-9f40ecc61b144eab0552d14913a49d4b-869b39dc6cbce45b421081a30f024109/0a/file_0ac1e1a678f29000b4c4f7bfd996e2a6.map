{"version":3,"names":["exports","setupFileHandlers","electron_1","cov_zwptqckgu","s","require","fs","__importStar","path","f","ipcMain","handle","event","websiteName","console","log","getWebsiteServer","Promise","resolve","then","websiteServer","urlResolver","b","fileTree","getFileTree","length","error","relativePath","absolutePath","join","inputDir","content","readFileSync","writeFileSync","filePath","getUrlForFile","getAllWebsiteWindows","websiteWindows","websiteWindow","get","serverUrl","on","fileUrl","window","isDestroyed","webContentsView","webContents","loadURL","_","shell","showItemInFolder","_event","websitePath","loadWebsiteFiles","getGlobalContext","ServiceKeys","appContext","websiteServerManager","getService","WEBSITE_SERVER_MANAGER","serverInfo","startServer","url","port","BrowserWindow","fromWebContents","sender","getTitle","files","existsSync","Error","items","readdirSync","withFileTypes","item","name","startsWith","endsWith","itemPath","stats","statSync","push","type","isDirectory","extension","isFile","extname","modified","mtime","size","sort","a","localeCompare"],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/file.ts"],"sourcesContent":["/**\n * @file IPC handlers for file operations\n */\nimport { ipcMain, shell, BrowserWindow } from 'electron';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { IWebsiteServerManager } from '../core/interfaces';\n\ninterface WebsiteFile {\n  name: string;\n  type: 'directory' | 'file';\n  path: string;\n  extension: string | null;\n  modified: Date;\n  size: number | null;\n}\n\n/**\n * Setup file operations IPC handlers.\n */\nexport function setupFileHandlers(): void {\n  // Website file content handlers\n  ipcMain.handle('get-website-files', async (event, websiteName: string) => {\n    try {\n      console.log(`[IPC] get-website-files called for website: ${websiteName}`);\n      const { getWebsiteServer } = await import('../ui/multi-window-manager');\n      const websiteServer = getWebsiteServer(websiteName);\n      if (!websiteServer?.urlResolver) {\n        console.log(`[IPC] No website server or URL resolver found for: ${websiteName}`);\n        return [];\n      }\n\n      console.log(`[IPC] Getting file tree from URL resolver for: ${websiteName}`);\n      const fileTree = await websiteServer.urlResolver.getFileTree();\n      console.log(`[IPC] File tree retrieved for ${websiteName}: ${fileTree.length} items`);\n      return fileTree;\n    } catch (error) {\n      console.error('Error getting website files:', error);\n      return [];\n    }\n  });\n\n  ipcMain.handle('get-file-content', async (event, websiteName: string, relativePath: string) => {\n    try {\n      console.log(`[IPC] get-file-content called for website: ${websiteName}, file: ${relativePath}`);\n\n      const { getWebsiteServer } = await import('../ui/multi-window-manager');\n      const websiteServer = getWebsiteServer(websiteName);\n\n      if (!websiteServer) {\n        console.error(`[IPC] No website server found for: ${websiteName}`);\n        return null;\n      }\n\n      // Resolve the absolute path using the website server's inputDir (which includes /src/)\n      const fs = await import('fs');\n      const path = await import('path');\n      const absolutePath = path.join(websiteServer.inputDir, relativePath);\n\n      console.log(`[IPC] Reading file from: ${absolutePath}`);\n      const content = fs.readFileSync(absolutePath, 'utf8');\n      return content;\n    } catch (error) {\n      console.error('Error reading file:', error);\n      return null;\n    }\n  });\n\n  ipcMain.handle('save-file-content', async (event, websiteName: string, relativePath: string, content: string) => {\n    try {\n      console.log(`[IPC] save-file-content called for website: ${websiteName}, file: ${relativePath}`);\n\n      const { getWebsiteServer } = await import('../ui/multi-window-manager');\n      const websiteServer = getWebsiteServer(websiteName);\n\n      if (!websiteServer) {\n        console.error(`[IPC] No website server found for: ${websiteName}`);\n        return false;\n      }\n\n      // Resolve the absolute path using the website server's inputDir (which includes /src/)\n      const fs = await import('fs');\n      const path = await import('path');\n      const absolutePath = path.join(websiteServer.inputDir, relativePath);\n\n      console.log(`[IPC] Saving file to: ${absolutePath}`);\n      fs.writeFileSync(absolutePath, content, 'utf8');\n      return true;\n    } catch (error) {\n      console.error('Error saving file:', error);\n      return false;\n    }\n  });\n\n  ipcMain.handle('get-file-url', async (event, websiteName: string, filePath: string) => {\n    try {\n      const { getWebsiteServer } = await import('../ui/multi-window-manager');\n      const websiteServer = getWebsiteServer(websiteName);\n      if (!websiteServer?.urlResolver) {\n        return null;\n      }\n\n      return websiteServer.urlResolver.getUrlForFile(filePath);\n    } catch (error) {\n      console.error('Error getting file URL:', error);\n      return null;\n    }\n  });\n\n  ipcMain.handle('get-website-server-url', async (event, websiteName: string) => {\n    try {\n      const { getAllWebsiteWindows } = await import('../ui/multi-window-manager');\n      const websiteWindows = getAllWebsiteWindows();\n      const websiteWindow = websiteWindows.get(websiteName);\n\n      if (!websiteWindow?.serverUrl) {\n        return null;\n      }\n\n      return websiteWindow.serverUrl;\n    } catch (error) {\n      console.error('Error getting website server URL:', error);\n      return null;\n    }\n  });\n\n  ipcMain.on('load-file-preview', async (event, websiteName: string, fileUrl: string) => {\n    try {\n      const { getAllWebsiteWindows } = await import('../ui/multi-window-manager');\n      const websiteWindows = getAllWebsiteWindows();\n      const websiteWindow = websiteWindows.get(websiteName);\n\n      if (!websiteWindow || websiteWindow.window.isDestroyed()) {\n        console.error(`Website window not found for preview load: ${websiteName}`);\n        return;\n      }\n\n      if (!websiteWindow.webContentsView || websiteWindow.webContentsView.webContents.isDestroyed()) {\n        console.error(`WebContentsView not available for preview load: ${websiteName}`);\n        return;\n      }\n\n      websiteWindow.webContentsView.webContents.loadURL(fileUrl);\n    } catch (error) {\n      console.error('Error loading file preview:', error);\n    }\n  });\n\n  // File operations\n  ipcMain.on('show-item-in-folder', async (_, filePath: string) => {\n    if (filePath) {\n      shell.showItemInFolder(filePath);\n    }\n  });\n\n  // Website editor handlers\n  ipcMain.handle('load-website-files', async (_event, websitePath: string) => {\n    try {\n      return await loadWebsiteFiles(websitePath);\n    } catch (error) {\n      console.error('Failed to load website files:', error);\n      throw error;\n    }\n  });\n\n  ipcMain.handle('start-website-dev-server', async (_event, websiteName: string, websitePath: string) => {\n    try {\n      // Use the DI-based WebsiteServerManager to start the server\n      const { getGlobalContext } = await import('../core/service-registry');\n      const { ServiceKeys } = await import('../core/container');\n\n      const appContext = getGlobalContext();\n      const websiteServerManager = appContext.getService<IWebsiteServerManager>(ServiceKeys.WEBSITE_SERVER_MANAGER);\n      const serverInfo = await websiteServerManager.startServer(websiteName, websitePath);\n      const serverUrl = serverInfo.url || `http://localhost:${serverInfo.port}`;\n      return serverUrl;\n    } catch (error) {\n      console.error('Failed to start website dev server:', error);\n      throw error;\n    }\n  });\n\n  // Get current window title handler\n  ipcMain.handle('get-current-window-title', async (event) => {\n    try {\n      const window = BrowserWindow.fromWebContents(event.sender);\n      if (window) {\n        return window.getTitle();\n      }\n      return null;\n    } catch (error) {\n      console.error('Error getting current window title:', error);\n      return null;\n    }\n  });\n}\n\n/**\n * Load website files and directories for the file explorer.\n */\nasync function loadWebsiteFiles(websitePath: string): Promise<WebsiteFile[]> {\n  const files: WebsiteFile[] = [];\n\n  if (!fs.existsSync(websitePath)) {\n    throw new Error(`Website path does not exist: ${websitePath}`);\n  }\n\n  const items = fs.readdirSync(websitePath, { withFileTypes: true });\n\n  for (const item of items) {\n    // Skip hidden files, node_modules, build output directories, and 11ty data files\n    if (item.name.startsWith('.') || item.name.startsWith('_') || item.name.endsWith('.11tydata.json')) {\n      continue;\n    }\n\n    const itemPath = path.join(websitePath, item.name);\n    const stats = fs.statSync(itemPath);\n\n    files.push({\n      name: item.name,\n      type: item.isDirectory() ? 'directory' : 'file',\n      path: itemPath,\n      extension: item.isFile() ? path.extname(item.name) : null,\n      modified: stats.mtime,\n      size: item.isFile() ? stats.size : null,\n    });\n  }\n\n  // Sort files first, then directories\n  files.sort((a, b) => {\n    if (a.type === 'directory' && b.type === 'file') return 1;\n    if (a.type === 'file' && b.type === 'directory') return -1;\n    return a.name.localeCompare(b.name);\n  });\n\n  return files;\n}\n"],"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","ignoreList":[]}