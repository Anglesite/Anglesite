30152f9e979639b1573e4063c6bb6dbe
"use strict";

/* istanbul ignore next */
function cov_1b6ieip1r1() {
  var path = "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/server/per-website-server.ts";
  var hash = "9c373a687334d457593940cb23d4af20bd5b8dfb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/server/per-website-server.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 48
        }
      },
      "39": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 46
        }
      },
      "40": {
        start: {
          line: 44,
          column: 13
        },
        end: {
          line: 44,
          column: 42
        }
      },
      "41": {
        start: {
          line: 45,
          column: 11
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "42": {
        start: {
          line: 46,
          column: 32
        },
        end: {
          line: 46,
          column: 66
        }
      },
      "43": {
        start: {
          line: 47,
          column: 18
        },
        end: {
          line: 47,
          column: 45
        }
      },
      "44": {
        start: {
          line: 48,
          column: 19
        },
        end: {
          line: 48,
          column: 61
        }
      },
      "45": {
        start: {
          line: 49,
          column: 30
        },
        end: {
          line: 49,
          column: 83
        }
      },
      "46": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "47": {
        start: {
          line: 56,
          column: 35
        },
        end: {
          line: 56,
          column: 122
        }
      },
      "48": {
        start: {
          line: 56,
          column: 70
        },
        end: {
          line: 56,
          column: 121
        }
      },
      "49": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "50": {
        start: {
          line: 59,
          column: 12
        },
        end: {
          line: 59,
          column: 77
        }
      },
      "51": {
        start: {
          line: 62,
          column: 12
        },
        end: {
          line: 62,
          column: 97
        }
      },
      "52": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "53": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 76,
          column: 94
        }
      },
      "54": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 102
        }
      },
      "55": {
        start: {
          line: 79,
          column: 31
        },
        end: {
          line: 79,
          column: 42
        }
      },
      "56": {
        start: {
          line: 80,
          column: 33
        },
        end: {
          line: 80,
          column: 46
        }
      },
      "57": {
        start: {
          line: 81,
          column: 32
        },
        end: {
          line: 81,
          column: 44
        }
      },
      "58": {
        start: {
          line: 83,
          column: 27
        },
        end: {
          line: 87,
          column: 5
        }
      },
      "59": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 41
        }
      },
      "60": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 45
        }
      },
      "61": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 43
        }
      },
      "62": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "63": {
        start: {
          line: 90,
          column: 26
        },
        end: {
          line: 90,
          column: 54
        }
      },
      "64": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 79
        }
      },
      "65": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 73
        }
      },
      "66": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "67": {
        start: {
          line: 95,
          column: 12
        },
        end: {
          line: 95,
          column: 57
        }
      },
      "68": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 79
        }
      },
      "69": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 83
        }
      },
      "70": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 108,
          column: 10
        }
      },
      "71": {
        start: {
          line: 101,
          column: 28
        },
        end: {
          line: 101,
          column: 42
        }
      },
      "72": {
        start: {
          line: 103,
          column: 12
        },
        end: {
          line: 105,
          column: 13
        }
      },
      "73": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 62
        }
      },
      "74": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 107,
          column: 40
        }
      },
      "75": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "76": {
        start: {
          line: 110,
          column: 28
        },
        end: {
          line: 110,
          column: 42
        }
      },
      "77": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 114,
          column: 13
        }
      },
      "78": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "79": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 42
        }
      },
      "80": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 126,
          column: 10
        }
      },
      "81": {
        start: {
          line: 119,
          column: 28
        },
        end: {
          line: 119,
          column: 42
        }
      },
      "82": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "83": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 65
        }
      },
      "84": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 41
        }
      },
      "85": {
        start: {
          line: 131,
          column: 32
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "86": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 109
        }
      },
      "87": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 97
        }
      },
      "88": {
        start: {
          line: 138,
          column: 24
        },
        end: {
          line: 138,
          column: 50
        }
      },
      "89": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 143,
          column: 9
        }
      },
      "90": {
        start: {
          line: 140,
          column: 29
        },
        end: {
          line: 140,
          column: 74
        }
      },
      "91": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 67
        }
      },
      "92": {
        start: {
          line: 142,
          column: 12
        },
        end: {
          line: 142,
          column: 38
        }
      },
      "93": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 89
        }
      },
      "94": {
        start: {
          line: 149,
          column: 32
        },
        end: {
          line: 149,
          column: 58
        }
      },
      "95": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 98
        }
      },
      "96": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 151,
          column: 93
        }
      },
      "97": {
        start: {
          line: 153,
          column: 42
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "98": {
        start: {
          line: 159,
          column: 42
        },
        end: {
          line: 159,
          column: 80
        }
      },
      "99": {
        start: {
          line: 161,
          column: 43
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "100": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 60
        }
      },
      "101": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 60
        }
      },
      "102": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 169,
          column: 19
        }
      },
      "103": {
        start: {
          line: 171,
          column: 16
        },
        end: {
          line: 173,
          column: 20
        }
      },
      "104": {
        start: {
          line: 171,
          column: 64
        },
        end: {
          line: 173,
          column: 17
        }
      },
      "105": {
        start: {
          line: 175,
          column: 16
        },
        end: {
          line: 186,
          column: 18
        }
      },
      "106": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 97
        }
      },
      "107": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 323,
          column: 9
        }
      },
      "108": {
        start: {
          line: 192,
          column: 12
        },
        end: {
          line: 192,
          column: 79
        }
      },
      "109": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 231,
          column: 13
        }
      },
      "110": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 39
        }
      },
      "111": {
        start: {
          line: 195,
          column: 16
        },
        end: {
          line: 195,
          column: 87
        }
      },
      "112": {
        start: {
          line: 198,
          column: 39
        },
        end: {
          line: 198,
          column: 75
        }
      },
      "113": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 202,
          column: 19
        }
      },
      "114": {
        start: {
          line: 203,
          column: 16
        },
        end: {
          line: 229,
          column: 17
        }
      },
      "115": {
        start: {
          line: 205,
          column: 20
        },
        end: {
          line: 205,
          column: 125
        }
      },
      "116": {
        start: {
          line: 207,
          column: 20
        },
        end: {
          line: 217,
          column: 21
        }
      },
      "117": {
        start: {
          line: 208,
          column: 50
        },
        end: {
          line: 208,
          column: 100
        }
      },
      "118": {
        start: {
          line: 209,
          column: 24
        },
        end: {
          line: 211,
          column: 27
        }
      },
      "119": {
        start: {
          line: 212,
          column: 24
        },
        end: {
          line: 212,
          column: 105
        }
      },
      "120": {
        start: {
          line: 213,
          column: 24
        },
        end: {
          line: 216,
          column: 25
        }
      },
      "121": {
        start: {
          line: 214,
          column: 61
        },
        end: {
          line: 214,
          column: 119
        }
      },
      "122": {
        start: {
          line: 215,
          column: 28
        },
        end: {
          line: 215,
          column: 116
        }
      },
      "123": {
        start: {
          line: 219,
          column: 20
        },
        end: {
          line: 225,
          column: 21
        }
      },
      "124": {
        start: {
          line: 220,
          column: 47
        },
        end: {
          line: 220,
          column: 89
        }
      },
      "125": {
        start: {
          line: 221,
          column: 24
        },
        end: {
          line: 223,
          column: 27
        }
      },
      "126": {
        start: {
          line: 224,
          column: 24
        },
        end: {
          line: 224,
          column: 98
        }
      },
      "127": {
        start: {
          line: 228,
          column: 20
        },
        end: {
          line: 228,
          column: 95
        }
      },
      "128": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 33
        }
      },
      "129": {
        start: {
          line: 233,
          column: 34
        },
        end: {
          line: 233,
          column: 36
        }
      },
      "130": {
        start: {
          line: 235,
          column: 30
        },
        end: {
          line: 266,
          column: 14
        }
      },
      "131": {
        start: {
          line: 244,
          column: 24
        },
        end: {
          line: 244,
          column: 63
        }
      },
      "132": {
        start: {
          line: 246,
          column: 47
        },
        end: {
          line: 246,
          column: 97
        }
      },
      "133": {
        start: {
          line: 247,
          column: 24
        },
        end: {
          line: 249,
          column: 25
        }
      },
      "134": {
        start: {
          line: 248,
          column: 28
        },
        end: {
          line: 248,
          column: 64
        }
      },
      "135": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 250,
          column: 66
        }
      },
      "136": {
        start: {
          line: 253,
          column: 24
        },
        end: {
          line: 253,
          column: 63
        }
      },
      "137": {
        start: {
          line: 255,
          column: 47
        },
        end: {
          line: 255,
          column: 97
        }
      },
      "138": {
        start: {
          line: 256,
          column: 24
        },
        end: {
          line: 258,
          column: 25
        }
      },
      "139": {
        start: {
          line: 257,
          column: 28
        },
        end: {
          line: 257,
          column: 64
        }
      },
      "140": {
        start: {
          line: 259,
          column: 24
        },
        end: {
          line: 259,
          column: 66
        }
      },
      "141": {
        start: {
          line: 262,
          column: 24
        },
        end: {
          line: 262,
          column: 65
        }
      },
      "142": {
        start: {
          line: 263,
          column: 24
        },
        end: {
          line: 263,
          column: 67
        }
      },
      "143": {
        start: {
          line: 268,
          column: 33
        },
        end: {
          line: 268,
          column: 51
        }
      },
      "144": {
        start: {
          line: 269,
          column: 29
        },
        end: {
          line: 269,
          column: 57
        }
      },
      "145": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 49
        }
      },
      "146": {
        start: {
          line: 272,
          column: 12
        },
        end: {
          line: 294,
          column: 13
        }
      },
      "147": {
        start: {
          line: 273,
          column: 16
        },
        end: {
          line: 293,
          column: 19
        }
      },
      "148": {
        start: {
          line: 275,
          column: 20
        },
        end: {
          line: 278,
          column: 21
        }
      },
      "149": {
        start: {
          line: 276,
          column: 24
        },
        end: {
          line: 276,
          column: 116
        }
      },
      "150": {
        start: {
          line: 277,
          column: 24
        },
        end: {
          line: 277,
          column: 31
        }
      },
      "151": {
        start: {
          line: 279,
          column: 20
        },
        end: {
          line: 279,
          column: 92
        }
      },
      "152": {
        start: {
          line: 280,
          column: 20
        },
        end: {
          line: 280,
          column: 83
        }
      },
      "153": {
        start: {
          line: 281,
          column: 20
        },
        end: {
          line: 292,
          column: 21
        }
      },
      "154": {
        start: {
          line: 282,
          column: 24
        },
        end: {
          line: 282,
          column: 47
        }
      },
      "155": {
        start: {
          line: 283,
          column: 24
        },
        end: {
          line: 283,
          column: 97
        }
      },
      "156": {
        start: {
          line: 286,
          column: 47
        },
        end: {
          line: 286,
          column: 78
        }
      },
      "157": {
        start: {
          line: 287,
          column: 24
        },
        end: {
          line: 290,
          column: 27
        }
      },
      "158": {
        start: {
          line: 291,
          column: 24
        },
        end: {
          line: 291,
          column: 101
        }
      },
      "159": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 100
        }
      },
      "160": {
        start: {
          line: 297,
          column: 12
        },
        end: {
          line: 297,
          column: 34
        }
      },
      "161": {
        start: {
          line: 299,
          column: 12
        },
        end: {
          line: 299,
          column: 70
        }
      },
      "162": {
        start: {
          line: 299,
          column: 43
        },
        end: {
          line: 299,
          column: 68
        }
      },
      "163": {
        start: {
          line: 301,
          column: 35
        },
        end: {
          line: 301,
          column: 80
        }
      },
      "164": {
        start: {
          line: 302,
          column: 31
        },
        end: {
          line: 302,
          column: 95
        }
      },
      "165": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 303,
          column: 89
        }
      },
      "166": {
        start: {
          line: 304,
          column: 12
        },
        end: {
          line: 304,
          column: 82
        }
      },
      "167": {
        start: {
          line: 306,
          column: 12
        },
        end: {
          line: 306,
          column: 88
        }
      },
      "168": {
        start: {
          line: 307,
          column: 32
        },
        end: {
          line: 307,
          column: 107
        }
      },
      "169": {
        start: {
          line: 308,
          column: 12
        },
        end: {
          line: 308,
          column: 43
        }
      },
      "170": {
        start: {
          line: 309,
          column: 12
        },
        end: {
          line: 309,
          column: 73
        }
      },
      "171": {
        start: {
          line: 310,
          column: 12
        },
        end: {
          line: 319,
          column: 14
        }
      },
      "172": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 25
        }
      },
      "173": {
        start: {
          line: 328,
          column: 31
        },
        end: {
          line: 328,
          column: 62
        }
      },
      "174": {
        start: {
          line: 329,
          column: 8
        },
        end: {
          line: 332,
          column: 11
        }
      },
      "175": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 93
        }
      },
      "176": {
        start: {
          line: 334,
          column: 8
        },
        end: {
          line: 334,
          column: 20
        }
      },
      "177": {
        start: {
          line: 341,
          column: 4
        },
        end: {
          line: 388,
          column: 5
        }
      },
      "178": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 345,
          column: 9
        }
      },
      "179": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 36
        }
      },
      "180": {
        start: {
          line: 347,
          column: 8
        },
        end: {
          line: 357,
          column: 9
        }
      },
      "181": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 356,
          column: 13
        }
      },
      "182": {
        start: {
          line: 349,
          column: 16
        },
        end: {
          line: 349,
          column: 55
        }
      },
      "183": {
        start: {
          line: 352,
          column: 16
        },
        end: {
          line: 355,
          column: 19
        }
      },
      "184": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 369,
          column: 9
        }
      },
      "185": {
        start: {
          line: 360,
          column: 12
        },
        end: {
          line: 368,
          column: 13
        }
      },
      "186": {
        start: {
          line: 361,
          column: 16
        },
        end: {
          line: 361,
          column: 47
        }
      },
      "187": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 367,
          column: 19
        }
      },
      "188": {
        start: {
          line: 371,
          column: 8
        },
        end: {
          line: 381,
          column: 9
        }
      },
      "189": {
        start: {
          line: 372,
          column: 12
        },
        end: {
          line: 380,
          column: 13
        }
      },
      "190": {
        start: {
          line: 373,
          column: 16
        },
        end: {
          line: 373,
          column: 78
        }
      },
      "191": {
        start: {
          line: 376,
          column: 16
        },
        end: {
          line: 379,
          column: 19
        }
      },
      "192": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 387,
          column: 11
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "sendLogToWindow",
        decl: {
          start: {
            line: 53,
            column: 15
          },
          end: {
            line: 53,
            column: 30
          }
        },
        loc: {
          start: {
            line: 53,
            column: 69
          },
          end: {
            line: 71,
            column: 1
          }
        },
        line: 53
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 56,
            column: 64
          },
          end: {
            line: 56,
            column: 65
          }
        },
        loc: {
          start: {
            line: 56,
            column: 70
          },
          end: {
            line: 56,
            column: 121
          }
        },
        line: 56
      },
      "12": {
        name: "startWebsiteServer",
        decl: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 33
          }
        },
        loc: {
          start: {
            line: 75,
            column: 63
          },
          end: {
            line: 336,
            column: 1
          }
        },
        line: 75
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 83,
            column: 27
          },
          end: {
            line: 83,
            column: 28
          }
        },
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 83
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 100,
            column: 22
          },
          end: {
            line: 100,
            column: 23
          }
        },
        loc: {
          start: {
            line: 100,
            column: 35
          },
          end: {
            line: 108,
            column: 9
          }
        },
        line: 100
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 25
          }
        },
        loc: {
          start: {
            line: 109,
            column: 37
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 109
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 118,
            column: 23
          },
          end: {
            line: 118,
            column: 24
          }
        },
        loc: {
          start: {
            line: 118,
            column: 36
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 118
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 156,
            column: 20
          },
          end: {
            line: 156,
            column: 21
          }
        },
        loc: {
          start: {
            line: 156,
            column: 46
          },
          end: {
            line: 187,
            column: 13
          }
        },
        line: 156
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 171,
            column: 57
          },
          end: {
            line: 171,
            column: 58
          }
        },
        loc: {
          start: {
            line: 171,
            column: 64
          },
          end: {
            line: 173,
            column: 17
          }
        },
        line: 171
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 243,
            column: 25
          },
          end: {
            line: 243,
            column: 26
          }
        },
        loc: {
          start: {
            line: 243,
            column: 34
          },
          end: {
            line: 251,
            column: 21
          }
        },
        line: 243
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 252,
            column: 26
          },
          end: {
            line: 252,
            column: 27
          }
        },
        loc: {
          start: {
            line: 252,
            column: 35
          },
          end: {
            line: 260,
            column: 21
          }
        },
        line: 252
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 261,
            column: 27
          },
          end: {
            line: 261,
            column: 28
          }
        },
        loc: {
          start: {
            line: 261,
            column: 36
          },
          end: {
            line: 264,
            column: 21
          }
        },
        line: 261
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 273,
            column: 47
          },
          end: {
            line: 273,
            column: 48
          }
        },
        loc: {
          start: {
            line: 273,
            column: 70
          },
          end: {
            line: 293,
            column: 17
          }
        },
        line: 273
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 299,
            column: 30
          },
          end: {
            line: 299,
            column: 31
          }
        },
        loc: {
          start: {
            line: 299,
            column: 43
          },
          end: {
            line: 299,
            column: 68
          }
        },
        line: 299
      },
      "24": {
        name: "stopWebsiteServer",
        decl: {
          start: {
            line: 340,
            column: 15
          },
          end: {
            line: 340,
            column: 32
          }
        },
        loc: {
          start: {
            line: 340,
            column: 41
          },
          end: {
            line: 389,
            column: 1
          }
        },
        line: 340
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 53,
            column: 53
          },
          end: {
            line: 53,
            column: 67
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 53,
            column: 61
          },
          end: {
            line: 53,
            column: 67
          }
        }],
        line: 53
      },
      "21": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 63,
            column: 9
          }
        }, {
          start: {
            line: 61,
            column: 13
          },
          end: {
            line: 63,
            column: 9
          }
        }],
        line: 58
      },
      "22": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 97,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "23": {
        loc: {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 105,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "24": {
        loc: {
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 16
          },
          end: {
            line: 103,
            column: 42
          }
        }, {
          start: {
            line: 103,
            column: 46
          },
          end: {
            line: 103,
            column: 74
          }
        }, {
          start: {
            line: 103,
            column: 78
          },
          end: {
            line: 103,
            column: 106
          }
        }],
        line: 103
      },
      "25": {
        loc: {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 114,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "26": {
        loc: {
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 112,
            column: 16
          },
          end: {
            line: 112,
            column: 42
          }
        }, {
          start: {
            line: 112,
            column: 46
          },
          end: {
            line: 112,
            column: 74
          }
        }, {
          start: {
            line: 112,
            column: 78
          },
          end: {
            line: 112,
            column: 106
          }
        }],
        line: 112
      },
      "27": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "28": {
        loc: {
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 106
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 121,
            column: 16
          },
          end: {
            line: 121,
            column: 42
          }
        }, {
          start: {
            line: 121,
            column: 46
          },
          end: {
            line: 121,
            column: 74
          }
        }, {
          start: {
            line: 121,
            column: 78
          },
          end: {
            line: 121,
            column: 106
          }
        }],
        line: 121
      },
      "29": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 143,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "30": {
        loc: {
          start: {
            line: 172,
            column: 31
          },
          end: {
            line: 172,
            column: 118
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 172,
            column: 62
          },
          end: {
            line: 172,
            column: 105
          }
        }, {
          start: {
            line: 172,
            column: 108
          },
          end: {
            line: 172,
            column: 118
          }
        }],
        line: 172
      },
      "31": {
        loc: {
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 203,
            column: 16
          },
          end: {
            line: 229,
            column: 17
          }
        }, {
          start: {
            line: 227,
            column: 21
          },
          end: {
            line: 229,
            column: 17
          }
        }],
        line: 203
      },
      "32": {
        loc: {
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 217,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 20
          },
          end: {
            line: 217,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "33": {
        loc: {
          start: {
            line: 207,
            column: 24
          },
          end: {
            line: 207,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 207,
            column: 24
          },
          end: {
            line: 207,
            column: 53
          }
        }, {
          start: {
            line: 207,
            column: 57
          },
          end: {
            line: 207,
            column: 81
          }
        }],
        line: 207
      },
      "34": {
        loc: {
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 216,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 213,
            column: 24
          },
          end: {
            line: 216,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 213
      },
      "35": {
        loc: {
          start: {
            line: 219,
            column: 20
          },
          end: {
            line: 225,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 219,
            column: 20
          },
          end: {
            line: 225,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 219
      },
      "36": {
        loc: {
          start: {
            line: 219,
            column: 24
          },
          end: {
            line: 219,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 219,
            column: 24
          },
          end: {
            line: 219,
            column: 45
          }
        }, {
          start: {
            line: 219,
            column: 49
          },
          end: {
            line: 219,
            column: 65
          }
        }],
        line: 219
      },
      "37": {
        loc: {
          start: {
            line: 247,
            column: 24
          },
          end: {
            line: 249,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 247,
            column: 24
          },
          end: {
            line: 249,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 247
      },
      "38": {
        loc: {
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 258,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 256,
            column: 24
          },
          end: {
            line: 258,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 256
      },
      "39": {
        loc: {
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 272,
            column: 12
          },
          end: {
            line: 294,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 272
      },
      "40": {
        loc: {
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 278,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 20
          },
          end: {
            line: 278,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 275
      },
      "41": {
        loc: {
          start: {
            line: 301,
            column: 35
          },
          end: {
            line: 301,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 301,
            column: 35
          },
          end: {
            line: 301,
            column: 50
          }
        }, {
          start: {
            line: 301,
            column: 54
          },
          end: {
            line: 301,
            column: 80
          }
        }],
        line: 301
      },
      "42": {
        loc: {
          start: {
            line: 302,
            column: 31
          },
          end: {
            line: 302,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 302,
            column: 49
          },
          end: {
            line: 302,
            column: 88
          }
        }, {
          start: {
            line: 302,
            column: 91
          },
          end: {
            line: 302,
            column: 95
          }
        }],
        line: 302
      },
      "43": {
        loc: {
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 343,
            column: 8
          },
          end: {
            line: 345,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 343
      },
      "44": {
        loc: {
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 347,
            column: 8
          },
          end: {
            line: 357,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 347
      },
      "45": {
        loc: {
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 347,
            column: 12
          },
          end: {
            line: 347,
            column: 28
          }
        }, {
          start: {
            line: 347,
            column: 32
          },
          end: {
            line: 347,
            column: 56
          }
        }],
        line: 347
      },
      "46": {
        loc: {
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 359,
            column: 8
          },
          end: {
            line: 369,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 359
      },
      "47": {
        loc: {
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 359,
            column: 12
          },
          end: {
            line: 359,
            column: 28
          }
        }, {
          start: {
            line: 359,
            column: 32
          },
          end: {
            line: 359,
            column: 76
          }
        }],
        line: 359
      },
      "48": {
        loc: {
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 371,
            column: 8
          },
          end: {
            line: 381,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 371
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0],
      "28": [0, 0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/server/per-website-server.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/server/per-website-server.ts"],
      sourcesContent: ["/**\n * @file Per-website Eleventy server management using programmatic API.\n */\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { EleventyUrlResolver } from './eleventy-url-resolver';\nimport { logger, sanitize } from '../utils/logging';\nimport Eleventy from '@11ty/eleventy';\nimport EleventyDevServer from '@11ty/eleventy-dev-server';\n\n/**\n * Send log message to website window.\n */\nasync function sendLogToWindow(websiteName: string, message: string, level: string = 'info') {\n  try {\n    // Import dynamically to avoid circular dependencies\n    const multiWindowManager = await import('../ui/multi-window-manager');\n\n    // Use the exported function instead of accessing the map directly\n    if (typeof multiWindowManager.sendLogToWebsite === 'function') {\n      multiWindowManager.sendLogToWebsite(websiteName, message, level);\n    } else {\n      logger.debug(`sendLogToWebsite function not available for ${websiteName}`);\n    }\n  } catch (error) {\n    // Silently fail if window is not available\n    logger.debug(`Could not send log to window for ${websiteName}`, {\n      error: sanitize.error(error),\n    });\n  }\n}\n\n/**\n * Server instance for a single website using programmatic API.\n */\nexport interface WebsiteServer {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  eleventy: any;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  devServer: any;\n  inputDir: string;\n  outputDir: string;\n  port: number;\n  actualUrl?: string;\n  urlResolver: EleventyUrlResolver;\n  restoreConsole?: () => void;\n}\n\n/**\n * Start an Eleventy server for a specific website using programmatic API.\n */\nexport async function startWebsiteServer(inputDir: string, websiteName: string, port: number): Promise<WebsiteServer> {\n  sendLogToWindow(websiteName, `\uD83D\uDE80 Starting Eleventy server for ${websiteName}`, 'startup');\n  sendLogToWindow(websiteName, `\uD83D\uDCC1 Input directory: ${sanitize.path(inputDir)}`, 'debug');\n\n  // Capture console output during Eleventy operations\n  const originalConsoleLog = console.log;\n  const originalConsoleError = console.error;\n  const originalConsoleWarn = console.warn;\n\n  // Function to restore original console methods\n  const restoreConsole = () => {\n    console.log = originalConsoleLog;\n    console.error = originalConsoleError;\n    console.warn = originalConsoleWarn;\n  };\n\n  try {\n    // Set up output directory for this website - use _site within the website directory\n    const outputDir = path.join(inputDir, '_site');\n\n    sendLogToWindow(websiteName, `\uD83D\uDCC2 Setting up build directory\u2026`, 'info');\n    sendLogToWindow(websiteName, `\uD83D\uDCCD Output: ${outputDir}`, 'debug');\n\n    // Ensure output directory exists\n    if (!fs.existsSync(outputDir)) {\n      fs.mkdirSync(outputDir, { recursive: true });\n      sendLogToWindow(websiteName, `\u2705 Created output directory`, 'info');\n    }\n\n    sendLogToWindow(websiteName, `\u2699\uFE0F Loading Eleventy configuration\u2026`, 'info');\n\n    // Override console methods to capture Eleventy output\n    console.log = (...args: unknown[]) => {\n      const message = args.join(' ');\n      // Check if this is an Eleventy log message\n      if (message.includes('[11ty]') || message.includes('Eleventy') || message.includes('eleventy')) {\n        sendLogToWindow(websiteName, message, 'info');\n      }\n      // Always call original console.log for debugging\n      originalConsoleLog(...args);\n    };\n\n    console.error = (...args: unknown[]) => {\n      const message = args.join(' ');\n      // Check if this is an Eleventy error message\n      if (message.includes('[11ty]') || message.includes('Eleventy') || message.includes('eleventy')) {\n        sendLogToWindow(websiteName, message, 'error');\n      }\n      // Always call original console.error for debugging\n      originalConsoleError(...args);\n    };\n\n    console.warn = (...args: unknown[]) => {\n      const message = args.join(' ');\n      // Check if this is an Eleventy warning message\n      if (message.includes('[11ty]') || message.includes('Eleventy') || message.includes('eleventy')) {\n        sendLogToWindow(websiteName, message, 'warning');\n      }\n      // Always call original console.warn for debugging\n      originalConsoleWarn(...args);\n    };\n\n    // Create Eleventy instance with programmatic API\n    // Don't try to load the config here - let Eleventy handle it internally\n    // This allows Eleventy to properly resolve modules from the website's node_modules\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const eleventyOptions: any = {\n      quietMode: false,\n    };\n\n    // Use programmatic configuration instead of config file to avoid path resolution issues\n    sendLogToWindow(websiteName, `\uD83D\uDCCB Using programmatic configuration (ignoring .eleventy.js)`, 'debug');\n\n    sendLogToWindow(websiteName, `\uD83D\uDCC2 Input: ${inputDir}/src, Output: ${outputDir}`, 'debug');\n\n    // Verify src directory exists before starting Eleventy\n    const srcPath = path.join(inputDir, 'src');\n    if (!fs.existsSync(srcPath)) {\n      const errorMsg = `Source directory does not exist: ${srcPath}`;\n      sendLogToWindow(websiteName, `\u274C ${errorMsg}`, 'error');\n      throw new Error(errorMsg);\n    }\n    sendLogToWindow(websiteName, `\u2705 Source directory verified: ${srcPath}`, 'debug');\n\n    // Create Eleventy instance\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let eleventy: any;\n\n    // Create Eleventy instance with absolute paths and programmatic configuration\n    const srcAbsolutePath = path.join(inputDir, 'src');\n    sendLogToWindow(websiteName, `\uD83D\uDD27 Using absolute input path: ${srcAbsolutePath}`, 'debug');\n    sendLogToWindow(websiteName, `\uD83D\uDD27 Using absolute output path: ${outputDir}`, 'debug');\n\n    // Add configuration callback to options (proper Eleventy API)\n    const eleventyOptionsWithConfig = {\n      ...eleventyOptions,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      config: function (eleventyConfig: any) {\n        // Import and add the anglesite-11ty plugin\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        const anglesiteEleventy = require('@dwk/anglesite-11ty').default;\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        const EleventyWebcPlugin = require('@11ty/eleventy-plugin-webc');\n\n        // FIXME: Workaround for eleventy-plugin-webc issue\n        eleventyConfig.setFreezeReservedData(false);\n\n        // Add anglesite-11ty plugin\n        eleventyConfig.addPlugin(anglesiteEleventy);\n\n        // Add WebC plugin with components path relative to the src directory\n        eleventyConfig.addPlugin(EleventyWebcPlugin, {\n          components: '_includes/**/*.webc', // This will be relative to srcAbsolutePath\n        });\n\n        // Add global data\n        eleventyConfig.addGlobalData('eleventy', () => ({\n          generator: process.env.ELEVENTY_VERSION ? `Eleventy v${process.env.ELEVENTY_VERSION}` : 'Eleventy',\n        }));\n\n        // Return directory configuration (these paths are relative to the input directory)\n        return {\n          templateFormats: ['11ty.js', 'webc', 'md', 'html'],\n          markdownTemplateEngine: 'webc',\n          htmlTemplateEngine: 'webc',\n          dir: {\n            // All paths are relative to srcAbsolutePath since that's our input\n            input: '.', // Current directory (srcAbsolutePath)\n            output: '../_site', // Relative to srcAbsolutePath, points to outputDir\n            includes: '_includes',\n            layouts: '_includes',\n          },\n        };\n      },\n    };\n\n    eleventy = new Eleventy(srcAbsolutePath, outputDir, eleventyOptionsWithConfig);\n\n    try {\n      // Initial build\n      sendLogToWindow(websiteName, `\uD83D\uDD28 Building website files\u2026`, 'info');\n\n      try {\n        await eleventy.write();\n        sendLogToWindow(websiteName, `\u2705 Build completed successfully`, 'info');\n      } catch (buildError) {\n        const sanitizedError = sanitize.error(buildError);\n        logger.error(`Build failed for ${websiteName}`, {\n          error: sanitizedError,\n          websiteName,\n        });\n\n        if (buildError instanceof Error) {\n          // Send sanitized error to window\n          sendLogToWindow(websiteName, `\u274C Build failed: ${sanitize.error(buildError.message)}`, 'error');\n\n          // Check for nested error details in Eleventy errors\n          if ('originalError' in buildError && buildError.originalError) {\n            const sanitizedOriginal = sanitize.error(buildError.originalError);\n            logger.error(`Original build error for ${websiteName}`, {\n              originalError: sanitizedOriginal,\n            });\n            sendLogToWindow(websiteName, `\uD83D\uDCCB Original error: ${sanitizedOriginal}`, 'error');\n\n            if (buildError.originalError instanceof Error) {\n              const sanitizedOriginalMessage = sanitize.error(buildError.originalError.message);\n              sendLogToWindow(websiteName, `\uD83D\uDD0D Detailed error: ${sanitizedOriginalMessage}`, 'error');\n            }\n          }\n\n          // Check for cause property (modern error chaining)\n          if ('cause' in buildError && buildError.cause) {\n            const sanitizedCause = sanitize.error(buildError.cause);\n            logger.error(`Build error cause for ${websiteName}`, {\n              cause: sanitizedCause,\n            });\n            sendLogToWindow(websiteName, `\u26A1 Error cause: ${sanitizedCause}`, 'error');\n          }\n        } else {\n          sendLogToWindow(websiteName, `\u274C Build failed: ${sanitizedError}`, 'error');\n        }\n        throw buildError;\n      }\n\n      // Track the actual server URL\n      let actualServerUrl = '';\n\n      // Create dev server instance\n      const devServer = new EleventyDevServer(websiteName, outputDir, {\n        port: port,\n        liveReload: true,\n        domDiff: true,\n        showVersion: false,\n        watch: [inputDir + '/**/*'],\n        ignore: [path.join(inputDir, '_site') + '/**/*'],\n        logger: {\n          log: (msg: string) => {\n            console.log(`[${websiteName}] ${msg}`);\n            // Capture actual server URL from logs\n            const serverUrlMatch = msg.match(/Server at (http:\\/\\/localhost:\\d+)\\/?/);\n            if (serverUrlMatch) {\n              actualServerUrl = serverUrlMatch[1]; // Already clean, no trailing slash needed\n            }\n            sendLogToWindow(websiteName, msg, 'info');\n          },\n          info: (msg: string) => {\n            console.log(`[${websiteName}] ${msg}`);\n            // Also check info messages for server URL\n            const serverUrlMatch = msg.match(/Server at (http:\\/\\/localhost:\\d+)\\/?/);\n            if (serverUrlMatch) {\n              actualServerUrl = serverUrlMatch[1];\n            }\n            sendLogToWindow(websiteName, msg, 'info');\n          },\n          error: (msg: string) => {\n            console.error(`[${websiteName}] ${msg}`);\n            sendLogToWindow(websiteName, msg, 'error');\n          },\n        },\n      });\n\n      // Set up file watching for rebuilds - exclude the build directory\n      const watchPattern = inputDir + '/**/*';\n      const buildDir = path.join(inputDir, '_site');\n      devServer.watchFiles([watchPattern]);\n\n      // Override the default file change handler to trigger Eleventy rebuilds\n      if (devServer.watcher) {\n        devServer.watcher.on('change', async (changedPath: string) => {\n          // Skip if the changed file is in the build directory (prevent recursive builds)\n          if (changedPath.startsWith(buildDir)) {\n            sendLogToWindow(websiteName, `\uD83D\uDD04 Skipping build directory change: ${changedPath}`, 'debug');\n            return;\n          }\n\n          sendLogToWindow(websiteName, `\uD83D\uDCDD File changed: ${changedPath}`, 'info');\n          sendLogToWindow(websiteName, `\uD83D\uDD04 Rebuilding website\u2026`, 'info');\n          try {\n            await eleventy.write();\n            sendLogToWindow(websiteName, `\u2705 Rebuild completed successfully`, 'info');\n          } catch (error) {\n            const sanitizedError = sanitize.error(error);\n            logger.error(`Rebuild failed for ${websiteName}`, {\n              error: sanitizedError,\n              websiteName,\n            });\n            sendLogToWindow(websiteName, `\u274C Rebuild failed: ${sanitizedError}`, 'error');\n          }\n        });\n      }\n\n      // Start the dev server\n      sendLogToWindow(websiteName, `\uD83C\uDF10 Starting development server on port ${port}\u2026`, 'info');\n\n      devServer.serve(port);\n\n      // Wait a moment for the server URL to be captured from logs\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // Use captured URL if available, otherwise fall back to expected port\n      const finalServerUrl = actualServerUrl || `http://localhost:${port}`;\n      const actualPort = actualServerUrl ? parseInt(actualServerUrl.split(':')[2]) : port;\n\n      sendLogToWindow(websiteName, `\uD83C\uDF89 Server ready at ${finalServerUrl}`, 'info');\n      sendLogToWindow(websiteName, `\uD83D\uDC40 Watching for file changes\u2026`, 'info');\n\n      // Initialize URL resolver for file-to-URL mapping\n      sendLogToWindow(websiteName, `\uD83D\uDDFA\uFE0F Setting up file-to-URL mapping\u2026`, 'info');\n      const urlResolver = new EleventyUrlResolver(path.join(inputDir, 'src'));\n      await urlResolver.initialize();\n      sendLogToWindow(websiteName, `\u2705 URL resolver ready`, 'info');\n\n      return {\n        eleventy,\n        devServer,\n        inputDir: path.join(inputDir, 'src'),\n        outputDir,\n        port: actualPort,\n        actualUrl: finalServerUrl,\n        urlResolver,\n        restoreConsole,\n      };\n    } finally {\n      // No need to restore working directory since we're using absolute paths\n    }\n  } catch (error) {\n    // Restore console methods in case of error\n    restoreConsole();\n    const sanitizedError = sanitize.error(error);\n    logger.error(`Failed to start server for ${websiteName}`, {\n      error: sanitizedError,\n      websiteName,\n    });\n    sendLogToWindow(websiteName, `\u274C Failed to start server: ${sanitizedError}`, 'error');\n    throw error;\n  }\n}\n\n/**\n * Stop a website server.\n */\nexport async function stopWebsiteServer(server: WebsiteServer): Promise<void> {\n  try {\n    // Restore original console methods if available\n    if (server.restoreConsole) {\n      server.restoreConsole();\n    }\n\n    // Stop the file watcher first to prevent fsevents crashes\n    if (server.devServer && server.devServer.watcher) {\n      try {\n        await server.devServer.watcher.close();\n      } catch (watcherError) {\n        logger.error(`Error closing file watcher for port ${server.port}`, {\n          error: sanitize.error(watcherError),\n          port: server.port,\n        });\n      }\n    }\n\n    // Stop the dev server\n    if (server.devServer && typeof server.devServer.close === 'function') {\n      try {\n        await server.devServer.close();\n      } catch (closeError) {\n        logger.error(`Error closing dev server for port ${server.port}`, {\n          error: sanitize.error(closeError),\n          port: server.port,\n        });\n      }\n    }\n\n    // Clean up temporary output directory\n    if (fs.existsSync(server.outputDir)) {\n      try {\n        fs.rmSync(server.outputDir, { recursive: true, force: true });\n      } catch (cleanupError) {\n        logger.error(`Failed to clean up directory`, {\n          error: sanitize.error(cleanupError),\n          directory: sanitize.path(server.outputDir),\n        });\n      }\n    }\n  } catch (error) {\n    logger.error(`Error stopping server for port ${server.port}`, {\n      error: sanitize.error(error),\n      port: server.port,\n    });\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c373a687334d457593940cb23d4af20bd5b8dfb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b6ieip1r1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b6ieip1r1();
var __createBinding =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[0]++,
/* istanbul ignore next */
(cov_1b6ieip1r1().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1b6ieip1r1().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_1b6ieip1r1().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_1b6ieip1r1().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[0]++;
  cov_1b6ieip1r1().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().b[2][0]++;
    cov_1b6ieip1r1().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1b6ieip1r1().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_1b6ieip1r1().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_1b6ieip1r1().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[5][1]++,
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().b[3][0]++;
    cov_1b6ieip1r1().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_1b6ieip1r1().f[1]++;
        cov_1b6ieip1r1().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_1b6ieip1r1().b[3][1]++;
  }
  cov_1b6ieip1r1().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_1b6ieip1r1().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[2]++;
  cov_1b6ieip1r1().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().b[7][0]++;
    cov_1b6ieip1r1().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_1b6ieip1r1().b[7][1]++;
  }
  cov_1b6ieip1r1().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[11]++,
/* istanbul ignore next */
(cov_1b6ieip1r1().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_1b6ieip1r1().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_1b6ieip1r1().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_1b6ieip1r1().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[3]++;
  cov_1b6ieip1r1().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_1b6ieip1r1().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[4]++;
  cov_1b6ieip1r1().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[14]++,
/* istanbul ignore next */
(cov_1b6ieip1r1().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_1b6ieip1r1().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_1b6ieip1r1().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[5]++;
  cov_1b6ieip1r1().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().f[6]++;
    cov_1b6ieip1r1().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[17]++, []);
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_1b6ieip1r1().b[12][0]++;
          cov_1b6ieip1r1().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_1b6ieip1r1().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_1b6ieip1r1().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().f[8]++;
    cov_1b6ieip1r1().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[13][0]++;
      cov_1b6ieip1r1().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[26]++, {});
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[15][0]++;
      cov_1b6ieip1r1().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_1b6ieip1r1().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_1b6ieip1r1().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_1b6ieip1r1().b[16][0]++;
          cov_1b6ieip1r1().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_1b6ieip1r1().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[15][1]++;
    }
    cov_1b6ieip1r1().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[35]++,
/* istanbul ignore next */
(cov_1b6ieip1r1().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_1b6ieip1r1().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1b6ieip1r1().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[9]++;
  cov_1b6ieip1r1().s[36]++;
  return /* istanbul ignore next */(cov_1b6ieip1r1().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_1b6ieip1r1().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_1b6ieip1r1().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1b6ieip1r1().s[38]++;
exports.startWebsiteServer = startWebsiteServer;
/* istanbul ignore next */
cov_1b6ieip1r1().s[39]++;
exports.stopWebsiteServer = stopWebsiteServer;
/**
 * @file Per-website Eleventy server management using programmatic API.
 */
const path =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[40]++, __importStar(require("path")));
const fs =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[41]++, __importStar(require("fs")));
const eleventy_url_resolver_1 =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[42]++, require("./eleventy-url-resolver"));
const logging_1 =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[43]++, require("../utils/logging"));
const eleventy_1 =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[44]++, __importDefault(require("@11ty/eleventy")));
const eleventy_dev_server_1 =
/* istanbul ignore next */
(cov_1b6ieip1r1().s[45]++, __importDefault(require("@11ty/eleventy-dev-server")));
/**
 * Send log message to website window.
 */
async function sendLogToWindow(websiteName, message, level =
/* istanbul ignore next */
(cov_1b6ieip1r1().b[20][0]++, 'info')) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[10]++;
  cov_1b6ieip1r1().s[46]++;
  try {
    // Import dynamically to avoid circular dependencies
    const multiWindowManager =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[47]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_1b6ieip1r1().f[11]++;
      cov_1b6ieip1r1().s[48]++;
      return __importStar(require('../ui/multi-window-manager'));
    }));
    // Use the exported function instead of accessing the map directly
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[49]++;
    if (typeof multiWindowManager.sendLogToWebsite === 'function') {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[21][0]++;
      cov_1b6ieip1r1().s[50]++;
      multiWindowManager.sendLogToWebsite(websiteName, message, level);
    } else {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[21][1]++;
      cov_1b6ieip1r1().s[51]++;
      logging_1.logger.debug(`sendLogToWebsite function not available for ${websiteName}`);
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[52]++;
    // Silently fail if window is not available
    logging_1.logger.debug(`Could not send log to window for ${websiteName}`, {
      error: logging_1.sanitize.error(error)
    });
  }
}
/**
 * Start an Eleventy server for a specific website using programmatic API.
 */
async function startWebsiteServer(inputDir, websiteName, port) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[12]++;
  cov_1b6ieip1r1().s[53]++;
  sendLogToWindow(websiteName, `🚀 Starting Eleventy server for ${websiteName}`, 'startup');
  /* istanbul ignore next */
  cov_1b6ieip1r1().s[54]++;
  sendLogToWindow(websiteName, `📁 Input directory: ${logging_1.sanitize.path(inputDir)}`, 'debug');
  // Capture console output during Eleventy operations
  const originalConsoleLog =
  /* istanbul ignore next */
  (cov_1b6ieip1r1().s[55]++, console.log);
  const originalConsoleError =
  /* istanbul ignore next */
  (cov_1b6ieip1r1().s[56]++, console.error);
  const originalConsoleWarn =
  /* istanbul ignore next */
  (cov_1b6ieip1r1().s[57]++, console.warn);
  // Function to restore original console methods
  /* istanbul ignore next */
  cov_1b6ieip1r1().s[58]++;
  const restoreConsole = () => {
    /* istanbul ignore next */
    cov_1b6ieip1r1().f[13]++;
    cov_1b6ieip1r1().s[59]++;
    console.log = originalConsoleLog;
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[60]++;
    console.error = originalConsoleError;
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[61]++;
    console.warn = originalConsoleWarn;
  };
  /* istanbul ignore next */
  cov_1b6ieip1r1().s[62]++;
  try {
    // Set up output directory for this website - use _site within the website directory
    const outputDir =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[63]++, path.join(inputDir, '_site'));
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[64]++;
    sendLogToWindow(websiteName, `📂 Setting up build directory…`, 'info');
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[65]++;
    sendLogToWindow(websiteName, `📍 Output: ${outputDir}`, 'debug');
    // Ensure output directory exists
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[66]++;
    if (!fs.existsSync(outputDir)) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[22][0]++;
      cov_1b6ieip1r1().s[67]++;
      fs.mkdirSync(outputDir, {
        recursive: true
      });
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[68]++;
      sendLogToWindow(websiteName, `✅ Created output directory`, 'info');
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[22][1]++;
    }
    cov_1b6ieip1r1().s[69]++;
    sendLogToWindow(websiteName, `⚙️ Loading Eleventy configuration…`, 'info');
    // Override console methods to capture Eleventy output
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[70]++;
    console.log = (...args) => {
      /* istanbul ignore next */
      cov_1b6ieip1r1().f[14]++;
      const message =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[71]++, args.join(' '));
      // Check if this is an Eleventy log message
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[72]++;
      if (
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[24][0]++, message.includes('[11ty]')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[24][1]++, message.includes('Eleventy')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[24][2]++, message.includes('eleventy'))) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().b[23][0]++;
        cov_1b6ieip1r1().s[73]++;
        sendLogToWindow(websiteName, message, 'info');
      } else
      /* istanbul ignore next */
      {
        cov_1b6ieip1r1().b[23][1]++;
      }
      // Always call original console.log for debugging
      cov_1b6ieip1r1().s[74]++;
      originalConsoleLog(...args);
    };
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[75]++;
    console.error = (...args) => {
      /* istanbul ignore next */
      cov_1b6ieip1r1().f[15]++;
      const message =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[76]++, args.join(' '));
      // Check if this is an Eleventy error message
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[77]++;
      if (
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[26][0]++, message.includes('[11ty]')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[26][1]++, message.includes('Eleventy')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[26][2]++, message.includes('eleventy'))) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().b[25][0]++;
        cov_1b6ieip1r1().s[78]++;
        sendLogToWindow(websiteName, message, 'error');
      } else
      /* istanbul ignore next */
      {
        cov_1b6ieip1r1().b[25][1]++;
      }
      // Always call original console.error for debugging
      cov_1b6ieip1r1().s[79]++;
      originalConsoleError(...args);
    };
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[80]++;
    console.warn = (...args) => {
      /* istanbul ignore next */
      cov_1b6ieip1r1().f[16]++;
      const message =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[81]++, args.join(' '));
      // Check if this is an Eleventy warning message
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[82]++;
      if (
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[28][0]++, message.includes('[11ty]')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[28][1]++, message.includes('Eleventy')) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[28][2]++, message.includes('eleventy'))) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().b[27][0]++;
        cov_1b6ieip1r1().s[83]++;
        sendLogToWindow(websiteName, message, 'warning');
      } else
      /* istanbul ignore next */
      {
        cov_1b6ieip1r1().b[27][1]++;
      }
      // Always call original console.warn for debugging
      cov_1b6ieip1r1().s[84]++;
      originalConsoleWarn(...args);
    };
    // Create Eleventy instance with programmatic API
    // Don't try to load the config here - let Eleventy handle it internally
    // This allows Eleventy to properly resolve modules from the website's node_modules
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    const eleventyOptions =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[85]++, {
      quietMode: false
    });
    // Use programmatic configuration instead of config file to avoid path resolution issues
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[86]++;
    sendLogToWindow(websiteName, `📋 Using programmatic configuration (ignoring .eleventy.js)`, 'debug');
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[87]++;
    sendLogToWindow(websiteName, `📂 Input: ${inputDir}/src, Output: ${outputDir}`, 'debug');
    // Verify src directory exists before starting Eleventy
    const srcPath =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[88]++, path.join(inputDir, 'src'));
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[89]++;
    if (!fs.existsSync(srcPath)) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[29][0]++;
      const errorMsg =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[90]++, `Source directory does not exist: ${srcPath}`);
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[91]++;
      sendLogToWindow(websiteName, `❌ ${errorMsg}`, 'error');
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[92]++;
      throw new Error(errorMsg);
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[29][1]++;
    }
    cov_1b6ieip1r1().s[93]++;
    sendLogToWindow(websiteName, `✅ Source directory verified: ${srcPath}`, 'debug');
    // Create Eleventy instance
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    let eleventy;
    // Create Eleventy instance with absolute paths and programmatic configuration
    const srcAbsolutePath =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[94]++, path.join(inputDir, 'src'));
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[95]++;
    sendLogToWindow(websiteName, `🔧 Using absolute input path: ${srcAbsolutePath}`, 'debug');
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[96]++;
    sendLogToWindow(websiteName, `🔧 Using absolute output path: ${outputDir}`, 'debug');
    // Add configuration callback to options (proper Eleventy API)
    const eleventyOptionsWithConfig =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[97]++, {
      ...eleventyOptions,
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      config: function (eleventyConfig) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().f[17]++;
        // Import and add the anglesite-11ty plugin
        // eslint-disable-next-line @typescript-eslint/no-require-imports
        const anglesiteEleventy =
        /* istanbul ignore next */
        (cov_1b6ieip1r1().s[98]++, require('@dwk/anglesite-11ty').default);
        // eslint-disable-next-line @typescript-eslint/no-require-imports
        const EleventyWebcPlugin =
        /* istanbul ignore next */
        (cov_1b6ieip1r1().s[99]++, require('@11ty/eleventy-plugin-webc'));
        // FIXME: Workaround for eleventy-plugin-webc issue
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[100]++;
        eleventyConfig.setFreezeReservedData(false);
        // Add anglesite-11ty plugin
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[101]++;
        eleventyConfig.addPlugin(anglesiteEleventy);
        // Add WebC plugin with components path relative to the src directory
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[102]++;
        eleventyConfig.addPlugin(EleventyWebcPlugin, {
          components: '_includes/**/*.webc' // This will be relative to srcAbsolutePath
        });
        // Add global data
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[103]++;
        eleventyConfig.addGlobalData('eleventy', () => {
          /* istanbul ignore next */
          cov_1b6ieip1r1().f[18]++;
          cov_1b6ieip1r1().s[104]++;
          return {
            generator: process.env.ELEVENTY_VERSION ?
            /* istanbul ignore next */
            (cov_1b6ieip1r1().b[30][0]++, `Eleventy v${process.env.ELEVENTY_VERSION}`) :
            /* istanbul ignore next */
            (cov_1b6ieip1r1().b[30][1]++, 'Eleventy')
          };
        });
        // Return directory configuration (these paths are relative to the input directory)
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[105]++;
        return {
          templateFormats: ['11ty.js', 'webc', 'md', 'html'],
          markdownTemplateEngine: 'webc',
          htmlTemplateEngine: 'webc',
          dir: {
            // All paths are relative to srcAbsolutePath since that's our input
            input: '.',
            // Current directory (srcAbsolutePath)
            output: '../_site',
            // Relative to srcAbsolutePath, points to outputDir
            includes: '_includes',
            layouts: '_includes'
          }
        };
      }
    });
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[106]++;
    eleventy = new eleventy_1.default(srcAbsolutePath, outputDir, eleventyOptionsWithConfig);
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[107]++;
    try {
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[108]++;
      // Initial build
      sendLogToWindow(websiteName, `🔨 Building website files…`, 'info');
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[109]++;
      try {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[110]++;
        await eleventy.write();
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[111]++;
        sendLogToWindow(websiteName, `✅ Build completed successfully`, 'info');
      } catch (buildError) {
        const sanitizedError =
        /* istanbul ignore next */
        (cov_1b6ieip1r1().s[112]++, logging_1.sanitize.error(buildError));
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[113]++;
        logging_1.logger.error(`Build failed for ${websiteName}`, {
          error: sanitizedError,
          websiteName
        });
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[114]++;
        if (buildError instanceof Error) {
          /* istanbul ignore next */
          cov_1b6ieip1r1().b[31][0]++;
          cov_1b6ieip1r1().s[115]++;
          // Send sanitized error to window
          sendLogToWindow(websiteName, `❌ Build failed: ${logging_1.sanitize.error(buildError.message)}`, 'error');
          // Check for nested error details in Eleventy errors
          /* istanbul ignore next */
          cov_1b6ieip1r1().s[116]++;
          if (
          /* istanbul ignore next */
          (cov_1b6ieip1r1().b[33][0]++, 'originalError' in buildError) &&
          /* istanbul ignore next */
          (cov_1b6ieip1r1().b[33][1]++, buildError.originalError)) {
            /* istanbul ignore next */
            cov_1b6ieip1r1().b[32][0]++;
            const sanitizedOriginal =
            /* istanbul ignore next */
            (cov_1b6ieip1r1().s[117]++, logging_1.sanitize.error(buildError.originalError));
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[118]++;
            logging_1.logger.error(`Original build error for ${websiteName}`, {
              originalError: sanitizedOriginal
            });
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[119]++;
            sendLogToWindow(websiteName, `📋 Original error: ${sanitizedOriginal}`, 'error');
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[120]++;
            if (buildError.originalError instanceof Error) {
              /* istanbul ignore next */
              cov_1b6ieip1r1().b[34][0]++;
              const sanitizedOriginalMessage =
              /* istanbul ignore next */
              (cov_1b6ieip1r1().s[121]++, logging_1.sanitize.error(buildError.originalError.message));
              /* istanbul ignore next */
              cov_1b6ieip1r1().s[122]++;
              sendLogToWindow(websiteName, `🔍 Detailed error: ${sanitizedOriginalMessage}`, 'error');
            } else
            /* istanbul ignore next */
            {
              cov_1b6ieip1r1().b[34][1]++;
            }
          } else
          /* istanbul ignore next */
          {
            cov_1b6ieip1r1().b[32][1]++;
          }
          // Check for cause property (modern error chaining)
          cov_1b6ieip1r1().s[123]++;
          if (
          /* istanbul ignore next */
          (cov_1b6ieip1r1().b[36][0]++, 'cause' in buildError) &&
          /* istanbul ignore next */
          (cov_1b6ieip1r1().b[36][1]++, buildError.cause)) {
            /* istanbul ignore next */
            cov_1b6ieip1r1().b[35][0]++;
            const sanitizedCause =
            /* istanbul ignore next */
            (cov_1b6ieip1r1().s[124]++, logging_1.sanitize.error(buildError.cause));
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[125]++;
            logging_1.logger.error(`Build error cause for ${websiteName}`, {
              cause: sanitizedCause
            });
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[126]++;
            sendLogToWindow(websiteName, `⚡ Error cause: ${sanitizedCause}`, 'error');
          } else
          /* istanbul ignore next */
          {
            cov_1b6ieip1r1().b[35][1]++;
          }
        } else {
          /* istanbul ignore next */
          cov_1b6ieip1r1().b[31][1]++;
          cov_1b6ieip1r1().s[127]++;
          sendLogToWindow(websiteName, `❌ Build failed: ${sanitizedError}`, 'error');
        }
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[128]++;
        throw buildError;
      }
      // Track the actual server URL
      let actualServerUrl =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[129]++, '');
      // Create dev server instance
      const devServer =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[130]++, new eleventy_dev_server_1.default(websiteName, outputDir, {
        port: port,
        liveReload: true,
        domDiff: true,
        showVersion: false,
        watch: [inputDir + '/**/*'],
        ignore: [path.join(inputDir, '_site') + '/**/*'],
        logger: {
          log: msg => {
            /* istanbul ignore next */
            cov_1b6ieip1r1().f[19]++;
            cov_1b6ieip1r1().s[131]++;
            console.log(`[${websiteName}] ${msg}`);
            // Capture actual server URL from logs
            const serverUrlMatch =
            /* istanbul ignore next */
            (cov_1b6ieip1r1().s[132]++, msg.match(/Server at (http:\/\/localhost:\d+)\/?/));
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[133]++;
            if (serverUrlMatch) {
              /* istanbul ignore next */
              cov_1b6ieip1r1().b[37][0]++;
              cov_1b6ieip1r1().s[134]++;
              actualServerUrl = serverUrlMatch[1]; // Already clean, no trailing slash needed
            } else
            /* istanbul ignore next */
            {
              cov_1b6ieip1r1().b[37][1]++;
            }
            cov_1b6ieip1r1().s[135]++;
            sendLogToWindow(websiteName, msg, 'info');
          },
          info: msg => {
            /* istanbul ignore next */
            cov_1b6ieip1r1().f[20]++;
            cov_1b6ieip1r1().s[136]++;
            console.log(`[${websiteName}] ${msg}`);
            // Also check info messages for server URL
            const serverUrlMatch =
            /* istanbul ignore next */
            (cov_1b6ieip1r1().s[137]++, msg.match(/Server at (http:\/\/localhost:\d+)\/?/));
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[138]++;
            if (serverUrlMatch) {
              /* istanbul ignore next */
              cov_1b6ieip1r1().b[38][0]++;
              cov_1b6ieip1r1().s[139]++;
              actualServerUrl = serverUrlMatch[1];
            } else
            /* istanbul ignore next */
            {
              cov_1b6ieip1r1().b[38][1]++;
            }
            cov_1b6ieip1r1().s[140]++;
            sendLogToWindow(websiteName, msg, 'info');
          },
          error: msg => {
            /* istanbul ignore next */
            cov_1b6ieip1r1().f[21]++;
            cov_1b6ieip1r1().s[141]++;
            console.error(`[${websiteName}] ${msg}`);
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[142]++;
            sendLogToWindow(websiteName, msg, 'error');
          }
        }
      }));
      // Set up file watching for rebuilds - exclude the build directory
      const watchPattern =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[143]++, inputDir + '/**/*');
      const buildDir =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[144]++, path.join(inputDir, '_site'));
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[145]++;
      devServer.watchFiles([watchPattern]);
      // Override the default file change handler to trigger Eleventy rebuilds
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[146]++;
      if (devServer.watcher) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().b[39][0]++;
        cov_1b6ieip1r1().s[147]++;
        devServer.watcher.on('change', async changedPath => {
          /* istanbul ignore next */
          cov_1b6ieip1r1().f[22]++;
          cov_1b6ieip1r1().s[148]++;
          // Skip if the changed file is in the build directory (prevent recursive builds)
          if (changedPath.startsWith(buildDir)) {
            /* istanbul ignore next */
            cov_1b6ieip1r1().b[40][0]++;
            cov_1b6ieip1r1().s[149]++;
            sendLogToWindow(websiteName, `🔄 Skipping build directory change: ${changedPath}`, 'debug');
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[150]++;
            return;
          } else
          /* istanbul ignore next */
          {
            cov_1b6ieip1r1().b[40][1]++;
          }
          cov_1b6ieip1r1().s[151]++;
          sendLogToWindow(websiteName, `📝 File changed: ${changedPath}`, 'info');
          /* istanbul ignore next */
          cov_1b6ieip1r1().s[152]++;
          sendLogToWindow(websiteName, `🔄 Rebuilding website…`, 'info');
          /* istanbul ignore next */
          cov_1b6ieip1r1().s[153]++;
          try {
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[154]++;
            await eleventy.write();
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[155]++;
            sendLogToWindow(websiteName, `✅ Rebuild completed successfully`, 'info');
          } catch (error) {
            const sanitizedError =
            /* istanbul ignore next */
            (cov_1b6ieip1r1().s[156]++, logging_1.sanitize.error(error));
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[157]++;
            logging_1.logger.error(`Rebuild failed for ${websiteName}`, {
              error: sanitizedError,
              websiteName
            });
            /* istanbul ignore next */
            cov_1b6ieip1r1().s[158]++;
            sendLogToWindow(websiteName, `❌ Rebuild failed: ${sanitizedError}`, 'error');
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_1b6ieip1r1().b[39][1]++;
      }
      // Start the dev server
      cov_1b6ieip1r1().s[159]++;
      sendLogToWindow(websiteName, `🌐 Starting development server on port ${port}…`, 'info');
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[160]++;
      devServer.serve(port);
      // Wait a moment for the server URL to be captured from logs
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[161]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1b6ieip1r1().f[23]++;
        cov_1b6ieip1r1().s[162]++;
        return setTimeout(resolve, 1000);
      });
      // Use captured URL if available, otherwise fall back to expected port
      const finalServerUrl =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[163]++,
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[41][0]++, actualServerUrl) ||
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[41][1]++, `http://localhost:${port}`));
      const actualPort =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[164]++, actualServerUrl ?
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[42][0]++, parseInt(actualServerUrl.split(':')[2])) :
      /* istanbul ignore next */
      (cov_1b6ieip1r1().b[42][1]++, port));
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[165]++;
      sendLogToWindow(websiteName, `🎉 Server ready at ${finalServerUrl}`, 'info');
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[166]++;
      sendLogToWindow(websiteName, `👀 Watching for file changes…`, 'info');
      // Initialize URL resolver for file-to-URL mapping
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[167]++;
      sendLogToWindow(websiteName, `🗺️ Setting up file-to-URL mapping…`, 'info');
      const urlResolver =
      /* istanbul ignore next */
      (cov_1b6ieip1r1().s[168]++, new eleventy_url_resolver_1.EleventyUrlResolver(path.join(inputDir, 'src')));
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[169]++;
      await urlResolver.initialize();
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[170]++;
      sendLogToWindow(websiteName, `✅ URL resolver ready`, 'info');
      /* istanbul ignore next */
      cov_1b6ieip1r1().s[171]++;
      return {
        eleventy,
        devServer,
        inputDir: path.join(inputDir, 'src'),
        outputDir,
        port: actualPort,
        actualUrl: finalServerUrl,
        urlResolver,
        restoreConsole
      };
    } finally {
      // No need to restore working directory since we're using absolute paths
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[172]++;
    // Restore console methods in case of error
    restoreConsole();
    const sanitizedError =
    /* istanbul ignore next */
    (cov_1b6ieip1r1().s[173]++, logging_1.sanitize.error(error));
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[174]++;
    logging_1.logger.error(`Failed to start server for ${websiteName}`, {
      error: sanitizedError,
      websiteName
    });
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[175]++;
    sendLogToWindow(websiteName, `❌ Failed to start server: ${sanitizedError}`, 'error');
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[176]++;
    throw error;
  }
}
/**
 * Stop a website server.
 */
async function stopWebsiteServer(server) {
  /* istanbul ignore next */
  cov_1b6ieip1r1().f[24]++;
  cov_1b6ieip1r1().s[177]++;
  try {
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[178]++;
    // Restore original console methods if available
    if (server.restoreConsole) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[43][0]++;
      cov_1b6ieip1r1().s[179]++;
      server.restoreConsole();
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[43][1]++;
    }
    // Stop the file watcher first to prevent fsevents crashes
    cov_1b6ieip1r1().s[180]++;
    if (
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[45][0]++, server.devServer) &&
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[45][1]++, server.devServer.watcher)) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[44][0]++;
      cov_1b6ieip1r1().s[181]++;
      try {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[182]++;
        await server.devServer.watcher.close();
      } catch (watcherError) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[183]++;
        logging_1.logger.error(`Error closing file watcher for port ${server.port}`, {
          error: logging_1.sanitize.error(watcherError),
          port: server.port
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[44][1]++;
    }
    // Stop the dev server
    cov_1b6ieip1r1().s[184]++;
    if (
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[47][0]++, server.devServer) &&
    /* istanbul ignore next */
    (cov_1b6ieip1r1().b[47][1]++, typeof server.devServer.close === 'function')) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[46][0]++;
      cov_1b6ieip1r1().s[185]++;
      try {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[186]++;
        await server.devServer.close();
      } catch (closeError) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[187]++;
        logging_1.logger.error(`Error closing dev server for port ${server.port}`, {
          error: logging_1.sanitize.error(closeError),
          port: server.port
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[46][1]++;
    }
    // Clean up temporary output directory
    cov_1b6ieip1r1().s[188]++;
    if (fs.existsSync(server.outputDir)) {
      /* istanbul ignore next */
      cov_1b6ieip1r1().b[48][0]++;
      cov_1b6ieip1r1().s[189]++;
      try {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[190]++;
        fs.rmSync(server.outputDir, {
          recursive: true,
          force: true
        });
      } catch (cleanupError) {
        /* istanbul ignore next */
        cov_1b6ieip1r1().s[191]++;
        logging_1.logger.error(`Failed to clean up directory`, {
          error: logging_1.sanitize.error(cleanupError),
          directory: logging_1.sanitize.path(server.outputDir)
        });
      }
    } else
    /* istanbul ignore next */
    {
      cov_1b6ieip1r1().b[48][1]++;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1b6ieip1r1().s[192]++;
    logging_1.logger.error(`Error stopping server for port ${server.port}`, {
      error: logging_1.sanitize.error(error),
      port: server.port
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwic3RhcnRXZWJzaXRlU2VydmVyIiwiY292XzFiNmllaXAxcjEiLCJzIiwic3RvcFdlYnNpdGVTZXJ2ZXIiLCJwYXRoIiwiX19pbXBvcnRTdGFyIiwicmVxdWlyZSIsImZzIiwiZWxldmVudHlfdXJsX3Jlc29sdmVyXzEiLCJsb2dnaW5nXzEiLCJlbGV2ZW50eV8xIiwiX19pbXBvcnREZWZhdWx0IiwiZWxldmVudHlfZGV2X3NlcnZlcl8xIiwic2VuZExvZ1RvV2luZG93Iiwid2Vic2l0ZU5hbWUiLCJtZXNzYWdlIiwibGV2ZWwiLCJiIiwiZiIsIm11bHRpV2luZG93TWFuYWdlciIsIlByb21pc2UiLCJyZXNvbHZlIiwidGhlbiIsInNlbmRMb2dUb1dlYnNpdGUiLCJsb2dnZXIiLCJkZWJ1ZyIsImVycm9yIiwic2FuaXRpemUiLCJpbnB1dERpciIsInBvcnQiLCJvcmlnaW5hbENvbnNvbGVMb2ciLCJjb25zb2xlIiwibG9nIiwib3JpZ2luYWxDb25zb2xlRXJyb3IiLCJvcmlnaW5hbENvbnNvbGVXYXJuIiwid2FybiIsInJlc3RvcmVDb25zb2xlIiwib3V0cHV0RGlyIiwiam9pbiIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJhcmdzIiwiaW5jbHVkZXMiLCJlbGV2ZW50eU9wdGlvbnMiLCJxdWlldE1vZGUiLCJzcmNQYXRoIiwiZXJyb3JNc2ciLCJFcnJvciIsImVsZXZlbnR5Iiwic3JjQWJzb2x1dGVQYXRoIiwiZWxldmVudHlPcHRpb25zV2l0aENvbmZpZyIsImNvbmZpZyIsImVsZXZlbnR5Q29uZmlnIiwiYW5nbGVzaXRlRWxldmVudHkiLCJkZWZhdWx0IiwiRWxldmVudHlXZWJjUGx1Z2luIiwic2V0RnJlZXplUmVzZXJ2ZWREYXRhIiwiYWRkUGx1Z2luIiwiY29tcG9uZW50cyIsImFkZEdsb2JhbERhdGEiLCJnZW5lcmF0b3IiLCJwcm9jZXNzIiwiZW52IiwiRUxFVkVOVFlfVkVSU0lPTiIsInRlbXBsYXRlRm9ybWF0cyIsIm1hcmtkb3duVGVtcGxhdGVFbmdpbmUiLCJodG1sVGVtcGxhdGVFbmdpbmUiLCJkaXIiLCJpbnB1dCIsIm91dHB1dCIsImxheW91dHMiLCJ3cml0ZSIsImJ1aWxkRXJyb3IiLCJzYW5pdGl6ZWRFcnJvciIsIm9yaWdpbmFsRXJyb3IiLCJzYW5pdGl6ZWRPcmlnaW5hbCIsInNhbml0aXplZE9yaWdpbmFsTWVzc2FnZSIsImNhdXNlIiwic2FuaXRpemVkQ2F1c2UiLCJhY3R1YWxTZXJ2ZXJVcmwiLCJkZXZTZXJ2ZXIiLCJsaXZlUmVsb2FkIiwiZG9tRGlmZiIsInNob3dWZXJzaW9uIiwid2F0Y2giLCJpZ25vcmUiLCJtc2ciLCJzZXJ2ZXJVcmxNYXRjaCIsIm1hdGNoIiwiaW5mbyIsIndhdGNoUGF0dGVybiIsImJ1aWxkRGlyIiwid2F0Y2hGaWxlcyIsIndhdGNoZXIiLCJvbiIsImNoYW5nZWRQYXRoIiwic3RhcnRzV2l0aCIsInNlcnZlIiwic2V0VGltZW91dCIsImZpbmFsU2VydmVyVXJsIiwiYWN0dWFsUG9ydCIsInBhcnNlSW50Iiwic3BsaXQiLCJ1cmxSZXNvbHZlciIsIkVsZXZlbnR5VXJsUmVzb2x2ZXIiLCJpbml0aWFsaXplIiwiYWN0dWFsVXJsIiwic2VydmVyIiwiY2xvc2UiLCJ3YXRjaGVyRXJyb3IiLCJjbG9zZUVycm9yIiwicm1TeW5jIiwiZm9yY2UiLCJjbGVhbnVwRXJyb3IiLCJkaXJlY3RvcnkiXSwic291cmNlcyI6WyIvVXNlcnMvZHdrL0RldmVsb3Blci9naXRsYWIuY29tL2Rhdmlkd2tlaXRoL0Bkd2svYW5nbGVzaXRlL2FwcC9zZXJ2ZXIvcGVyLXdlYnNpdGUtc2VydmVyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGUgUGVyLXdlYnNpdGUgRWxldmVudHkgc2VydmVyIG1hbmFnZW1lbnQgdXNpbmcgcHJvZ3JhbW1hdGljIEFQSS5cbiAqL1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcbmltcG9ydCB7IEVsZXZlbnR5VXJsUmVzb2x2ZXIgfSBmcm9tICcuL2VsZXZlbnR5LXVybC1yZXNvbHZlcic7XG5pbXBvcnQgeyBsb2dnZXIsIHNhbml0aXplIH0gZnJvbSAnLi4vdXRpbHMvbG9nZ2luZyc7XG5pbXBvcnQgRWxldmVudHkgZnJvbSAnQDExdHkvZWxldmVudHknO1xuaW1wb3J0IEVsZXZlbnR5RGV2U2VydmVyIGZyb20gJ0AxMXR5L2VsZXZlbnR5LWRldi1zZXJ2ZXInO1xuXG4vKipcbiAqIFNlbmQgbG9nIG1lc3NhZ2UgdG8gd2Vic2l0ZSB3aW5kb3cuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcsIGxldmVsOiBzdHJpbmcgPSAnaW5mbycpIHtcbiAgdHJ5IHtcbiAgICAvLyBJbXBvcnQgZHluYW1pY2FsbHkgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzXG4gICAgY29uc3QgbXVsdGlXaW5kb3dNYW5hZ2VyID0gYXdhaXQgaW1wb3J0KCcuLi91aS9tdWx0aS13aW5kb3ctbWFuYWdlcicpO1xuXG4gICAgLy8gVXNlIHRoZSBleHBvcnRlZCBmdW5jdGlvbiBpbnN0ZWFkIG9mIGFjY2Vzc2luZyB0aGUgbWFwIGRpcmVjdGx5XG4gICAgaWYgKHR5cGVvZiBtdWx0aVdpbmRvd01hbmFnZXIuc2VuZExvZ1RvV2Vic2l0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgbXVsdGlXaW5kb3dNYW5hZ2VyLnNlbmRMb2dUb1dlYnNpdGUod2Vic2l0ZU5hbWUsIG1lc3NhZ2UsIGxldmVsKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbG9nZ2VyLmRlYnVnKGBzZW5kTG9nVG9XZWJzaXRlIGZ1bmN0aW9uIG5vdCBhdmFpbGFibGUgZm9yICR7d2Vic2l0ZU5hbWV9YCk7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIC8vIFNpbGVudGx5IGZhaWwgaWYgd2luZG93IGlzIG5vdCBhdmFpbGFibGVcbiAgICBsb2dnZXIuZGVidWcoYENvdWxkIG5vdCBzZW5kIGxvZyB0byB3aW5kb3cgZm9yICR7d2Vic2l0ZU5hbWV9YCwge1xuICAgICAgZXJyb3I6IHNhbml0aXplLmVycm9yKGVycm9yKSxcbiAgICB9KTtcbiAgfVxufVxuXG4vKipcbiAqIFNlcnZlciBpbnN0YW5jZSBmb3IgYSBzaW5nbGUgd2Vic2l0ZSB1c2luZyBwcm9ncmFtbWF0aWMgQVBJLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFdlYnNpdGVTZXJ2ZXIge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBlbGV2ZW50eTogYW55O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICBkZXZTZXJ2ZXI6IGFueTtcbiAgaW5wdXREaXI6IHN0cmluZztcbiAgb3V0cHV0RGlyOiBzdHJpbmc7XG4gIHBvcnQ6IG51bWJlcjtcbiAgYWN0dWFsVXJsPzogc3RyaW5nO1xuICB1cmxSZXNvbHZlcjogRWxldmVudHlVcmxSZXNvbHZlcjtcbiAgcmVzdG9yZUNvbnNvbGU/OiAoKSA9PiB2b2lkO1xufVxuXG4vKipcbiAqIFN0YXJ0IGFuIEVsZXZlbnR5IHNlcnZlciBmb3IgYSBzcGVjaWZpYyB3ZWJzaXRlIHVzaW5nIHByb2dyYW1tYXRpYyBBUEkuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzdGFydFdlYnNpdGVTZXJ2ZXIoaW5wdXREaXI6IHN0cmluZywgd2Vic2l0ZU5hbWU6IHN0cmluZywgcG9ydDogbnVtYmVyKTogUHJvbWlzZTxXZWJzaXRlU2VydmVyPiB7XG4gIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYPCfmoAgU3RhcnRpbmcgRWxldmVudHkgc2VydmVyIGZvciAke3dlYnNpdGVOYW1lfWAsICdzdGFydHVwJyk7XG4gIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYPCfk4EgSW5wdXQgZGlyZWN0b3J5OiAke3Nhbml0aXplLnBhdGgoaW5wdXREaXIpfWAsICdkZWJ1ZycpO1xuXG4gIC8vIENhcHR1cmUgY29uc29sZSBvdXRwdXQgZHVyaW5nIEVsZXZlbnR5IG9wZXJhdGlvbnNcbiAgY29uc3Qgb3JpZ2luYWxDb25zb2xlTG9nID0gY29uc29sZS5sb2c7XG4gIGNvbnN0IG9yaWdpbmFsQ29uc29sZUVycm9yID0gY29uc29sZS5lcnJvcjtcbiAgY29uc3Qgb3JpZ2luYWxDb25zb2xlV2FybiA9IGNvbnNvbGUud2FybjtcblxuICAvLyBGdW5jdGlvbiB0byByZXN0b3JlIG9yaWdpbmFsIGNvbnNvbGUgbWV0aG9kc1xuICBjb25zdCByZXN0b3JlQ29uc29sZSA9ICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyA9IG9yaWdpbmFsQ29uc29sZUxvZztcbiAgICBjb25zb2xlLmVycm9yID0gb3JpZ2luYWxDb25zb2xlRXJyb3I7XG4gICAgY29uc29sZS53YXJuID0gb3JpZ2luYWxDb25zb2xlV2FybjtcbiAgfTtcblxuICB0cnkge1xuICAgIC8vIFNldCB1cCBvdXRwdXQgZGlyZWN0b3J5IGZvciB0aGlzIHdlYnNpdGUgLSB1c2UgX3NpdGUgd2l0aGluIHRoZSB3ZWJzaXRlIGRpcmVjdG9yeVxuICAgIGNvbnN0IG91dHB1dERpciA9IHBhdGguam9pbihpbnB1dERpciwgJ19zaXRlJyk7XG5cbiAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDwn5OCIFNldHRpbmcgdXAgYnVpbGQgZGlyZWN0b3J54oCmYCwgJ2luZm8nKTtcbiAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDwn5ONIE91dHB1dDogJHtvdXRwdXREaXJ9YCwgJ2RlYnVnJyk7XG5cbiAgICAvLyBFbnN1cmUgb3V0cHV0IGRpcmVjdG9yeSBleGlzdHNcbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMob3V0cHV0RGlyKSkge1xuICAgICAgZnMubWtkaXJTeW5jKG91dHB1dERpciwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDinIUgQ3JlYXRlZCBvdXRwdXQgZGlyZWN0b3J5YCwgJ2luZm8nKTtcbiAgICB9XG5cbiAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDimpnvuI8gTG9hZGluZyBFbGV2ZW50eSBjb25maWd1cmF0aW9u4oCmYCwgJ2luZm8nKTtcblxuICAgIC8vIE92ZXJyaWRlIGNvbnNvbGUgbWV0aG9kcyB0byBjYXB0dXJlIEVsZXZlbnR5IG91dHB1dFxuICAgIGNvbnNvbGUubG9nID0gKC4uLmFyZ3M6IHVua25vd25bXSkgPT4ge1xuICAgICAgY29uc3QgbWVzc2FnZSA9IGFyZ3Muam9pbignICcpO1xuICAgICAgLy8gQ2hlY2sgaWYgdGhpcyBpcyBhbiBFbGV2ZW50eSBsb2cgbWVzc2FnZVxuICAgICAgaWYgKG1lc3NhZ2UuaW5jbHVkZXMoJ1sxMXR5XScpIHx8IG1lc3NhZ2UuaW5jbHVkZXMoJ0VsZXZlbnR5JykgfHwgbWVzc2FnZS5pbmNsdWRlcygnZWxldmVudHknKSkge1xuICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIG1lc3NhZ2UsICdpbmZvJyk7XG4gICAgICB9XG4gICAgICAvLyBBbHdheXMgY2FsbCBvcmlnaW5hbCBjb25zb2xlLmxvZyBmb3IgZGVidWdnaW5nXG4gICAgICBvcmlnaW5hbENvbnNvbGVMb2coLi4uYXJncyk7XG4gICAgfTtcblxuICAgIGNvbnNvbGUuZXJyb3IgPSAoLi4uYXJnczogdW5rbm93bltdKSA9PiB7XG4gICAgICBjb25zdCBtZXNzYWdlID0gYXJncy5qb2luKCcgJyk7XG4gICAgICAvLyBDaGVjayBpZiB0aGlzIGlzIGFuIEVsZXZlbnR5IGVycm9yIG1lc3NhZ2VcbiAgICAgIGlmIChtZXNzYWdlLmluY2x1ZGVzKCdbMTF0eV0nKSB8fCBtZXNzYWdlLmluY2x1ZGVzKCdFbGV2ZW50eScpIHx8IG1lc3NhZ2UuaW5jbHVkZXMoJ2VsZXZlbnR5JykpIHtcbiAgICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBtZXNzYWdlLCAnZXJyb3InKTtcbiAgICAgIH1cbiAgICAgIC8vIEFsd2F5cyBjYWxsIG9yaWdpbmFsIGNvbnNvbGUuZXJyb3IgZm9yIGRlYnVnZ2luZ1xuICAgICAgb3JpZ2luYWxDb25zb2xlRXJyb3IoLi4uYXJncyk7XG4gICAgfTtcblxuICAgIGNvbnNvbGUud2FybiA9ICguLi5hcmdzOiB1bmtub3duW10pID0+IHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UgPSBhcmdzLmpvaW4oJyAnKTtcbiAgICAgIC8vIENoZWNrIGlmIHRoaXMgaXMgYW4gRWxldmVudHkgd2FybmluZyBtZXNzYWdlXG4gICAgICBpZiAobWVzc2FnZS5pbmNsdWRlcygnWzExdHldJykgfHwgbWVzc2FnZS5pbmNsdWRlcygnRWxldmVudHknKSB8fCBtZXNzYWdlLmluY2x1ZGVzKCdlbGV2ZW50eScpKSB7XG4gICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgbWVzc2FnZSwgJ3dhcm5pbmcnKTtcbiAgICAgIH1cbiAgICAgIC8vIEFsd2F5cyBjYWxsIG9yaWdpbmFsIGNvbnNvbGUud2FybiBmb3IgZGVidWdnaW5nXG4gICAgICBvcmlnaW5hbENvbnNvbGVXYXJuKC4uLmFyZ3MpO1xuICAgIH07XG5cbiAgICAvLyBDcmVhdGUgRWxldmVudHkgaW5zdGFuY2Ugd2l0aCBwcm9ncmFtbWF0aWMgQVBJXG4gICAgLy8gRG9uJ3QgdHJ5IHRvIGxvYWQgdGhlIGNvbmZpZyBoZXJlIC0gbGV0IEVsZXZlbnR5IGhhbmRsZSBpdCBpbnRlcm5hbGx5XG4gICAgLy8gVGhpcyBhbGxvd3MgRWxldmVudHkgdG8gcHJvcGVybHkgcmVzb2x2ZSBtb2R1bGVzIGZyb20gdGhlIHdlYnNpdGUncyBub2RlX21vZHVsZXNcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgY29uc3QgZWxldmVudHlPcHRpb25zOiBhbnkgPSB7XG4gICAgICBxdWlldE1vZGU6IGZhbHNlLFxuICAgIH07XG5cbiAgICAvLyBVc2UgcHJvZ3JhbW1hdGljIGNvbmZpZ3VyYXRpb24gaW5zdGVhZCBvZiBjb25maWcgZmlsZSB0byBhdm9pZCBwYXRoIHJlc29sdXRpb24gaXNzdWVzXG4gICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+TiyBVc2luZyBwcm9ncmFtbWF0aWMgY29uZmlndXJhdGlvbiAoaWdub3JpbmcgLmVsZXZlbnR5LmpzKWAsICdkZWJ1ZycpO1xuXG4gICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+TgiBJbnB1dDogJHtpbnB1dERpcn0vc3JjLCBPdXRwdXQ6ICR7b3V0cHV0RGlyfWAsICdkZWJ1ZycpO1xuXG4gICAgLy8gVmVyaWZ5IHNyYyBkaXJlY3RvcnkgZXhpc3RzIGJlZm9yZSBzdGFydGluZyBFbGV2ZW50eVxuICAgIGNvbnN0IHNyY1BhdGggPSBwYXRoLmpvaW4oaW5wdXREaXIsICdzcmMnKTtcbiAgICBpZiAoIWZzLmV4aXN0c1N5bmMoc3JjUGF0aCkpIHtcbiAgICAgIGNvbnN0IGVycm9yTXNnID0gYFNvdXJjZSBkaXJlY3RvcnkgZG9lcyBub3QgZXhpc3Q6ICR7c3JjUGF0aH1gO1xuICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg4p2MICR7ZXJyb3JNc2d9YCwgJ2Vycm9yJyk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyb3JNc2cpO1xuICAgIH1cbiAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDinIUgU291cmNlIGRpcmVjdG9yeSB2ZXJpZmllZDogJHtzcmNQYXRofWAsICdkZWJ1ZycpO1xuXG4gICAgLy8gQ3JlYXRlIEVsZXZlbnR5IGluc3RhbmNlXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBsZXQgZWxldmVudHk6IGFueTtcblxuICAgIC8vIENyZWF0ZSBFbGV2ZW50eSBpbnN0YW5jZSB3aXRoIGFic29sdXRlIHBhdGhzIGFuZCBwcm9ncmFtbWF0aWMgY29uZmlndXJhdGlvblxuICAgIGNvbnN0IHNyY0Fic29sdXRlUGF0aCA9IHBhdGguam9pbihpbnB1dERpciwgJ3NyYycpO1xuICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYPCflKcgVXNpbmcgYWJzb2x1dGUgaW5wdXQgcGF0aDogJHtzcmNBYnNvbHV0ZVBhdGh9YCwgJ2RlYnVnJyk7XG4gICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+UpyBVc2luZyBhYnNvbHV0ZSBvdXRwdXQgcGF0aDogJHtvdXRwdXREaXJ9YCwgJ2RlYnVnJyk7XG5cbiAgICAvLyBBZGQgY29uZmlndXJhdGlvbiBjYWxsYmFjayB0byBvcHRpb25zIChwcm9wZXIgRWxldmVudHkgQVBJKVxuICAgIGNvbnN0IGVsZXZlbnR5T3B0aW9uc1dpdGhDb25maWcgPSB7XG4gICAgICAuLi5lbGV2ZW50eU9wdGlvbnMsXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgY29uZmlnOiBmdW5jdGlvbiAoZWxldmVudHlDb25maWc6IGFueSkge1xuICAgICAgICAvLyBJbXBvcnQgYW5kIGFkZCB0aGUgYW5nbGVzaXRlLTExdHkgcGx1Z2luXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tcmVxdWlyZS1pbXBvcnRzXG4gICAgICAgIGNvbnN0IGFuZ2xlc2l0ZUVsZXZlbnR5ID0gcmVxdWlyZSgnQGR3ay9hbmdsZXNpdGUtMTF0eScpLmRlZmF1bHQ7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tcmVxdWlyZS1pbXBvcnRzXG4gICAgICAgIGNvbnN0IEVsZXZlbnR5V2ViY1BsdWdpbiA9IHJlcXVpcmUoJ0AxMXR5L2VsZXZlbnR5LXBsdWdpbi13ZWJjJyk7XG5cbiAgICAgICAgLy8gRklYTUU6IFdvcmthcm91bmQgZm9yIGVsZXZlbnR5LXBsdWdpbi13ZWJjIGlzc3VlXG4gICAgICAgIGVsZXZlbnR5Q29uZmlnLnNldEZyZWV6ZVJlc2VydmVkRGF0YShmYWxzZSk7XG5cbiAgICAgICAgLy8gQWRkIGFuZ2xlc2l0ZS0xMXR5IHBsdWdpblxuICAgICAgICBlbGV2ZW50eUNvbmZpZy5hZGRQbHVnaW4oYW5nbGVzaXRlRWxldmVudHkpO1xuXG4gICAgICAgIC8vIEFkZCBXZWJDIHBsdWdpbiB3aXRoIGNvbXBvbmVudHMgcGF0aCByZWxhdGl2ZSB0byB0aGUgc3JjIGRpcmVjdG9yeVxuICAgICAgICBlbGV2ZW50eUNvbmZpZy5hZGRQbHVnaW4oRWxldmVudHlXZWJjUGx1Z2luLCB7XG4gICAgICAgICAgY29tcG9uZW50czogJ19pbmNsdWRlcy8qKi8qLndlYmMnLCAvLyBUaGlzIHdpbGwgYmUgcmVsYXRpdmUgdG8gc3JjQWJzb2x1dGVQYXRoXG4gICAgICAgIH0pO1xuXG4gICAgICAgIC8vIEFkZCBnbG9iYWwgZGF0YVxuICAgICAgICBlbGV2ZW50eUNvbmZpZy5hZGRHbG9iYWxEYXRhKCdlbGV2ZW50eScsICgpID0+ICh7XG4gICAgICAgICAgZ2VuZXJhdG9yOiBwcm9jZXNzLmVudi5FTEVWRU5UWV9WRVJTSU9OID8gYEVsZXZlbnR5IHYke3Byb2Nlc3MuZW52LkVMRVZFTlRZX1ZFUlNJT059YCA6ICdFbGV2ZW50eScsXG4gICAgICAgIH0pKTtcblxuICAgICAgICAvLyBSZXR1cm4gZGlyZWN0b3J5IGNvbmZpZ3VyYXRpb24gKHRoZXNlIHBhdGhzIGFyZSByZWxhdGl2ZSB0byB0aGUgaW5wdXQgZGlyZWN0b3J5KVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHRlbXBsYXRlRm9ybWF0czogWycxMXR5LmpzJywgJ3dlYmMnLCAnbWQnLCAnaHRtbCddLFxuICAgICAgICAgIG1hcmtkb3duVGVtcGxhdGVFbmdpbmU6ICd3ZWJjJyxcbiAgICAgICAgICBodG1sVGVtcGxhdGVFbmdpbmU6ICd3ZWJjJyxcbiAgICAgICAgICBkaXI6IHtcbiAgICAgICAgICAgIC8vIEFsbCBwYXRocyBhcmUgcmVsYXRpdmUgdG8gc3JjQWJzb2x1dGVQYXRoIHNpbmNlIHRoYXQncyBvdXIgaW5wdXRcbiAgICAgICAgICAgIGlucHV0OiAnLicsIC8vIEN1cnJlbnQgZGlyZWN0b3J5IChzcmNBYnNvbHV0ZVBhdGgpXG4gICAgICAgICAgICBvdXRwdXQ6ICcuLi9fc2l0ZScsIC8vIFJlbGF0aXZlIHRvIHNyY0Fic29sdXRlUGF0aCwgcG9pbnRzIHRvIG91dHB1dERpclxuICAgICAgICAgICAgaW5jbHVkZXM6ICdfaW5jbHVkZXMnLFxuICAgICAgICAgICAgbGF5b3V0czogJ19pbmNsdWRlcycsXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH0sXG4gICAgfTtcblxuICAgIGVsZXZlbnR5ID0gbmV3IEVsZXZlbnR5KHNyY0Fic29sdXRlUGF0aCwgb3V0cHV0RGlyLCBlbGV2ZW50eU9wdGlvbnNXaXRoQ29uZmlnKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyBJbml0aWFsIGJ1aWxkXG4gICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDwn5SoIEJ1aWxkaW5nIHdlYnNpdGUgZmlsZXPigKZgLCAnaW5mbycpO1xuXG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBlbGV2ZW50eS53cml0ZSgpO1xuICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDinIUgQnVpbGQgY29tcGxldGVkIHN1Y2Nlc3NmdWxseWAsICdpbmZvJyk7XG4gICAgICB9IGNhdGNoIChidWlsZEVycm9yKSB7XG4gICAgICAgIGNvbnN0IHNhbml0aXplZEVycm9yID0gc2FuaXRpemUuZXJyb3IoYnVpbGRFcnJvcik7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgQnVpbGQgZmFpbGVkIGZvciAke3dlYnNpdGVOYW1lfWAsIHtcbiAgICAgICAgICBlcnJvcjogc2FuaXRpemVkRXJyb3IsXG4gICAgICAgICAgd2Vic2l0ZU5hbWUsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChidWlsZEVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAvLyBTZW5kIHNhbml0aXplZCBlcnJvciB0byB3aW5kb3dcbiAgICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDinYwgQnVpbGQgZmFpbGVkOiAke3Nhbml0aXplLmVycm9yKGJ1aWxkRXJyb3IubWVzc2FnZSl9YCwgJ2Vycm9yJyk7XG5cbiAgICAgICAgICAvLyBDaGVjayBmb3IgbmVzdGVkIGVycm9yIGRldGFpbHMgaW4gRWxldmVudHkgZXJyb3JzXG4gICAgICAgICAgaWYgKCdvcmlnaW5hbEVycm9yJyBpbiBidWlsZEVycm9yICYmIGJ1aWxkRXJyb3Iub3JpZ2luYWxFcnJvcikge1xuICAgICAgICAgICAgY29uc3Qgc2FuaXRpemVkT3JpZ2luYWwgPSBzYW5pdGl6ZS5lcnJvcihidWlsZEVycm9yLm9yaWdpbmFsRXJyb3IpO1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGBPcmlnaW5hbCBidWlsZCBlcnJvciBmb3IgJHt3ZWJzaXRlTmFtZX1gLCB7XG4gICAgICAgICAgICAgIG9yaWdpbmFsRXJyb3I6IHNhbml0aXplZE9yaWdpbmFsLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDwn5OLIE9yaWdpbmFsIGVycm9yOiAke3Nhbml0aXplZE9yaWdpbmFsfWAsICdlcnJvcicpO1xuXG4gICAgICAgICAgICBpZiAoYnVpbGRFcnJvci5vcmlnaW5hbEVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgY29uc3Qgc2FuaXRpemVkT3JpZ2luYWxNZXNzYWdlID0gc2FuaXRpemUuZXJyb3IoYnVpbGRFcnJvci5vcmlnaW5hbEVycm9yLm1lc3NhZ2UpO1xuICAgICAgICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDwn5SNIERldGFpbGVkIGVycm9yOiAke3Nhbml0aXplZE9yaWdpbmFsTWVzc2FnZX1gLCAnZXJyb3InKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBDaGVjayBmb3IgY2F1c2UgcHJvcGVydHkgKG1vZGVybiBlcnJvciBjaGFpbmluZylcbiAgICAgICAgICBpZiAoJ2NhdXNlJyBpbiBidWlsZEVycm9yICYmIGJ1aWxkRXJyb3IuY2F1c2UpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhbml0aXplZENhdXNlID0gc2FuaXRpemUuZXJyb3IoYnVpbGRFcnJvci5jYXVzZSk7XG4gICAgICAgICAgICBsb2dnZXIuZXJyb3IoYEJ1aWxkIGVycm9yIGNhdXNlIGZvciAke3dlYnNpdGVOYW1lfWAsIHtcbiAgICAgICAgICAgICAgY2F1c2U6IHNhbml0aXplZENhdXNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzZW5kTG9nVG9XaW5kb3cod2Vic2l0ZU5hbWUsIGDimqEgRXJyb3IgY2F1c2U6ICR7c2FuaXRpemVkQ2F1c2V9YCwgJ2Vycm9yJyk7XG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYOKdjCBCdWlsZCBmYWlsZWQ6ICR7c2FuaXRpemVkRXJyb3J9YCwgJ2Vycm9yJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgYnVpbGRFcnJvcjtcbiAgICAgIH1cblxuICAgICAgLy8gVHJhY2sgdGhlIGFjdHVhbCBzZXJ2ZXIgVVJMXG4gICAgICBsZXQgYWN0dWFsU2VydmVyVXJsID0gJyc7XG5cbiAgICAgIC8vIENyZWF0ZSBkZXYgc2VydmVyIGluc3RhbmNlXG4gICAgICBjb25zdCBkZXZTZXJ2ZXIgPSBuZXcgRWxldmVudHlEZXZTZXJ2ZXIod2Vic2l0ZU5hbWUsIG91dHB1dERpciwge1xuICAgICAgICBwb3J0OiBwb3J0LFxuICAgICAgICBsaXZlUmVsb2FkOiB0cnVlLFxuICAgICAgICBkb21EaWZmOiB0cnVlLFxuICAgICAgICBzaG93VmVyc2lvbjogZmFsc2UsXG4gICAgICAgIHdhdGNoOiBbaW5wdXREaXIgKyAnLyoqLyonXSxcbiAgICAgICAgaWdub3JlOiBbcGF0aC5qb2luKGlucHV0RGlyLCAnX3NpdGUnKSArICcvKiovKiddLFxuICAgICAgICBsb2dnZXI6IHtcbiAgICAgICAgICBsb2c6IChtc2c6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFske3dlYnNpdGVOYW1lfV0gJHttc2d9YCk7XG4gICAgICAgICAgICAvLyBDYXB0dXJlIGFjdHVhbCBzZXJ2ZXIgVVJMIGZyb20gbG9nc1xuICAgICAgICAgICAgY29uc3Qgc2VydmVyVXJsTWF0Y2ggPSBtc2cubWF0Y2goL1NlcnZlciBhdCAoaHR0cDpcXC9cXC9sb2NhbGhvc3Q6XFxkKylcXC8/Lyk7XG4gICAgICAgICAgICBpZiAoc2VydmVyVXJsTWF0Y2gpIHtcbiAgICAgICAgICAgICAgYWN0dWFsU2VydmVyVXJsID0gc2VydmVyVXJsTWF0Y2hbMV07IC8vIEFscmVhZHkgY2xlYW4sIG5vIHRyYWlsaW5nIHNsYXNoIG5lZWRlZFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBtc2csICdpbmZvJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBpbmZvOiAobXNnOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBbJHt3ZWJzaXRlTmFtZX1dICR7bXNnfWApO1xuICAgICAgICAgICAgLy8gQWxzbyBjaGVjayBpbmZvIG1lc3NhZ2VzIGZvciBzZXJ2ZXIgVVJMXG4gICAgICAgICAgICBjb25zdCBzZXJ2ZXJVcmxNYXRjaCA9IG1zZy5tYXRjaCgvU2VydmVyIGF0IChodHRwOlxcL1xcL2xvY2FsaG9zdDpcXGQrKVxcLz8vKTtcbiAgICAgICAgICAgIGlmIChzZXJ2ZXJVcmxNYXRjaCkge1xuICAgICAgICAgICAgICBhY3R1YWxTZXJ2ZXJVcmwgPSBzZXJ2ZXJVcmxNYXRjaFsxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgbXNnLCAnaW5mbycpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgZXJyb3I6IChtc2c6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgWyR7d2Vic2l0ZU5hbWV9XSAke21zZ31gKTtcbiAgICAgICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgbXNnLCAnZXJyb3InKTtcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgfSk7XG5cbiAgICAgIC8vIFNldCB1cCBmaWxlIHdhdGNoaW5nIGZvciByZWJ1aWxkcyAtIGV4Y2x1ZGUgdGhlIGJ1aWxkIGRpcmVjdG9yeVxuICAgICAgY29uc3Qgd2F0Y2hQYXR0ZXJuID0gaW5wdXREaXIgKyAnLyoqLyonO1xuICAgICAgY29uc3QgYnVpbGREaXIgPSBwYXRoLmpvaW4oaW5wdXREaXIsICdfc2l0ZScpO1xuICAgICAgZGV2U2VydmVyLndhdGNoRmlsZXMoW3dhdGNoUGF0dGVybl0pO1xuXG4gICAgICAvLyBPdmVycmlkZSB0aGUgZGVmYXVsdCBmaWxlIGNoYW5nZSBoYW5kbGVyIHRvIHRyaWdnZXIgRWxldmVudHkgcmVidWlsZHNcbiAgICAgIGlmIChkZXZTZXJ2ZXIud2F0Y2hlcikge1xuICAgICAgICBkZXZTZXJ2ZXIud2F0Y2hlci5vbignY2hhbmdlJywgYXN5bmMgKGNoYW5nZWRQYXRoOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAvLyBTa2lwIGlmIHRoZSBjaGFuZ2VkIGZpbGUgaXMgaW4gdGhlIGJ1aWxkIGRpcmVjdG9yeSAocHJldmVudCByZWN1cnNpdmUgYnVpbGRzKVxuICAgICAgICAgIGlmIChjaGFuZ2VkUGF0aC5zdGFydHNXaXRoKGJ1aWxkRGlyKSkge1xuICAgICAgICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+UhCBTa2lwcGluZyBidWlsZCBkaXJlY3RvcnkgY2hhbmdlOiAke2NoYW5nZWRQYXRofWAsICdkZWJ1ZycpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYPCfk50gRmlsZSBjaGFuZ2VkOiAke2NoYW5nZWRQYXRofWAsICdpbmZvJyk7XG4gICAgICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+UhCBSZWJ1aWxkaW5nIHdlYnNpdGXigKZgLCAnaW5mbycpO1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBlbGV2ZW50eS53cml0ZSgpO1xuICAgICAgICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg4pyFIFJlYnVpbGQgY29tcGxldGVkIHN1Y2Nlc3NmdWxseWAsICdpbmZvJyk7XG4gICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhbml0aXplZEVycm9yID0gc2FuaXRpemUuZXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgbG9nZ2VyLmVycm9yKGBSZWJ1aWxkIGZhaWxlZCBmb3IgJHt3ZWJzaXRlTmFtZX1gLCB7XG4gICAgICAgICAgICAgIGVycm9yOiBzYW5pdGl6ZWRFcnJvcixcbiAgICAgICAgICAgICAgd2Vic2l0ZU5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYOKdjCBSZWJ1aWxkIGZhaWxlZDogJHtzYW5pdGl6ZWRFcnJvcn1gLCAnZXJyb3InKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvLyBTdGFydCB0aGUgZGV2IHNlcnZlclxuICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+MkCBTdGFydGluZyBkZXZlbG9wbWVudCBzZXJ2ZXIgb24gcG9ydCAke3BvcnR94oCmYCwgJ2luZm8nKTtcblxuICAgICAgZGV2U2VydmVyLnNlcnZlKHBvcnQpO1xuXG4gICAgICAvLyBXYWl0IGEgbW9tZW50IGZvciB0aGUgc2VydmVyIFVSTCB0byBiZSBjYXB0dXJlZCBmcm9tIGxvZ3NcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDEwMDApKTtcblxuICAgICAgLy8gVXNlIGNhcHR1cmVkIFVSTCBpZiBhdmFpbGFibGUsIG90aGVyd2lzZSBmYWxsIGJhY2sgdG8gZXhwZWN0ZWQgcG9ydFxuICAgICAgY29uc3QgZmluYWxTZXJ2ZXJVcmwgPSBhY3R1YWxTZXJ2ZXJVcmwgfHwgYGh0dHA6Ly9sb2NhbGhvc3Q6JHtwb3J0fWA7XG4gICAgICBjb25zdCBhY3R1YWxQb3J0ID0gYWN0dWFsU2VydmVyVXJsID8gcGFyc2VJbnQoYWN0dWFsU2VydmVyVXJsLnNwbGl0KCc6JylbMl0pIDogcG9ydDtcblxuICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+OiSBTZXJ2ZXIgcmVhZHkgYXQgJHtmaW5hbFNlcnZlclVybH1gLCAnaW5mbycpO1xuICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg8J+RgCBXYXRjaGluZyBmb3IgZmlsZSBjaGFuZ2Vz4oCmYCwgJ2luZm8nKTtcblxuICAgICAgLy8gSW5pdGlhbGl6ZSBVUkwgcmVzb2x2ZXIgZm9yIGZpbGUtdG8tVVJMIG1hcHBpbmdcbiAgICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYPCfl7rvuI8gU2V0dGluZyB1cCBmaWxlLXRvLVVSTCBtYXBwaW5n4oCmYCwgJ2luZm8nKTtcbiAgICAgIGNvbnN0IHVybFJlc29sdmVyID0gbmV3IEVsZXZlbnR5VXJsUmVzb2x2ZXIocGF0aC5qb2luKGlucHV0RGlyLCAnc3JjJykpO1xuICAgICAgYXdhaXQgdXJsUmVzb2x2ZXIuaW5pdGlhbGl6ZSgpO1xuICAgICAgc2VuZExvZ1RvV2luZG93KHdlYnNpdGVOYW1lLCBg4pyFIFVSTCByZXNvbHZlciByZWFkeWAsICdpbmZvJyk7XG5cbiAgICAgIHJldHVybiB7XG4gICAgICAgIGVsZXZlbnR5LFxuICAgICAgICBkZXZTZXJ2ZXIsXG4gICAgICAgIGlucHV0RGlyOiBwYXRoLmpvaW4oaW5wdXREaXIsICdzcmMnKSxcbiAgICAgICAgb3V0cHV0RGlyLFxuICAgICAgICBwb3J0OiBhY3R1YWxQb3J0LFxuICAgICAgICBhY3R1YWxVcmw6IGZpbmFsU2VydmVyVXJsLFxuICAgICAgICB1cmxSZXNvbHZlcixcbiAgICAgICAgcmVzdG9yZUNvbnNvbGUsXG4gICAgICB9O1xuICAgIH0gZmluYWxseSB7XG4gICAgICAvLyBObyBuZWVkIHRvIHJlc3RvcmUgd29ya2luZyBkaXJlY3Rvcnkgc2luY2Ugd2UncmUgdXNpbmcgYWJzb2x1dGUgcGF0aHNcbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgLy8gUmVzdG9yZSBjb25zb2xlIG1ldGhvZHMgaW4gY2FzZSBvZiBlcnJvclxuICAgIHJlc3RvcmVDb25zb2xlKCk7XG4gICAgY29uc3Qgc2FuaXRpemVkRXJyb3IgPSBzYW5pdGl6ZS5lcnJvcihlcnJvcik7XG4gICAgbG9nZ2VyLmVycm9yKGBGYWlsZWQgdG8gc3RhcnQgc2VydmVyIGZvciAke3dlYnNpdGVOYW1lfWAsIHtcbiAgICAgIGVycm9yOiBzYW5pdGl6ZWRFcnJvcixcbiAgICAgIHdlYnNpdGVOYW1lLFxuICAgIH0pO1xuICAgIHNlbmRMb2dUb1dpbmRvdyh3ZWJzaXRlTmFtZSwgYOKdjCBGYWlsZWQgdG8gc3RhcnQgc2VydmVyOiAke3Nhbml0aXplZEVycm9yfWAsICdlcnJvcicpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbi8qKlxuICogU3RvcCBhIHdlYnNpdGUgc2VydmVyLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc3RvcFdlYnNpdGVTZXJ2ZXIoc2VydmVyOiBXZWJzaXRlU2VydmVyKTogUHJvbWlzZTx2b2lkPiB7XG4gIHRyeSB7XG4gICAgLy8gUmVzdG9yZSBvcmlnaW5hbCBjb25zb2xlIG1ldGhvZHMgaWYgYXZhaWxhYmxlXG4gICAgaWYgKHNlcnZlci5yZXN0b3JlQ29uc29sZSkge1xuICAgICAgc2VydmVyLnJlc3RvcmVDb25zb2xlKCk7XG4gICAgfVxuXG4gICAgLy8gU3RvcCB0aGUgZmlsZSB3YXRjaGVyIGZpcnN0IHRvIHByZXZlbnQgZnNldmVudHMgY3Jhc2hlc1xuICAgIGlmIChzZXJ2ZXIuZGV2U2VydmVyICYmIHNlcnZlci5kZXZTZXJ2ZXIud2F0Y2hlcikge1xuICAgICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgc2VydmVyLmRldlNlcnZlci53YXRjaGVyLmNsb3NlKCk7XG4gICAgICB9IGNhdGNoICh3YXRjaGVyRXJyb3IpIHtcbiAgICAgICAgbG9nZ2VyLmVycm9yKGBFcnJvciBjbG9zaW5nIGZpbGUgd2F0Y2hlciBmb3IgcG9ydCAke3NlcnZlci5wb3J0fWAsIHtcbiAgICAgICAgICBlcnJvcjogc2FuaXRpemUuZXJyb3Iod2F0Y2hlckVycm9yKSxcbiAgICAgICAgICBwb3J0OiBzZXJ2ZXIucG9ydCxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3RvcCB0aGUgZGV2IHNlcnZlclxuICAgIGlmIChzZXJ2ZXIuZGV2U2VydmVyICYmIHR5cGVvZiBzZXJ2ZXIuZGV2U2VydmVyLmNsb3NlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0cnkge1xuICAgICAgICBhd2FpdCBzZXJ2ZXIuZGV2U2VydmVyLmNsb3NlKCk7XG4gICAgICB9IGNhdGNoIChjbG9zZUVycm9yKSB7XG4gICAgICAgIGxvZ2dlci5lcnJvcihgRXJyb3IgY2xvc2luZyBkZXYgc2VydmVyIGZvciBwb3J0ICR7c2VydmVyLnBvcnR9YCwge1xuICAgICAgICAgIGVycm9yOiBzYW5pdGl6ZS5lcnJvcihjbG9zZUVycm9yKSxcbiAgICAgICAgICBwb3J0OiBzZXJ2ZXIucG9ydCxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ2xlYW4gdXAgdGVtcG9yYXJ5IG91dHB1dCBkaXJlY3RvcnlcbiAgICBpZiAoZnMuZXhpc3RzU3luYyhzZXJ2ZXIub3V0cHV0RGlyKSkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZnMucm1TeW5jKHNlcnZlci5vdXRwdXREaXIsIHsgcmVjdXJzaXZlOiB0cnVlLCBmb3JjZTogdHJ1ZSB9KTtcbiAgICAgIH0gY2F0Y2ggKGNsZWFudXBFcnJvcikge1xuICAgICAgICBsb2dnZXIuZXJyb3IoYEZhaWxlZCB0byBjbGVhbiB1cCBkaXJlY3RvcnlgLCB7XG4gICAgICAgICAgZXJyb3I6IHNhbml0aXplLmVycm9yKGNsZWFudXBFcnJvciksXG4gICAgICAgICAgZGlyZWN0b3J5OiBzYW5pdGl6ZS5wYXRoKHNlcnZlci5vdXRwdXREaXIpLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKGBFcnJvciBzdG9wcGluZyBzZXJ2ZXIgZm9yIHBvcnQgJHtzZXJ2ZXIucG9ydH1gLCB7XG4gICAgICBlcnJvcjogc2FuaXRpemUuZXJyb3IoZXJyb3IpLFxuICAgICAgcG9ydDogc2VydmVyLnBvcnQsXG4gICAgfSk7XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQW1EQUEsT0FBQSxDQUFBQyxrQkFBQSxHQUFBQSxrQkFBQTtBQXlTQztBQUFBQyxjQUFBLEdBQUFDLENBQUE7QUFLREgsT0FBQSxDQUFBSSxpQkFBQSxHQUFBQSxpQkFBQTtBQWpXQTs7O0FBR0EsTUFBQUMsSUFBQTtBQUFBO0FBQUEsQ0FBQUgsY0FBQSxHQUFBQyxDQUFBLFFBQUFHLFlBQUEsQ0FBQUMsT0FBQTtBQUNBLE1BQUFDLEVBQUE7QUFBQTtBQUFBLENBQUFOLGNBQUEsR0FBQUMsQ0FBQSxRQUFBRyxZQUFBLENBQUFDLE9BQUE7QUFDQSxNQUFBRSx1QkFBQTtBQUFBO0FBQUEsQ0FBQVAsY0FBQSxHQUFBQyxDQUFBLFFBQUFJLE9BQUE7QUFDQSxNQUFBRyxTQUFBO0FBQUE7QUFBQSxDQUFBUixjQUFBLEdBQUFDLENBQUEsUUFBQUksT0FBQTtBQUNBLE1BQUFJLFVBQUE7QUFBQTtBQUFBLENBQUFULGNBQUEsR0FBQUMsQ0FBQSxRQUFBUyxlQUFBLENBQUFMLE9BQUE7QUFDQSxNQUFBTSxxQkFBQTtBQUFBO0FBQUEsQ0FBQVgsY0FBQSxHQUFBQyxDQUFBLFFBQUFTLGVBQUEsQ0FBQUwsT0FBQTtBQUVBOzs7QUFHQSxlQUFlTyxlQUFlQSxDQUFDQyxXQUFtQixFQUFFQyxPQUFlLEVBQUVDLEtBQUE7QUFBQTtBQUFBLENBQUFmLGNBQUEsR0FBQWdCLENBQUEsV0FBZ0IsTUFBTTtFQUFBO0VBQUFoQixjQUFBLEdBQUFpQixDQUFBO0VBQUFqQixjQUFBLEdBQUFDLENBQUE7RUFDekYsSUFBSTtJQUNGO0lBQ0EsTUFBTWlCLGtCQUFrQjtJQUFBO0lBQUEsQ0FBQWxCLGNBQUEsR0FBQUMsQ0FBQSxRQUFHLE1BQUFrQixPQUFBLENBQUFDLE9BQUEsR0FBQUMsSUFBQTtNQUFBO01BQUFyQixjQUFBLEdBQUFpQixDQUFBO01BQUFqQixjQUFBLEdBQUFDLENBQUE7TUFBQSxPQUFBRyxZQUFBLENBQUFDLE9BQUEsQ0FBYSw0QkFBNEI7SUFBQSxFQUFDO0lBRXJFO0lBQUE7SUFBQUwsY0FBQSxHQUFBQyxDQUFBO0lBQ0EsSUFBSSxPQUFPaUIsa0JBQWtCLENBQUNJLGdCQUFnQixLQUFLLFVBQVUsRUFBRTtNQUFBO01BQUF0QixjQUFBLEdBQUFnQixDQUFBO01BQUFoQixjQUFBLEdBQUFDLENBQUE7TUFDN0RpQixrQkFBa0IsQ0FBQ0ksZ0JBQWdCLENBQUNULFdBQVcsRUFBRUMsT0FBTyxFQUFFQyxLQUFLLENBQUM7SUFDbEUsQ0FBQyxNQUFNO01BQUE7TUFBQWYsY0FBQSxHQUFBZ0IsQ0FBQTtNQUFBaEIsY0FBQSxHQUFBQyxDQUFBO01BQ0xPLFNBQUEsQ0FBQWUsTUFBTSxDQUFDQyxLQUFLLENBQUMsK0NBQStDWCxXQUFXLEVBQUUsQ0FBQztJQUM1RTtFQUNGLENBQUMsQ0FBQyxPQUFPWSxLQUFLLEVBQUU7SUFBQTtJQUFBekIsY0FBQSxHQUFBQyxDQUFBO0lBQ2Q7SUFDQU8sU0FBQSxDQUFBZSxNQUFNLENBQUNDLEtBQUssQ0FBQyxvQ0FBb0NYLFdBQVcsRUFBRSxFQUFFO01BQzlEWSxLQUFLLEVBQUVqQixTQUFBLENBQUFrQixRQUFRLENBQUNELEtBQUssQ0FBQ0EsS0FBSztLQUM1QixDQUFDO0VBQ0o7QUFDRjtBQWtCQTs7O0FBR08sZUFBZTFCLGtCQUFrQkEsQ0FBQzRCLFFBQWdCLEVBQUVkLFdBQW1CLEVBQUVlLElBQVk7RUFBQTtFQUFBNUIsY0FBQSxHQUFBaUIsQ0FBQTtFQUFBakIsY0FBQSxHQUFBQyxDQUFBO0VBQzFGVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxtQ0FBbUNBLFdBQVcsRUFBRSxFQUFFLFNBQVMsQ0FBQztFQUFDO0VBQUFiLGNBQUEsR0FBQUMsQ0FBQTtFQUMxRlcsZUFBZSxDQUFDQyxXQUFXLEVBQUUsdUJBQXVCTCxTQUFBLENBQUFrQixRQUFRLENBQUN2QixJQUFJLENBQUN3QixRQUFRLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQztFQUV2RjtFQUNBLE1BQU1FLGtCQUFrQjtFQUFBO0VBQUEsQ0FBQTdCLGNBQUEsR0FBQUMsQ0FBQSxRQUFHNkIsT0FBTyxDQUFDQyxHQUFHO0VBQ3RDLE1BQU1DLG9CQUFvQjtFQUFBO0VBQUEsQ0FBQWhDLGNBQUEsR0FBQUMsQ0FBQSxRQUFHNkIsT0FBTyxDQUFDTCxLQUFLO0VBQzFDLE1BQU1RLG1CQUFtQjtFQUFBO0VBQUEsQ0FBQWpDLGNBQUEsR0FBQUMsQ0FBQSxRQUFHNkIsT0FBTyxDQUFDSSxJQUFJO0VBRXhDO0VBQUE7RUFBQWxDLGNBQUEsR0FBQUMsQ0FBQTtFQUNBLE1BQU1rQyxjQUFjLEdBQUdBLENBQUEsS0FBSztJQUFBO0lBQUFuQyxjQUFBLEdBQUFpQixDQUFBO0lBQUFqQixjQUFBLEdBQUFDLENBQUE7SUFDMUI2QixPQUFPLENBQUNDLEdBQUcsR0FBR0Ysa0JBQWtCO0lBQUM7SUFBQTdCLGNBQUEsR0FBQUMsQ0FBQTtJQUNqQzZCLE9BQU8sQ0FBQ0wsS0FBSyxHQUFHTyxvQkFBb0I7SUFBQztJQUFBaEMsY0FBQSxHQUFBQyxDQUFBO0lBQ3JDNkIsT0FBTyxDQUFDSSxJQUFJLEdBQUdELG1CQUFtQjtFQUNwQyxDQUFDO0VBQUM7RUFBQWpDLGNBQUEsR0FBQUMsQ0FBQTtFQUVGLElBQUk7SUFDRjtJQUNBLE1BQU1tQyxTQUFTO0lBQUE7SUFBQSxDQUFBcEMsY0FBQSxHQUFBQyxDQUFBLFFBQUdFLElBQUksQ0FBQ2tDLElBQUksQ0FBQ1YsUUFBUSxFQUFFLE9BQU8sQ0FBQztJQUFDO0lBQUEzQixjQUFBLEdBQUFDLENBQUE7SUFFL0NXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sQ0FBQztJQUFDO0lBQUFiLGNBQUEsR0FBQUMsQ0FBQTtJQUN2RVcsZUFBZSxDQUFDQyxXQUFXLEVBQUUsY0FBY3VCLFNBQVMsRUFBRSxFQUFFLE9BQU8sQ0FBQztJQUVoRTtJQUFBO0lBQUFwQyxjQUFBLEdBQUFDLENBQUE7SUFDQSxJQUFJLENBQUNLLEVBQUUsQ0FBQ2dDLFVBQVUsQ0FBQ0YsU0FBUyxDQUFDLEVBQUU7TUFBQTtNQUFBcEMsY0FBQSxHQUFBZ0IsQ0FBQTtNQUFBaEIsY0FBQSxHQUFBQyxDQUFBO01BQzdCSyxFQUFFLENBQUNpQyxTQUFTLENBQUNILFNBQVMsRUFBRTtRQUFFSSxTQUFTLEVBQUU7TUFBSSxDQUFFLENBQUM7TUFBQztNQUFBeEMsY0FBQSxHQUFBQyxDQUFBO01BQzdDVyxlQUFlLENBQUNDLFdBQVcsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLENBQUM7SUFDcEUsQ0FBQztJQUFBO0lBQUE7TUFBQWIsY0FBQSxHQUFBZ0IsQ0FBQTtJQUFBO0lBQUFoQixjQUFBLEdBQUFDLENBQUE7SUFFRFcsZUFBZSxDQUFDQyxXQUFXLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxDQUFDO0lBRTFFO0lBQUE7SUFBQWIsY0FBQSxHQUFBQyxDQUFBO0lBQ0E2QixPQUFPLENBQUNDLEdBQUcsR0FBRyxDQUFDLEdBQUdVLElBQWUsS0FBSTtNQUFBO01BQUF6QyxjQUFBLEdBQUFpQixDQUFBO01BQ25DLE1BQU1ILE9BQU87TUFBQTtNQUFBLENBQUFkLGNBQUEsR0FBQUMsQ0FBQSxRQUFHd0MsSUFBSSxDQUFDSixJQUFJLENBQUMsR0FBRyxDQUFDO01BQzlCO01BQUE7TUFBQXJDLGNBQUEsR0FBQUMsQ0FBQTtNQUNBO01BQUk7TUFBQSxDQUFBRCxjQUFBLEdBQUFnQixDQUFBLFdBQUFGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxRQUFRLENBQUM7TUFBQTtNQUFBLENBQUExQyxjQUFBLEdBQUFnQixDQUFBLFdBQUlGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxVQUFVLENBQUM7TUFBQTtNQUFBLENBQUExQyxjQUFBLEdBQUFnQixDQUFBLFdBQUlGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxVQUFVLENBQUMsR0FBRTtRQUFBO1FBQUExQyxjQUFBLEdBQUFnQixDQUFBO1FBQUFoQixjQUFBLEdBQUFDLENBQUE7UUFDOUZXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFQyxPQUFPLEVBQUUsTUFBTSxDQUFDO01BQy9DLENBQUM7TUFBQTtNQUFBO1FBQUFkLGNBQUEsR0FBQWdCLENBQUE7TUFBQTtNQUNEO01BQUFoQixjQUFBLEdBQUFDLENBQUE7TUFDQTRCLGtCQUFrQixDQUFDLEdBQUdZLElBQUksQ0FBQztJQUM3QixDQUFDO0lBQUM7SUFBQXpDLGNBQUEsR0FBQUMsQ0FBQTtJQUVGNkIsT0FBTyxDQUFDTCxLQUFLLEdBQUcsQ0FBQyxHQUFHZ0IsSUFBZSxLQUFJO01BQUE7TUFBQXpDLGNBQUEsR0FBQWlCLENBQUE7TUFDckMsTUFBTUgsT0FBTztNQUFBO01BQUEsQ0FBQWQsY0FBQSxHQUFBQyxDQUFBLFFBQUd3QyxJQUFJLENBQUNKLElBQUksQ0FBQyxHQUFHLENBQUM7TUFDOUI7TUFBQTtNQUFBckMsY0FBQSxHQUFBQyxDQUFBO01BQ0E7TUFBSTtNQUFBLENBQUFELGNBQUEsR0FBQWdCLENBQUEsV0FBQUYsT0FBTyxDQUFDNEIsUUFBUSxDQUFDLFFBQVEsQ0FBQztNQUFBO01BQUEsQ0FBQTFDLGNBQUEsR0FBQWdCLENBQUEsV0FBSUYsT0FBTyxDQUFDNEIsUUFBUSxDQUFDLFVBQVUsQ0FBQztNQUFBO01BQUEsQ0FBQTFDLGNBQUEsR0FBQWdCLENBQUEsV0FBSUYsT0FBTyxDQUFDNEIsUUFBUSxDQUFDLFVBQVUsQ0FBQyxHQUFFO1FBQUE7UUFBQTFDLGNBQUEsR0FBQWdCLENBQUE7UUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtRQUM5RlcsZUFBZSxDQUFDQyxXQUFXLEVBQUVDLE9BQU8sRUFBRSxPQUFPLENBQUM7TUFDaEQsQ0FBQztNQUFBO01BQUE7UUFBQWQsY0FBQSxHQUFBZ0IsQ0FBQTtNQUFBO01BQ0Q7TUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtNQUNBK0Isb0JBQW9CLENBQUMsR0FBR1MsSUFBSSxDQUFDO0lBQy9CLENBQUM7SUFBQztJQUFBekMsY0FBQSxHQUFBQyxDQUFBO0lBRUY2QixPQUFPLENBQUNJLElBQUksR0FBRyxDQUFDLEdBQUdPLElBQWUsS0FBSTtNQUFBO01BQUF6QyxjQUFBLEdBQUFpQixDQUFBO01BQ3BDLE1BQU1ILE9BQU87TUFBQTtNQUFBLENBQUFkLGNBQUEsR0FBQUMsQ0FBQSxRQUFHd0MsSUFBSSxDQUFDSixJQUFJLENBQUMsR0FBRyxDQUFDO01BQzlCO01BQUE7TUFBQXJDLGNBQUEsR0FBQUMsQ0FBQTtNQUNBO01BQUk7TUFBQSxDQUFBRCxjQUFBLEdBQUFnQixDQUFBLFdBQUFGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxRQUFRLENBQUM7TUFBQTtNQUFBLENBQUExQyxjQUFBLEdBQUFnQixDQUFBLFdBQUlGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxVQUFVLENBQUM7TUFBQTtNQUFBLENBQUExQyxjQUFBLEdBQUFnQixDQUFBLFdBQUlGLE9BQU8sQ0FBQzRCLFFBQVEsQ0FBQyxVQUFVLENBQUMsR0FBRTtRQUFBO1FBQUExQyxjQUFBLEdBQUFnQixDQUFBO1FBQUFoQixjQUFBLEdBQUFDLENBQUE7UUFDOUZXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFQyxPQUFPLEVBQUUsU0FBUyxDQUFDO01BQ2xELENBQUM7TUFBQTtNQUFBO1FBQUFkLGNBQUEsR0FBQWdCLENBQUE7TUFBQTtNQUNEO01BQUFoQixjQUFBLEdBQUFDLENBQUE7TUFDQWdDLG1CQUFtQixDQUFDLEdBQUdRLElBQUksQ0FBQztJQUM5QixDQUFDO0lBRUQ7SUFDQTtJQUNBO0lBRUE7SUFDQSxNQUFNRSxlQUFlO0lBQUE7SUFBQSxDQUFBM0MsY0FBQSxHQUFBQyxDQUFBLFFBQVE7TUFDM0IyQyxTQUFTLEVBQUU7S0FDWjtJQUVEO0lBQUE7SUFBQTVDLGNBQUEsR0FBQUMsQ0FBQTtJQUNBVyxlQUFlLENBQUNDLFdBQVcsRUFBRSw2REFBNkQsRUFBRSxPQUFPLENBQUM7SUFBQztJQUFBYixjQUFBLEdBQUFDLENBQUE7SUFFckdXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLGFBQWFjLFFBQVEsaUJBQWlCUyxTQUFTLEVBQUUsRUFBRSxPQUFPLENBQUM7SUFFeEY7SUFDQSxNQUFNUyxPQUFPO0lBQUE7SUFBQSxDQUFBN0MsY0FBQSxHQUFBQyxDQUFBLFFBQUdFLElBQUksQ0FBQ2tDLElBQUksQ0FBQ1YsUUFBUSxFQUFFLEtBQUssQ0FBQztJQUFDO0lBQUEzQixjQUFBLEdBQUFDLENBQUE7SUFDM0MsSUFBSSxDQUFDSyxFQUFFLENBQUNnQyxVQUFVLENBQUNPLE9BQU8sQ0FBQyxFQUFFO01BQUE7TUFBQTdDLGNBQUEsR0FBQWdCLENBQUE7TUFDM0IsTUFBTThCLFFBQVE7TUFBQTtNQUFBLENBQUE5QyxjQUFBLEdBQUFDLENBQUEsUUFBRyxvQ0FBb0M0QyxPQUFPLEVBQUU7TUFBQztNQUFBN0MsY0FBQSxHQUFBQyxDQUFBO01BQy9EVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxLQUFLaUMsUUFBUSxFQUFFLEVBQUUsT0FBTyxDQUFDO01BQUM7TUFBQTlDLGNBQUEsR0FBQUMsQ0FBQTtNQUN2RCxNQUFNLElBQUk4QyxLQUFLLENBQUNELFFBQVEsQ0FBQztJQUMzQixDQUFDO0lBQUE7SUFBQTtNQUFBOUMsY0FBQSxHQUFBZ0IsQ0FBQTtJQUFBO0lBQUFoQixjQUFBLEdBQUFDLENBQUE7SUFDRFcsZUFBZSxDQUFDQyxXQUFXLEVBQUUsZ0NBQWdDZ0MsT0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDO0lBRWhGO0lBQ0E7SUFDQSxJQUFJRyxRQUFhO0lBRWpCO0lBQ0EsTUFBTUMsZUFBZTtJQUFBO0lBQUEsQ0FBQWpELGNBQUEsR0FBQUMsQ0FBQSxRQUFHRSxJQUFJLENBQUNrQyxJQUFJLENBQUNWLFFBQVEsRUFBRSxLQUFLLENBQUM7SUFBQztJQUFBM0IsY0FBQSxHQUFBQyxDQUFBO0lBQ25EVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxpQ0FBaUNvQyxlQUFlLEVBQUUsRUFBRSxPQUFPLENBQUM7SUFBQztJQUFBakQsY0FBQSxHQUFBQyxDQUFBO0lBQzFGVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxrQ0FBa0N1QixTQUFTLEVBQUUsRUFBRSxPQUFPLENBQUM7SUFFcEY7SUFDQSxNQUFNYyx5QkFBeUI7SUFBQTtJQUFBLENBQUFsRCxjQUFBLEdBQUFDLENBQUEsUUFBRztNQUNoQyxHQUFHMEMsZUFBZTtNQUNsQjtNQUNBUSxNQUFNLEVBQUUsU0FBQUEsQ0FBVUMsY0FBbUI7UUFBQTtRQUFBcEQsY0FBQSxHQUFBaUIsQ0FBQTtRQUNuQztRQUNBO1FBQ0EsTUFBTW9DLGlCQUFpQjtRQUFBO1FBQUEsQ0FBQXJELGNBQUEsR0FBQUMsQ0FBQSxRQUFHSSxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQ2lELE9BQU87UUFDaEU7UUFDQSxNQUFNQyxrQkFBa0I7UUFBQTtRQUFBLENBQUF2RCxjQUFBLEdBQUFDLENBQUEsUUFBR0ksT0FBTyxDQUFDLDRCQUE0QixDQUFDO1FBRWhFO1FBQUE7UUFBQUwsY0FBQSxHQUFBQyxDQUFBO1FBQ0FtRCxjQUFjLENBQUNJLHFCQUFxQixDQUFDLEtBQUssQ0FBQztRQUUzQztRQUFBO1FBQUF4RCxjQUFBLEdBQUFDLENBQUE7UUFDQW1ELGNBQWMsQ0FBQ0ssU0FBUyxDQUFDSixpQkFBaUIsQ0FBQztRQUUzQztRQUFBO1FBQUFyRCxjQUFBLEdBQUFDLENBQUE7UUFDQW1ELGNBQWMsQ0FBQ0ssU0FBUyxDQUFDRixrQkFBa0IsRUFBRTtVQUMzQ0csVUFBVSxFQUFFLHFCQUFxQixDQUFFO1NBQ3BDLENBQUM7UUFFRjtRQUFBO1FBQUExRCxjQUFBLEdBQUFDLENBQUE7UUFDQW1ELGNBQWMsQ0FBQ08sYUFBYSxDQUFDLFVBQVUsRUFBRSxNQUFPO1VBQUE7VUFBQTNELGNBQUEsR0FBQWlCLENBQUE7VUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtVQUFBO1lBQzlDMkQsU0FBUyxFQUFFQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZ0JBQWdCO1lBQUE7WUFBQSxDQUFBL0QsY0FBQSxHQUFBZ0IsQ0FBQSxXQUFHLGFBQWE2QyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsZ0JBQWdCLEVBQUU7WUFBQTtZQUFBLENBQUEvRCxjQUFBLEdBQUFnQixDQUFBLFdBQUcsVUFBVTtXQUNuRztTQUFDLENBQUM7UUFFSDtRQUFBO1FBQUFoQixjQUFBLEdBQUFDLENBQUE7UUFDQSxPQUFPO1VBQ0wrRCxlQUFlLEVBQUUsQ0FBQyxTQUFTLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUM7VUFDbERDLHNCQUFzQixFQUFFLE1BQU07VUFDOUJDLGtCQUFrQixFQUFFLE1BQU07VUFDMUJDLEdBQUcsRUFBRTtZQUNIO1lBQ0FDLEtBQUssRUFBRSxHQUFHO1lBQUU7WUFDWkMsTUFBTSxFQUFFLFVBQVU7WUFBRTtZQUNwQjNCLFFBQVEsRUFBRSxXQUFXO1lBQ3JCNEIsT0FBTyxFQUFFOztTQUVaO01BQ0g7S0FDRDtJQUFDO0lBQUF0RSxjQUFBLEdBQUFDLENBQUE7SUFFRitDLFFBQVEsR0FBRyxJQUFJdkMsVUFBQSxDQUFBNkMsT0FBUSxDQUFDTCxlQUFlLEVBQUViLFNBQVMsRUFBRWMseUJBQXlCLENBQUM7SUFBQztJQUFBbEQsY0FBQSxHQUFBQyxDQUFBO0lBRS9FLElBQUk7TUFBQTtNQUFBRCxjQUFBLEdBQUFDLENBQUE7TUFDRjtNQUNBVyxlQUFlLENBQUNDLFdBQVcsRUFBRSw0QkFBNEIsRUFBRSxNQUFNLENBQUM7TUFBQztNQUFBYixjQUFBLEdBQUFDLENBQUE7TUFFbkUsSUFBSTtRQUFBO1FBQUFELGNBQUEsR0FBQUMsQ0FBQTtRQUNGLE1BQU0rQyxRQUFRLENBQUN1QixLQUFLLEVBQUU7UUFBQztRQUFBdkUsY0FBQSxHQUFBQyxDQUFBO1FBQ3ZCVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLENBQUM7TUFDeEUsQ0FBQyxDQUFDLE9BQU8yRCxVQUFVLEVBQUU7UUFDbkIsTUFBTUMsY0FBYztRQUFBO1FBQUEsQ0FBQXpFLGNBQUEsR0FBQUMsQ0FBQSxTQUFHTyxTQUFBLENBQUFrQixRQUFRLENBQUNELEtBQUssQ0FBQytDLFVBQVUsQ0FBQztRQUFDO1FBQUF4RSxjQUFBLEdBQUFDLENBQUE7UUFDbERPLFNBQUEsQ0FBQWUsTUFBTSxDQUFDRSxLQUFLLENBQUMsb0JBQW9CWixXQUFXLEVBQUUsRUFBRTtVQUM5Q1ksS0FBSyxFQUFFZ0QsY0FBYztVQUNyQjVEO1NBQ0QsQ0FBQztRQUFDO1FBQUFiLGNBQUEsR0FBQUMsQ0FBQTtRQUVILElBQUl1RSxVQUFVLFlBQVl6QixLQUFLLEVBQUU7VUFBQTtVQUFBL0MsY0FBQSxHQUFBZ0IsQ0FBQTtVQUFBaEIsY0FBQSxHQUFBQyxDQUFBO1VBQy9CO1VBQ0FXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLG1CQUFtQkwsU0FBQSxDQUFBa0IsUUFBUSxDQUFDRCxLQUFLLENBQUMrQyxVQUFVLENBQUMxRCxPQUFPLENBQUMsRUFBRSxFQUFFLE9BQU8sQ0FBQztVQUU5RjtVQUFBO1VBQUFkLGNBQUEsR0FBQUMsQ0FBQTtVQUNBO1VBQUk7VUFBQSxDQUFBRCxjQUFBLEdBQUFnQixDQUFBLDBCQUFlLElBQUl3RCxVQUFVO1VBQUE7VUFBQSxDQUFBeEUsY0FBQSxHQUFBZ0IsQ0FBQSxXQUFJd0QsVUFBVSxDQUFDRSxhQUFhLEdBQUU7WUFBQTtZQUFBMUUsY0FBQSxHQUFBZ0IsQ0FBQTtZQUM3RCxNQUFNMkQsaUJBQWlCO1lBQUE7WUFBQSxDQUFBM0UsY0FBQSxHQUFBQyxDQUFBLFNBQUdPLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDK0MsVUFBVSxDQUFDRSxhQUFhLENBQUM7WUFBQztZQUFBMUUsY0FBQSxHQUFBQyxDQUFBO1lBQ25FTyxTQUFBLENBQUFlLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDLDRCQUE0QlosV0FBVyxFQUFFLEVBQUU7Y0FDdEQ2RCxhQUFhLEVBQUVDO2FBQ2hCLENBQUM7WUFBQztZQUFBM0UsY0FBQSxHQUFBQyxDQUFBO1lBQ0hXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLHNCQUFzQjhELGlCQUFpQixFQUFFLEVBQUUsT0FBTyxDQUFDO1lBQUM7WUFBQTNFLGNBQUEsR0FBQUMsQ0FBQTtZQUVqRixJQUFJdUUsVUFBVSxDQUFDRSxhQUFhLFlBQVkzQixLQUFLLEVBQUU7Y0FBQTtjQUFBL0MsY0FBQSxHQUFBZ0IsQ0FBQTtjQUM3QyxNQUFNNEQsd0JBQXdCO2NBQUE7Y0FBQSxDQUFBNUUsY0FBQSxHQUFBQyxDQUFBLFNBQUdPLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDK0MsVUFBVSxDQUFDRSxhQUFhLENBQUM1RCxPQUFPLENBQUM7Y0FBQztjQUFBZCxjQUFBLEdBQUFDLENBQUE7Y0FDbEZXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLHNCQUFzQitELHdCQUF3QixFQUFFLEVBQUUsT0FBTyxDQUFDO1lBQ3pGLENBQUM7WUFBQTtZQUFBO2NBQUE1RSxjQUFBLEdBQUFnQixDQUFBO1lBQUE7VUFDSCxDQUFDO1VBQUE7VUFBQTtZQUFBaEIsY0FBQSxHQUFBZ0IsQ0FBQTtVQUFBO1VBRUQ7VUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtVQUNBO1VBQUk7VUFBQSxDQUFBRCxjQUFBLEdBQUFnQixDQUFBLGtCQUFPLElBQUl3RCxVQUFVO1VBQUE7VUFBQSxDQUFBeEUsY0FBQSxHQUFBZ0IsQ0FBQSxXQUFJd0QsVUFBVSxDQUFDSyxLQUFLLEdBQUU7WUFBQTtZQUFBN0UsY0FBQSxHQUFBZ0IsQ0FBQTtZQUM3QyxNQUFNOEQsY0FBYztZQUFBO1lBQUEsQ0FBQTlFLGNBQUEsR0FBQUMsQ0FBQSxTQUFHTyxTQUFBLENBQUFrQixRQUFRLENBQUNELEtBQUssQ0FBQytDLFVBQVUsQ0FBQ0ssS0FBSyxDQUFDO1lBQUM7WUFBQTdFLGNBQUEsR0FBQUMsQ0FBQTtZQUN4RE8sU0FBQSxDQUFBZSxNQUFNLENBQUNFLEtBQUssQ0FBQyx5QkFBeUJaLFdBQVcsRUFBRSxFQUFFO2NBQ25EZ0UsS0FBSyxFQUFFQzthQUNSLENBQUM7WUFBQztZQUFBOUUsY0FBQSxHQUFBQyxDQUFBO1lBQ0hXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLGtCQUFrQmlFLGNBQWMsRUFBRSxFQUFFLE9BQU8sQ0FBQztVQUMzRSxDQUFDO1VBQUE7VUFBQTtZQUFBOUUsY0FBQSxHQUFBZ0IsQ0FBQTtVQUFBO1FBQ0gsQ0FBQyxNQUFNO1VBQUE7VUFBQWhCLGNBQUEsR0FBQWdCLENBQUE7VUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtVQUNMVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxtQkFBbUI0RCxjQUFjLEVBQUUsRUFBRSxPQUFPLENBQUM7UUFDNUU7UUFBQztRQUFBekUsY0FBQSxHQUFBQyxDQUFBO1FBQ0QsTUFBTXVFLFVBQVU7TUFDbEI7TUFFQTtNQUNBLElBQUlPLGVBQWU7TUFBQTtNQUFBLENBQUEvRSxjQUFBLEdBQUFDLENBQUEsU0FBRyxFQUFFO01BRXhCO01BQ0EsTUFBTStFLFNBQVM7TUFBQTtNQUFBLENBQUFoRixjQUFBLEdBQUFDLENBQUEsU0FBRyxJQUFJVSxxQkFBQSxDQUFBMkMsT0FBaUIsQ0FBQ3pDLFdBQVcsRUFBRXVCLFNBQVMsRUFBRTtRQUM5RFIsSUFBSSxFQUFFQSxJQUFJO1FBQ1ZxRCxVQUFVLEVBQUUsSUFBSTtRQUNoQkMsT0FBTyxFQUFFLElBQUk7UUFDYkMsV0FBVyxFQUFFLEtBQUs7UUFDbEJDLEtBQUssRUFBRSxDQUFDekQsUUFBUSxHQUFHLE9BQU8sQ0FBQztRQUMzQjBELE1BQU0sRUFBRSxDQUFDbEYsSUFBSSxDQUFDa0MsSUFBSSxDQUFDVixRQUFRLEVBQUUsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQ2hESixNQUFNLEVBQUU7VUFDTlEsR0FBRyxFQUFHdUQsR0FBVyxJQUFJO1lBQUE7WUFBQXRGLGNBQUEsR0FBQWlCLENBQUE7WUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtZQUNuQjZCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLElBQUlsQixXQUFXLEtBQUt5RSxHQUFHLEVBQUUsQ0FBQztZQUN0QztZQUNBLE1BQU1DLGNBQWM7WUFBQTtZQUFBLENBQUF2RixjQUFBLEdBQUFDLENBQUEsU0FBR3FGLEdBQUcsQ0FBQ0UsS0FBSyxDQUFDLHVDQUF1QyxDQUFDO1lBQUM7WUFBQXhGLGNBQUEsR0FBQUMsQ0FBQTtZQUMxRSxJQUFJc0YsY0FBYyxFQUFFO2NBQUE7Y0FBQXZGLGNBQUEsR0FBQWdCLENBQUE7Y0FBQWhCLGNBQUEsR0FBQUMsQ0FBQTtjQUNsQjhFLGVBQWUsR0FBR1EsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdkMsQ0FBQztZQUFBO1lBQUE7Y0FBQXZGLGNBQUEsR0FBQWdCLENBQUE7WUFBQTtZQUFBaEIsY0FBQSxHQUFBQyxDQUFBO1lBQ0RXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFeUUsR0FBRyxFQUFFLE1BQU0sQ0FBQztVQUMzQyxDQUFDO1VBQ0RHLElBQUksRUFBR0gsR0FBVyxJQUFJO1lBQUE7WUFBQXRGLGNBQUEsR0FBQWlCLENBQUE7WUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtZQUNwQjZCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLElBQUlsQixXQUFXLEtBQUt5RSxHQUFHLEVBQUUsQ0FBQztZQUN0QztZQUNBLE1BQU1DLGNBQWM7WUFBQTtZQUFBLENBQUF2RixjQUFBLEdBQUFDLENBQUEsU0FBR3FGLEdBQUcsQ0FBQ0UsS0FBSyxDQUFDLHVDQUF1QyxDQUFDO1lBQUM7WUFBQXhGLGNBQUEsR0FBQUMsQ0FBQTtZQUMxRSxJQUFJc0YsY0FBYyxFQUFFO2NBQUE7Y0FBQXZGLGNBQUEsR0FBQWdCLENBQUE7Y0FBQWhCLGNBQUEsR0FBQUMsQ0FBQTtjQUNsQjhFLGVBQWUsR0FBR1EsY0FBYyxDQUFDLENBQUMsQ0FBQztZQUNyQyxDQUFDO1lBQUE7WUFBQTtjQUFBdkYsY0FBQSxHQUFBZ0IsQ0FBQTtZQUFBO1lBQUFoQixjQUFBLEdBQUFDLENBQUE7WUFDRFcsZUFBZSxDQUFDQyxXQUFXLEVBQUV5RSxHQUFHLEVBQUUsTUFBTSxDQUFDO1VBQzNDLENBQUM7VUFDRDdELEtBQUssRUFBRzZELEdBQVcsSUFBSTtZQUFBO1lBQUF0RixjQUFBLEdBQUFpQixDQUFBO1lBQUFqQixjQUFBLEdBQUFDLENBQUE7WUFDckI2QixPQUFPLENBQUNMLEtBQUssQ0FBQyxJQUFJWixXQUFXLEtBQUt5RSxHQUFHLEVBQUUsQ0FBQztZQUFDO1lBQUF0RixjQUFBLEdBQUFDLENBQUE7WUFDekNXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFeUUsR0FBRyxFQUFFLE9BQU8sQ0FBQztVQUM1Qzs7T0FFSCxDQUFDO01BRUY7TUFDQSxNQUFNSSxZQUFZO01BQUE7TUFBQSxDQUFBMUYsY0FBQSxHQUFBQyxDQUFBLFNBQUcwQixRQUFRLEdBQUcsT0FBTztNQUN2QyxNQUFNZ0UsUUFBUTtNQUFBO01BQUEsQ0FBQTNGLGNBQUEsR0FBQUMsQ0FBQSxTQUFHRSxJQUFJLENBQUNrQyxJQUFJLENBQUNWLFFBQVEsRUFBRSxPQUFPLENBQUM7TUFBQztNQUFBM0IsY0FBQSxHQUFBQyxDQUFBO01BQzlDK0UsU0FBUyxDQUFDWSxVQUFVLENBQUMsQ0FBQ0YsWUFBWSxDQUFDLENBQUM7TUFFcEM7TUFBQTtNQUFBMUYsY0FBQSxHQUFBQyxDQUFBO01BQ0EsSUFBSStFLFNBQVMsQ0FBQ2EsT0FBTyxFQUFFO1FBQUE7UUFBQTdGLGNBQUEsR0FBQWdCLENBQUE7UUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtRQUNyQitFLFNBQVMsQ0FBQ2EsT0FBTyxDQUFDQyxFQUFFLENBQUMsUUFBUSxFQUFFLE1BQU9DLFdBQW1CLElBQUk7VUFBQTtVQUFBL0YsY0FBQSxHQUFBaUIsQ0FBQTtVQUFBakIsY0FBQSxHQUFBQyxDQUFBO1VBQzNEO1VBQ0EsSUFBSThGLFdBQVcsQ0FBQ0MsVUFBVSxDQUFDTCxRQUFRLENBQUMsRUFBRTtZQUFBO1lBQUEzRixjQUFBLEdBQUFnQixDQUFBO1lBQUFoQixjQUFBLEdBQUFDLENBQUE7WUFDcENXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLHVDQUF1Q2tGLFdBQVcsRUFBRSxFQUFFLE9BQU8sQ0FBQztZQUFDO1lBQUEvRixjQUFBLEdBQUFDLENBQUE7WUFDNUY7VUFDRixDQUFDO1VBQUE7VUFBQTtZQUFBRCxjQUFBLEdBQUFnQixDQUFBO1VBQUE7VUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtVQUVEVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxvQkFBb0JrRixXQUFXLEVBQUUsRUFBRSxNQUFNLENBQUM7VUFBQztVQUFBL0YsY0FBQSxHQUFBQyxDQUFBO1VBQ3hFVyxlQUFlLENBQUNDLFdBQVcsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLENBQUM7VUFBQztVQUFBYixjQUFBLEdBQUFDLENBQUE7VUFDL0QsSUFBSTtZQUFBO1lBQUFELGNBQUEsR0FBQUMsQ0FBQTtZQUNGLE1BQU0rQyxRQUFRLENBQUN1QixLQUFLLEVBQUU7WUFBQztZQUFBdkUsY0FBQSxHQUFBQyxDQUFBO1lBQ3ZCVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLENBQUM7VUFDMUUsQ0FBQyxDQUFDLE9BQU9ZLEtBQUssRUFBRTtZQUNkLE1BQU1nRCxjQUFjO1lBQUE7WUFBQSxDQUFBekUsY0FBQSxHQUFBQyxDQUFBLFNBQUdPLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDQSxLQUFLLENBQUM7WUFBQztZQUFBekIsY0FBQSxHQUFBQyxDQUFBO1lBQzdDTyxTQUFBLENBQUFlLE1BQU0sQ0FBQ0UsS0FBSyxDQUFDLHNCQUFzQlosV0FBVyxFQUFFLEVBQUU7Y0FDaERZLEtBQUssRUFBRWdELGNBQWM7Y0FDckI1RDthQUNELENBQUM7WUFBQztZQUFBYixjQUFBLEdBQUFDLENBQUE7WUFDSFcsZUFBZSxDQUFDQyxXQUFXLEVBQUUscUJBQXFCNEQsY0FBYyxFQUFFLEVBQUUsT0FBTyxDQUFDO1VBQzlFO1FBQ0YsQ0FBQyxDQUFDO01BQ0osQ0FBQztNQUFBO01BQUE7UUFBQXpFLGNBQUEsR0FBQWdCLENBQUE7TUFBQTtNQUVEO01BQUFoQixjQUFBLEdBQUFDLENBQUE7TUFDQVcsZUFBZSxDQUFDQyxXQUFXLEVBQUUsMENBQTBDZSxJQUFJLEdBQUcsRUFBRSxNQUFNLENBQUM7TUFBQztNQUFBNUIsY0FBQSxHQUFBQyxDQUFBO01BRXhGK0UsU0FBUyxDQUFDaUIsS0FBSyxDQUFDckUsSUFBSSxDQUFDO01BRXJCO01BQUE7TUFBQTVCLGNBQUEsR0FBQUMsQ0FBQTtNQUNBLE1BQU0sSUFBSWtCLE9BQU8sQ0FBRUMsT0FBTyxJQUFLO1FBQUE7UUFBQXBCLGNBQUEsR0FBQWlCLENBQUE7UUFBQWpCLGNBQUEsR0FBQUMsQ0FBQTtRQUFBLE9BQUFpRyxVQUFVLENBQUM5RSxPQUFPLEVBQUUsSUFBSSxDQUFDO01BQUQsQ0FBQyxDQUFDO01BRXpEO01BQ0EsTUFBTStFLGNBQWM7TUFBQTtNQUFBLENBQUFuRyxjQUFBLEdBQUFDLENBQUE7TUFBRztNQUFBLENBQUFELGNBQUEsR0FBQWdCLENBQUEsV0FBQStELGVBQWU7TUFBQTtNQUFBLENBQUEvRSxjQUFBLEdBQUFnQixDQUFBLFdBQUksb0JBQW9CWSxJQUFJLEVBQUU7TUFDcEUsTUFBTXdFLFVBQVU7TUFBQTtNQUFBLENBQUFwRyxjQUFBLEdBQUFDLENBQUEsU0FBRzhFLGVBQWU7TUFBQTtNQUFBLENBQUEvRSxjQUFBLEdBQUFnQixDQUFBLFdBQUdxRixRQUFRLENBQUN0QixlQUFlLENBQUN1QixLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFBQTtNQUFBLENBQUF0RyxjQUFBLEdBQUFnQixDQUFBLFdBQUdZLElBQUk7TUFBQztNQUFBNUIsY0FBQSxHQUFBQyxDQUFBO01BRXBGVyxlQUFlLENBQUNDLFdBQVcsRUFBRSxzQkFBc0JzRixjQUFjLEVBQUUsRUFBRSxNQUFNLENBQUM7TUFBQztNQUFBbkcsY0FBQSxHQUFBQyxDQUFBO01BQzdFVyxlQUFlLENBQUNDLFdBQVcsRUFBRSwrQkFBK0IsRUFBRSxNQUFNLENBQUM7TUFFckU7TUFBQTtNQUFBYixjQUFBLEdBQUFDLENBQUE7TUFDQVcsZUFBZSxDQUFDQyxXQUFXLEVBQUUscUNBQXFDLEVBQUUsTUFBTSxDQUFDO01BQzNFLE1BQU0wRixXQUFXO01BQUE7TUFBQSxDQUFBdkcsY0FBQSxHQUFBQyxDQUFBLFNBQUcsSUFBSU0sdUJBQUEsQ0FBQWlHLG1CQUFtQixDQUFDckcsSUFBSSxDQUFDa0MsSUFBSSxDQUFDVixRQUFRLEVBQUUsS0FBSyxDQUFDLENBQUM7TUFBQztNQUFBM0IsY0FBQSxHQUFBQyxDQUFBO01BQ3hFLE1BQU1zRyxXQUFXLENBQUNFLFVBQVUsRUFBRTtNQUFDO01BQUF6RyxjQUFBLEdBQUFDLENBQUE7TUFDL0JXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sQ0FBQztNQUFDO01BQUFiLGNBQUEsR0FBQUMsQ0FBQTtNQUU3RCxPQUFPO1FBQ0wrQyxRQUFRO1FBQ1JnQyxTQUFTO1FBQ1RyRCxRQUFRLEVBQUV4QixJQUFJLENBQUNrQyxJQUFJLENBQUNWLFFBQVEsRUFBRSxLQUFLLENBQUM7UUFDcENTLFNBQVM7UUFDVFIsSUFBSSxFQUFFd0UsVUFBVTtRQUNoQk0sU0FBUyxFQUFFUCxjQUFjO1FBQ3pCSSxXQUFXO1FBQ1hwRTtPQUNEO0lBQ0gsQ0FBQyxTQUFTO01BQ1I7SUFBQTtFQUVKLENBQUMsQ0FBQyxPQUFPVixLQUFLLEVBQUU7SUFBQTtJQUFBekIsY0FBQSxHQUFBQyxDQUFBO0lBQ2Q7SUFDQWtDLGNBQWMsRUFBRTtJQUNoQixNQUFNc0MsY0FBYztJQUFBO0lBQUEsQ0FBQXpFLGNBQUEsR0FBQUMsQ0FBQSxTQUFHTyxTQUFBLENBQUFrQixRQUFRLENBQUNELEtBQUssQ0FBQ0EsS0FBSyxDQUFDO0lBQUM7SUFBQXpCLGNBQUEsR0FBQUMsQ0FBQTtJQUM3Q08sU0FBQSxDQUFBZSxNQUFNLENBQUNFLEtBQUssQ0FBQyw4QkFBOEJaLFdBQVcsRUFBRSxFQUFFO01BQ3hEWSxLQUFLLEVBQUVnRCxjQUFjO01BQ3JCNUQ7S0FDRCxDQUFDO0lBQUM7SUFBQWIsY0FBQSxHQUFBQyxDQUFBO0lBQ0hXLGVBQWUsQ0FBQ0MsV0FBVyxFQUFFLDZCQUE2QjRELGNBQWMsRUFBRSxFQUFFLE9BQU8sQ0FBQztJQUFDO0lBQUF6RSxjQUFBLEdBQUFDLENBQUE7SUFDckYsTUFBTXdCLEtBQUs7RUFDYjtBQUNGO0FBRUE7OztBQUdPLGVBQWV2QixpQkFBaUJBLENBQUN5RyxNQUFxQjtFQUFBO0VBQUEzRyxjQUFBLEdBQUFpQixDQUFBO0VBQUFqQixjQUFBLEdBQUFDLENBQUE7RUFDM0QsSUFBSTtJQUFBO0lBQUFELGNBQUEsR0FBQUMsQ0FBQTtJQUNGO0lBQ0EsSUFBSTBHLE1BQU0sQ0FBQ3hFLGNBQWMsRUFBRTtNQUFBO01BQUFuQyxjQUFBLEdBQUFnQixDQUFBO01BQUFoQixjQUFBLEdBQUFDLENBQUE7TUFDekIwRyxNQUFNLENBQUN4RSxjQUFjLEVBQUU7SUFDekIsQ0FBQztJQUFBO0lBQUE7TUFBQW5DLGNBQUEsR0FBQWdCLENBQUE7SUFBQTtJQUVEO0lBQUFoQixjQUFBLEdBQUFDLENBQUE7SUFDQTtJQUFJO0lBQUEsQ0FBQUQsY0FBQSxHQUFBZ0IsQ0FBQSxXQUFBMkYsTUFBTSxDQUFDM0IsU0FBUztJQUFBO0lBQUEsQ0FBQWhGLGNBQUEsR0FBQWdCLENBQUEsV0FBSTJGLE1BQU0sQ0FBQzNCLFNBQVMsQ0FBQ2EsT0FBTyxHQUFFO01BQUE7TUFBQTdGLGNBQUEsR0FBQWdCLENBQUE7TUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtNQUNoRCxJQUFJO1FBQUE7UUFBQUQsY0FBQSxHQUFBQyxDQUFBO1FBQ0YsTUFBTTBHLE1BQU0sQ0FBQzNCLFNBQVMsQ0FBQ2EsT0FBTyxDQUFDZSxLQUFLLEVBQUU7TUFDeEMsQ0FBQyxDQUFDLE9BQU9DLFlBQVksRUFBRTtRQUFBO1FBQUE3RyxjQUFBLEdBQUFDLENBQUE7UUFDckJPLFNBQUEsQ0FBQWUsTUFBTSxDQUFDRSxLQUFLLENBQUMsdUNBQXVDa0YsTUFBTSxDQUFDL0UsSUFBSSxFQUFFLEVBQUU7VUFDakVILEtBQUssRUFBRWpCLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDb0YsWUFBWSxDQUFDO1VBQ25DakYsSUFBSSxFQUFFK0UsTUFBTSxDQUFDL0U7U0FDZCxDQUFDO01BQ0o7SUFDRixDQUFDO0lBQUE7SUFBQTtNQUFBNUIsY0FBQSxHQUFBZ0IsQ0FBQTtJQUFBO0lBRUQ7SUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtJQUNBO0lBQUk7SUFBQSxDQUFBRCxjQUFBLEdBQUFnQixDQUFBLFdBQUEyRixNQUFNLENBQUMzQixTQUFTO0lBQUE7SUFBQSxDQUFBaEYsY0FBQSxHQUFBZ0IsQ0FBQSxXQUFJLE9BQU8yRixNQUFNLENBQUMzQixTQUFTLENBQUM0QixLQUFLLEtBQUssVUFBVSxHQUFFO01BQUE7TUFBQTVHLGNBQUEsR0FBQWdCLENBQUE7TUFBQWhCLGNBQUEsR0FBQUMsQ0FBQTtNQUNwRSxJQUFJO1FBQUE7UUFBQUQsY0FBQSxHQUFBQyxDQUFBO1FBQ0YsTUFBTTBHLE1BQU0sQ0FBQzNCLFNBQVMsQ0FBQzRCLEtBQUssRUFBRTtNQUNoQyxDQUFDLENBQUMsT0FBT0UsVUFBVSxFQUFFO1FBQUE7UUFBQTlHLGNBQUEsR0FBQUMsQ0FBQTtRQUNuQk8sU0FBQSxDQUFBZSxNQUFNLENBQUNFLEtBQUssQ0FBQyxxQ0FBcUNrRixNQUFNLENBQUMvRSxJQUFJLEVBQUUsRUFBRTtVQUMvREgsS0FBSyxFQUFFakIsU0FBQSxDQUFBa0IsUUFBUSxDQUFDRCxLQUFLLENBQUNxRixVQUFVLENBQUM7VUFDakNsRixJQUFJLEVBQUUrRSxNQUFNLENBQUMvRTtTQUNkLENBQUM7TUFDSjtJQUNGLENBQUM7SUFBQTtJQUFBO01BQUE1QixjQUFBLEdBQUFnQixDQUFBO0lBQUE7SUFFRDtJQUFBaEIsY0FBQSxHQUFBQyxDQUFBO0lBQ0EsSUFBSUssRUFBRSxDQUFDZ0MsVUFBVSxDQUFDcUUsTUFBTSxDQUFDdkUsU0FBUyxDQUFDLEVBQUU7TUFBQTtNQUFBcEMsY0FBQSxHQUFBZ0IsQ0FBQTtNQUFBaEIsY0FBQSxHQUFBQyxDQUFBO01BQ25DLElBQUk7UUFBQTtRQUFBRCxjQUFBLEdBQUFDLENBQUE7UUFDRkssRUFBRSxDQUFDeUcsTUFBTSxDQUFDSixNQUFNLENBQUN2RSxTQUFTLEVBQUU7VUFBRUksU0FBUyxFQUFFLElBQUk7VUFBRXdFLEtBQUssRUFBRTtRQUFJLENBQUUsQ0FBQztNQUMvRCxDQUFDLENBQUMsT0FBT0MsWUFBWSxFQUFFO1FBQUE7UUFBQWpILGNBQUEsR0FBQUMsQ0FBQTtRQUNyQk8sU0FBQSxDQUFBZSxNQUFNLENBQUNFLEtBQUssQ0FBQyw4QkFBOEIsRUFBRTtVQUMzQ0EsS0FBSyxFQUFFakIsU0FBQSxDQUFBa0IsUUFBUSxDQUFDRCxLQUFLLENBQUN3RixZQUFZLENBQUM7VUFDbkNDLFNBQVMsRUFBRTFHLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ3ZCLElBQUksQ0FBQ3dHLE1BQU0sQ0FBQ3ZFLFNBQVM7U0FDMUMsQ0FBQztNQUNKO0lBQ0YsQ0FBQztJQUFBO0lBQUE7TUFBQXBDLGNBQUEsR0FBQWdCLENBQUE7SUFBQTtFQUNILENBQUMsQ0FBQyxPQUFPUyxLQUFLLEVBQUU7SUFBQTtJQUFBekIsY0FBQSxHQUFBQyxDQUFBO0lBQ2RPLFNBQUEsQ0FBQWUsTUFBTSxDQUFDRSxLQUFLLENBQUMsa0NBQWtDa0YsTUFBTSxDQUFDL0UsSUFBSSxFQUFFLEVBQUU7TUFDNURILEtBQUssRUFBRWpCLFNBQUEsQ0FBQWtCLFFBQVEsQ0FBQ0QsS0FBSyxDQUFDQSxLQUFLLENBQUM7TUFDNUJHLElBQUksRUFBRStFLE1BQU0sQ0FBQy9FO0tBQ2QsQ0FBQztFQUNKO0FBQ0YiLCJpZ25vcmVMaXN0IjpbXX0=