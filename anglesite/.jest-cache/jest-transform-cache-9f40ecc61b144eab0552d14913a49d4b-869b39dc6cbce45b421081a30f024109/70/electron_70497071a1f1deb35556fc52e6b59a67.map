{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/mocks/electron.ts","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/mocks/electron.ts"],"sourcesContent":["// test/mocks/electron.ts\n\nconst mockApp = {\n  setName: jest.fn(),\n  whenReady: jest.fn(),\n  on: jest.fn(),\n  quit: jest.fn(),\n  commandLine: {\n    appendSwitch: jest.fn(),\n  },\n  getPath: jest.fn(() => '/mock/path'),\n};\n\nconst mockMenu = Object.assign(\n  jest.fn(() => ({\n    append: jest.fn(),\n    popup: jest.fn(),\n  })),\n  {\n    setApplicationMenu: jest.fn(),\n    buildFromTemplate: jest.fn(),\n  }\n);\n\nconst mockMenuItem = jest.fn();\n\nconst mockBrowserWindow = {\n  isDestroyed: jest.fn(() => false),\n  isMaximized: jest.fn(() => false),\n  focus: jest.fn(),\n  show: jest.fn(),\n  close: jest.fn(() => {\n    // Mark window as destroyed when close is called\n    mockBrowserWindow.isDestroyed.mockReturnValue(true);\n    // Emit closed event when close is called synchronously\n    const closedHandler = mockBrowserWindow.on.mock.calls.find((call) => call[0] === 'closed');\n    if (closedHandler && closedHandler[1]) {\n      closedHandler[1]();\n    }\n  }),\n  getBounds: jest.fn(() => ({ width: 1200, height: 800, x: 0, y: 0 })),\n  setBounds: jest.fn(),\n  maximize: jest.fn(),\n  getTitle: jest.fn(() => 'Test Window'),\n  on: jest.fn(),\n  once: jest.fn(),\n  loadFile: jest.fn(),\n  webContents: {\n    send: jest.fn(),\n    isLoading: jest.fn(() => false),\n    executeJavaScript: jest.fn(() => Promise.resolve()),\n    once: jest.fn(),\n  },\n  contentView: {\n    addChildView: jest.fn(),\n    children: [],\n  },\n};\n\nconst mockWebContents = {\n  on: jest.fn(),\n  removeAllListeners: jest.fn(),\n  loadURL: jest.fn(() => Promise.resolve()),\n  reload: jest.fn(),\n};\n\nconst mockWebContentsView = {\n  webContents: mockWebContents,\n  setBounds: jest.fn(),\n};\n\nconst mockIpcMain = {\n  on: jest.fn(),\n  handle: jest.fn(),\n  removeListener: jest.fn(),\n};\n\nconst mockDialog = {\n  showMessageBox: jest.fn(),\n  showMessageBoxSync: jest.fn(),\n  showSaveDialog: jest.fn(),\n  showSaveDialogSync: jest.fn(),\n  showOpenDialog: jest.fn(),\n  showOpenDialogSync: jest.fn(),\n  showErrorBox: jest.fn(),\n};\n\nconst mockShell = {\n  openExternal: jest.fn(),\n  showItemInFolder: jest.fn(),\n};\n\nconst mockNativeTheme = {\n  shouldUseDarkColors: false,\n  on: jest.fn(),\n};\n\n// Create the BrowserWindow constructor with static methods\nconst BrowserWindowConstructor = Object.assign(\n  jest.fn(() => {\n    return mockBrowserWindow;\n  }),\n  {\n    fromWebContents: jest.fn(),\n    getAllWindows: jest.fn(() => []),\n    getFocusedWindow: jest.fn(),\n  }\n);\n\njest.mock('electron', () => ({\n  app: mockApp,\n  Menu: mockMenu,\n  MenuItem: mockMenuItem,\n  BrowserWindow: BrowserWindowConstructor,\n  WebContentsView: jest.fn(() => mockWebContentsView), // Use a factory for WebContentsView\n  ipcMain: mockIpcMain,\n  dialog: mockDialog,\n  shell: mockShell,\n  nativeTheme: mockNativeTheme,\n}));\n\n// Child process is already mocked by node-modules.ts\n// No need to mock it again here\n\n// Function to reset all Electron mocks\nexport const resetElectronMocks = () => {\n  mockApp.setName.mockClear();\n  mockApp.whenReady.mockClear();\n  mockApp.on.mockClear();\n  mockApp.quit.mockClear();\n  mockApp.commandLine.appendSwitch.mockClear();\n  mockApp.getPath.mockClear();\n\n  mockMenu.mockClear();\n  mockMenu.setApplicationMenu.mockClear();\n  mockMenu.buildFromTemplate.mockClear();\n  mockMenuItem.mockClear();\n\n  // Reset BrowserWindow static methods\n  BrowserWindowConstructor.mockClear();\n  BrowserWindowConstructor.mockImplementation(() => {\n    return mockBrowserWindow;\n  });\n  BrowserWindowConstructor.fromWebContents.mockClear();\n  BrowserWindowConstructor.getAllWindows.mockClear();\n  BrowserWindowConstructor.getAllWindows.mockReturnValue([]);\n  BrowserWindowConstructor.getFocusedWindow.mockClear();\n\n  // Reset BrowserWindow mock instance methods\n  mockBrowserWindow.isDestroyed.mockClear();\n  mockBrowserWindow.isDestroyed.mockReturnValue(false);\n  mockBrowserWindow.isMaximized.mockClear();\n  mockBrowserWindow.isMaximized.mockReturnValue(false);\n  mockBrowserWindow.focus.mockClear();\n  mockBrowserWindow.show.mockClear();\n  mockBrowserWindow.close.mockClear();\n  mockBrowserWindow.close.mockImplementation(() => {\n    // Mark window as destroyed when close is called\n    mockBrowserWindow.isDestroyed.mockReturnValue(true);\n    // Emit closed event when close is called synchronously\n    const closedHandler = mockBrowserWindow.on.mock.calls.find((call) => call[0] === 'closed');\n    if (closedHandler && closedHandler[1]) {\n      closedHandler[1]();\n    }\n  });\n  mockBrowserWindow.getBounds.mockClear();\n  mockBrowserWindow.getBounds.mockReturnValue({ width: 1200, height: 800, x: 0, y: 0 });\n  mockBrowserWindow.setBounds.mockClear();\n  mockBrowserWindow.maximize.mockClear();\n  mockBrowserWindow.getTitle.mockClear();\n  mockBrowserWindow.getTitle.mockReturnValue('Test Window');\n  mockBrowserWindow.on.mockClear();\n  mockBrowserWindow.once.mockClear();\n  mockBrowserWindow.loadFile.mockClear();\n  mockBrowserWindow.webContents.send.mockClear();\n  mockBrowserWindow.webContents.isLoading.mockClear();\n  mockBrowserWindow.webContents.isLoading.mockReturnValue(false);\n  mockBrowserWindow.webContents.executeJavaScript.mockClear();\n  mockBrowserWindow.webContents.executeJavaScript.mockResolvedValue(undefined);\n  mockBrowserWindow.webContents.once.mockClear();\n  mockBrowserWindow.contentView.addChildView.mockClear();\n  mockBrowserWindow.contentView.children = []; // Reset children array\n\n  // Reset WebContents mock instance methods\n  mockWebContents.on.mockClear();\n  mockWebContents.removeAllListeners.mockClear();\n  mockWebContents.loadURL.mockClear();\n  mockWebContents.loadURL.mockResolvedValue(undefined);\n  mockWebContents.reload.mockClear();\n\n  // Reset WebContentsView mock instance methods\n  mockWebContentsView.webContents = mockWebContents; // Ensure webContents is reset\n  mockWebContentsView.setBounds.mockClear();\n\n  mockIpcMain.on.mockClear();\n  mockIpcMain.handle.mockClear();\n  mockIpcMain.removeListener.mockClear();\n\n  mockDialog.showMessageBox.mockClear();\n  mockDialog.showMessageBoxSync.mockClear();\n  mockDialog.showSaveDialog.mockClear();\n  mockDialog.showSaveDialogSync.mockClear();\n  mockDialog.showOpenDialog.mockClear();\n  mockDialog.showOpenDialogSync.mockClear();\n  mockDialog.showErrorBox.mockClear();\n\n  mockShell.openExternal.mockClear();\n  mockShell.showItemInFolder.mockClear();\n\n  mockNativeTheme.shouldUseDarkColors = false; // Reset to default\n  mockNativeTheme.on.mockClear();\n};\n\n// Export individual mocks for direct access in tests if needed\nexport {\n  mockApp,\n  mockMenu,\n  mockMenuItem,\n  mockBrowserWindow,\n  BrowserWindowConstructor,\n  mockWebContents,\n  mockWebContentsView,\n  mockIpcMain,\n  mockDialog,\n  mockShell,\n  mockNativeTheme,\n};\n"],"version":3}