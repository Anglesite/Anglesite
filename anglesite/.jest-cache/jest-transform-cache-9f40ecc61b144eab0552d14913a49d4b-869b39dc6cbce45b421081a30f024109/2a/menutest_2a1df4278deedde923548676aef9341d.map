{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/menu.test.ts","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/menu.test.ts"],"sourcesContent":["/**\n * @file Tests for menu creation and window management\n */\nimport type { MenuItemConstructorOptions, Menu, MenuItem, KeyboardEvent } from 'electron';\n\n// Mock the service registry FIRST, before any other imports\njest.mock('../../app/core/service-registry', () => ({\n  getGlobalContext: jest.fn().mockReturnValue({\n    getService: jest.fn().mockReturnValue({\n      getRecentWebsites: jest.fn().mockReturnValue([]),\n    }),\n  }),\n  ServiceKeys: { STORE: 'store' },\n}));\n\n// Mock electron modules\nconst mockBrowserWindow = {\n  getFocusedWindow: jest.fn(),\n};\n\nconst mockMenu = {\n  buildFromTemplate: jest.fn(),\n  setApplicationMenu: jest.fn(),\n};\n\nconst mockShell = {\n  openExternal: jest.fn(),\n};\n\nconst mockClipboard = {\n  writeText: jest.fn(),\n};\n\nconst mockApp = {\n  getPath: jest.fn(() => '/mock/user/data'),\n};\n\njest.mock('electron', () => ({\n  Menu: mockMenu,\n  BrowserWindow: mockBrowserWindow,\n  shell: mockShell,\n  clipboard: mockClipboard,\n  app: mockApp,\n}));\n\n// Mock IPC handlers\nconst mockExportSiteHandler = jest.fn();\njest.mock('../../app/ipc/export', () => ({\n  exportSiteHandler: mockExportSiteHandler,\n}));\n\n// Mock UI modules\nconst mockHelpWindow = {\n  getTitle: jest.fn(),\n  focus: jest.fn(),\n  isDestroyed: jest.fn(() => false),\n};\n\nconst mockWebsiteWindow1 = {\n  window: {\n    getTitle: jest.fn(),\n    focus: jest.fn(),\n    isDestroyed: jest.fn(() => false),\n  },\n  webContentsView: {},\n  websiteName: 'Test Site 1',\n};\n\nconst mockWebsiteWindow2 = {\n  window: {\n    getTitle: jest.fn(),\n    focus: jest.fn(),\n    isDestroyed: jest.fn(() => false),\n  },\n  webContentsView: {},\n  websiteName: 'Test Site 2',\n};\n\njest.mock('../../app/ui/multi-window-manager', () => ({\n  getAllWebsiteWindows: jest.fn(),\n  isWebsiteEditorFocused: jest.fn(),\n  getHelpWindow: jest.fn(),\n  createHelpWindow: jest.fn(),\n}));\n\njest.mock('../../app/ui/window-manager', () => ({\n  openSettingsWindow: jest.fn(),\n  openWebsiteSelectionWindow: jest.fn(),\n  getNativeInput: jest.fn(),\n}));\n\njest.mock('../../app/server/eleventy', () => ({\n  getCurrentLiveServerUrl: jest.fn(() => 'https://localhost:8080'),\n}));\n\ndescribe('Menu', () => {\n  let menu: {\n    buildWindowList: () => MenuItemConstructorOptions[];\n    updateApplicationMenu: () => void;\n    createApplicationMenu: () => Menu;\n  };\n  let mockMultiWindowManager: {\n    getHelpWindow: jest.Mock;\n    getAllWebsiteWindows: jest.Mock;\n    createHelpWindow: jest.Mock;\n  };\n  let mockWindowManager: {\n    openSettingsWindow: jest.Mock;\n    openWebsiteSelectionWindow: jest.Mock;\n    getNativeInput: jest.Mock;\n  };\n\n  beforeAll(() => {\n    menu = require('../../app/ui/menu');\n    mockMultiWindowManager = require('../../app/ui/multi-window-manager');\n    mockWindowManager = require('../../app/ui/window-manager');\n  });\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Set default mock return values\n    mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n    mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n  });\n\n  describe('buildWindowList', () => {\n    it('should return empty list when no windows are open', () => {\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(null);\n\n      const windowList = menu.buildWindowList();\n\n      expect(windowList).toEqual([\n        {\n          label: 'No Windows Open',\n          enabled: false,\n        },\n      ]);\n    });\n\n    it('should include website windows', () => {\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n\n      mockWebsiteWindow1.window.getTitle.mockReturnValue('My Blog');\n      mockWebsiteWindow2.window.getTitle.mockReturnValue('Portfolio');\n\n      const websiteWindows = new Map([\n        ['site1', mockWebsiteWindow1],\n        ['site2', mockWebsiteWindow2],\n      ]);\n\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(websiteWindows);\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(mockWebsiteWindow1.window);\n\n      const windowList = menu.buildWindowList();\n\n      expect(windowList).toHaveLength(2);\n\n      // First window should be checked (focused)\n      expect(windowList[0]).toEqual({\n        label: 'My Blog',\n        type: 'checkbox',\n        checked: true,\n        click: expect.any(Function),\n      });\n\n      // Second window should not be checked\n      expect(windowList[1]).toEqual({\n        label: 'Portfolio',\n        type: 'checkbox',\n        checked: false,\n        click: expect.any(Function),\n      });\n\n      // Test click handlers\n      if (windowList[0].click) {\n        windowList[0].click({} as MenuItem, undefined, {} as KeyboardEvent);\n      }\n      expect(mockWebsiteWindow1.window.focus).toHaveBeenCalled();\n\n      if (windowList[1].click) {\n        windowList[1].click({} as MenuItem, undefined, {} as KeyboardEvent);\n      }\n      expect(mockWebsiteWindow2.window.focus).toHaveBeenCalled();\n    });\n\n    it('should skip destroyed windows', () => {\n      mockWebsiteWindow1.window.isDestroyed.mockReturnValue(true);\n      const websiteWindows = new Map([['site1', mockWebsiteWindow1]]);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(websiteWindows);\n\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(null);\n\n      const windowList = menu.buildWindowList();\n\n      expect(windowList).toEqual([\n        {\n          label: 'No Windows Open',\n          enabled: false,\n        },\n      ]);\n    });\n\n    it('should handle no focused window', () => {\n      mockHelpWindow.getTitle.mockReturnValue('Anglesite');\n      mockHelpWindow.isDestroyed.mockReturnValue(false); // Make sure it's not destroyed\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(mockHelpWindow);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(null);\n\n      const windowList = menu.buildWindowList();\n\n      expect(windowList).toHaveLength(1);\n      expect(windowList[0]).toEqual({\n        label: 'Anglesite',\n        type: 'checkbox',\n        checked: false,\n        click: expect.any(Function),\n      });\n    });\n  });\n\n  describe('updateApplicationMenu', () => {\n    it('should build and set application menu', () => {\n      const mockMenuInstance = { items: [] };\n      mockMenu.buildFromTemplate.mockReturnValue(mockMenuInstance);\n\n      menu.updateApplicationMenu();\n\n      expect(mockMenu.buildFromTemplate).toHaveBeenCalledWith(expect.any(Array));\n      expect(mockMenu.setApplicationMenu).toHaveBeenCalledWith(mockMenuInstance);\n    });\n  });\n\n  describe('createApplicationMenu', () => {\n    it('should create menu template with window list', () => {\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n\n      menu.createApplicationMenu();\n\n      expect(mockMenu.buildFromTemplate).toHaveBeenCalledWith(expect.any(Array));\n\n      // Get the template that was passed to buildFromTemplate\n      const template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n\n      // Find the Window menu\n      const windowMenu = template.find((item) => item.label === 'Window');\n      expect(windowMenu).toBeDefined();\n      expect(windowMenu?.submenu).toEqual(\n        expect.arrayContaining([\n          expect.objectContaining({ label: 'Minimize' }),\n          expect.objectContaining({ label: 'Merge All Windows' }),\n          expect.objectContaining({ label: 'Move Tab to New Window' }),\n          expect.objectContaining({ label: 'Bring All to Front' }),\n          expect.objectContaining({ type: 'separator' }),\n          expect.objectContaining({ label: 'No Windows Open', enabled: false }),\n        ])\n      );\n    });\n\n    it('should include window items in Window menu when windows exist', () => {\n      mockHelpWindow.getTitle.mockReturnValue('Anglesite');\n      mockHelpWindow.isDestroyed.mockReturnValue(false);\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(mockHelpWindow);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(mockHelpWindow);\n\n      menu.createApplicationMenu();\n\n      const template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n      const windowMenu = template.find((item) => item.label === 'Window');\n\n      // Check that the window list includes the help window\n      const windowSubmenu = windowMenu?.submenu as MenuItemConstructorOptions[];\n      const helpWindowItem = windowSubmenu.find((item) => item.label === 'Anglesite' && item.type === 'checkbox');\n\n      expect(helpWindowItem).toBeDefined();\n      expect(helpWindowItem?.checked).toBe(true);\n    });\n  });\n\n  describe('isWebsiteWindowFocused', () => {\n    it('should return false when no window is focused', () => {\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(null);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n\n      // We need to access the internal function indirectly through menu creation\n      // Create a menu template and check if the Export menu item is disabled\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n\n      menu.createApplicationMenu();\n      const template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n      const fileMenu = template.find((item) => item.label === 'File');\n      const exportItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n        (item) => item.label === 'Export To'\n      );\n\n      expect(exportItem?.enabled).toBe(false);\n    });\n\n    it('should return true when focused window is a website window', () => {\n      const websiteWindows = new Map([['site1', mockWebsiteWindow1]]);\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(mockWebsiteWindow1.window);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(websiteWindows);\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n\n      menu.createApplicationMenu();\n      const template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n      const fileMenu = template.find((item) => item.label === 'File');\n      const exportItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n        (item) => item.label === 'Export To'\n      );\n\n      expect(exportItem?.enabled).toBe(true);\n    });\n\n    it('should return false when focused window is not a website window', () => {\n      const websiteWindows = new Map([['site1', mockWebsiteWindow1]]);\n      const otherWindow = { id: 'other-window' };\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(otherWindow);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(websiteWindows);\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n\n      menu.createApplicationMenu();\n      const template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n      const fileMenu = template.find((item) => item.label === 'File');\n      const exportItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n        (item) => item.label === 'Export To'\n      );\n\n      expect(exportItem?.enabled).toBe(false);\n    });\n  });\n\n  describe('Menu Item Click Handlers', () => {\n    let template: MenuItemConstructorOptions[];\n    let mockBrowserWindowInstance: {\n      webContents: {\n        send: jest.Mock;\n        reloadIgnoringCache: jest.Mock;\n        isDevToolsOpened: jest.Mock;\n        closeDevTools: jest.Mock;\n        openDevTools: jest.Mock;\n      };\n    };\n    let mockWebContents: {\n      send: jest.Mock;\n      reloadIgnoringCache: jest.Mock;\n      isDevToolsOpened: jest.Mock;\n      closeDevTools: jest.Mock;\n      openDevTools: jest.Mock;\n    };\n\n    beforeEach(() => {\n      mockBrowserWindowInstance = {\n        webContents: {\n          send: jest.fn(),\n          reloadIgnoringCache: jest.fn(),\n          isDevToolsOpened: jest.fn(() => false),\n          closeDevTools: jest.fn(),\n          openDevTools: jest.fn(),\n        },\n      };\n      mockWebContents = mockBrowserWindowInstance.webContents;\n\n      mockMultiWindowManager.getHelpWindow.mockReturnValue(null);\n      mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map());\n\n      menu.createApplicationMenu();\n      template = mockMenu.buildFromTemplate.mock.calls[0][0] as MenuItemConstructorOptions[];\n    });\n\n    describe('File Menu', () => {\n      it('should handle Settings click', () => {\n        const anglesiteMenu = template.find((item) => item.label === 'Anglesite');\n        const settingsItem = (anglesiteMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Settings...'\n        );\n\n        expect(settingsItem?.click).toBeDefined();\n        if (settingsItem?.click) {\n          (settingsItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n            {},\n            undefined,\n            {}\n          );\n        }\n\n        expect(mockWindowManager.openSettingsWindow).toHaveBeenCalled();\n      });\n\n      it('should handle Open Website click', async () => {\n        const fileMenu = template.find((item) => item.label === 'File');\n        const openWebsiteItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Open Website…'\n        );\n\n        expect(openWebsiteItem?.click).toBeDefined();\n        if (openWebsiteItem?.click) {\n          await (openWebsiteItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => Promise<void>)(\n            {},\n            undefined,\n            {}\n          );\n        }\n\n        expect(mockWindowManager.openWebsiteSelectionWindow).toHaveBeenCalled();\n      });\n\n      it('should have New Website menu item with correct accelerator', () => {\n        const fileMenu = template.find((item) => item.label === 'File');\n        const newWebsiteItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'New Website…'\n        );\n\n        expect(newWebsiteItem?.click).toBeDefined();\n        expect(newWebsiteItem?.accelerator).toBe('CmdOrCtrl+N');\n        expect(typeof newWebsiteItem?.click).toBe('function');\n      });\n\n      it('should handle Export to Folder click', async () => {\n        const fileMenu = template.find((item) => item.label === 'File');\n        const exportToItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Export To'\n        );\n        const folderExportItem = (exportToItem?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Folder'\n        );\n\n        expect(folderExportItem?.click).toBeDefined();\n        if (folderExportItem?.click) {\n          await (\n            folderExportItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => Promise<void>\n          )({}, undefined, {});\n        }\n\n        expect(mockExportSiteHandler).toHaveBeenCalledWith(null, false);\n      });\n\n      it('should handle Export to Zip click', async () => {\n        const fileMenu = template.find((item) => item.label === 'File');\n        const exportToItem = (fileMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Export To'\n        );\n        const zipExportItem = (exportToItem?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Zip Archive'\n        );\n\n        expect(zipExportItem?.click).toBeDefined();\n        if (zipExportItem?.click) {\n          await (zipExportItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => Promise<void>)(\n            {},\n            undefined,\n            {}\n          );\n        }\n\n        expect(mockExportSiteHandler).toHaveBeenCalledWith(null, true);\n      });\n    });\n\n    describe('View Menu', () => {\n      it('should handle Reload click', () => {\n        const viewMenu = template.find((item) => item.label === 'View');\n        const reloadItem = (viewMenu?.submenu as MenuItemConstructorOptions[])?.find((item) => item.label === 'Reload');\n\n        expect(reloadItem?.click).toBeDefined();\n        if (reloadItem?.click) {\n          (reloadItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n            {},\n            mockBrowserWindowInstance,\n            {}\n          );\n        }\n\n        expect(mockWebContents.send).toHaveBeenCalledWith('reload-preview');\n      });\n\n      it('should handle Force Reload click', () => {\n        const viewMenu = template.find((item) => item.label === 'View');\n        const forceReloadItem = (viewMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Force Reload'\n        );\n\n        expect(forceReloadItem?.click).toBeDefined();\n        if (forceReloadItem?.click) {\n          (forceReloadItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n            {},\n            mockBrowserWindowInstance,\n            {}\n          );\n        }\n\n        expect(mockWebContents.reloadIgnoringCache).toHaveBeenCalled();\n      });\n\n      it('should handle Toggle Developer Tools click', () => {\n        const viewMenu = template.find((item) => item.label === 'View');\n        const devToolsItem = (viewMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Toggle Developer Tools'\n        );\n\n        expect(devToolsItem?.click).toBeDefined();\n        if (devToolsItem?.click) {\n          (devToolsItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n            {},\n            mockBrowserWindowInstance,\n            {}\n          );\n        }\n\n        expect(mockWebContents.openDevTools).toHaveBeenCalled();\n      });\n\n      it('should handle View menu clicks with no browser window', () => {\n        const viewMenu = template.find((item) => item.label === 'View');\n        const reloadItem = (viewMenu?.submenu as MenuItemConstructorOptions[])?.find((item) => item.label === 'Reload');\n\n        // Should not throw when no browser window is provided\n        expect(() => {\n          if (reloadItem?.click) {\n            (reloadItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)({}, null, {});\n          }\n        }).not.toThrow();\n      });\n\n      it('should handle View menu clicks with browser window without webContents', () => {\n        const browserWindowWithoutWebContents = { someOtherProp: 'value' };\n        const viewMenu = template.find((item) => item.label === 'View');\n        const reloadItem = (viewMenu?.submenu as MenuItemConstructorOptions[])?.find((item) => item.label === 'Reload');\n\n        // Should not throw when browser window doesn't have webContents\n        expect(() => {\n          if (reloadItem?.click) {\n            (reloadItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n              {},\n              browserWindowWithoutWebContents,\n              {}\n            );\n          }\n        }).not.toThrow();\n      });\n    });\n\n    describe('Website Menu Server Actions', () => {\n      it('should handle Server Restart click', () => {\n        const websiteMenu = template.find((item) => item.label === 'Website');\n        const serverSubmenu = (websiteMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Server'\n        );\n        const restartServerItem = (serverSubmenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Restart'\n        );\n\n        expect(restartServerItem?.click).toBeDefined();\n        if (restartServerItem?.click) {\n          (restartServerItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => void)(\n            {},\n            mockBrowserWindowInstance,\n            {}\n          );\n        }\n\n        expect(mockWebContents.send).toHaveBeenCalledWith('restart-server');\n      });\n    });\n\n    describe('Help Menu', () => {\n      it('should handle Anglesite Help click', async () => {\n        const helpMenu = template.find((item) => item.label === 'Help');\n        const anglesiteHelpItem = (helpMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Anglesite Help'\n        );\n\n        expect(anglesiteHelpItem?.click).toBeDefined();\n        if (anglesiteHelpItem?.click) {\n          await (\n            anglesiteHelpItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => Promise<void>\n          )({}, undefined, {});\n        }\n\n        expect(mockMultiWindowManager.createHelpWindow).toHaveBeenCalled();\n      });\n\n      it('should handle Report Issue click', async () => {\n        mockShell.openExternal.mockResolvedValue(undefined);\n\n        const helpMenu = template.find((item) => item.label === 'Help');\n        const reportIssueItem = (helpMenu?.submenu as MenuItemConstructorOptions[])?.find(\n          (item) => item.label === 'Report Issue'\n        );\n\n        expect(reportIssueItem?.click).toBeDefined();\n        if (reportIssueItem?.click) {\n          await (reportIssueItem.click as (menuItem: unknown, browserWindow: unknown, event: unknown) => Promise<void>)(\n            {},\n            undefined,\n            {}\n          );\n        }\n\n        expect(mockShell.openExternal).toHaveBeenCalledWith('https://github.com/anglesite/anglesite/issues');\n      });\n    });\n  });\n});\n"],"version":3}