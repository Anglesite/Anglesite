{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/menu-simplified.test.ts","mappings":";AAAA;;GAEG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3B,IAAI,EAAE,QAAQ;IACd,aAAa,EAAE,iBAAiB;IAChC,GAAG,EAAE,OAAO;IACZ,KAAK,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE;IAClC,SAAS,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE;CACpC,CAAC,CAAC,CAAC;AAEJ,oBAAoB;AACpB,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE,CAAC,CAAC;IACpD,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;IACxB,oBAAoB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAC9C,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE;CAClC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9C,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC7B,0BAA0B,EAAE,IAAI,CAAC,EAAE,EAAE;IACrC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;CAC1B,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,CAAC,CAAC;IACzC,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC5B,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE;CAClC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE,CAAC,CAAC;IAClD,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC/B,CAAC,CAAC,CAAC;AA5CJ,wBAAwB;AACxB,MAAM,iBAAiB,GAAG;IACxB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC5B,CAAC;AAEF,MAAM,QAAQ,GAAG;IACf,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC5B,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC9B,CAAC;AAEF,MAAM,OAAO,GAAG;IACd,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC;CAC1C,CAAC;AAkCF,wDAA0C;AAE1C,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;IACpB,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,MAAM,gBAAgB,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;YACvC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAE7D,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,EAAE,CAAC,+BAA+B,EAAE,GAAG,EAAE;YACvC,MAAM,gBAAgB,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC;YACvC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;YAE7D,MAAM,MAAM,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE5C,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3E,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,EAAE,CAAC,+CAA+C,EAAE,GAAG,EAAE;YACvD,iBAAiB,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YACzD,MAAM,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAChF,sBAAsB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;YAE9C,gGAAgG;YAChG,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/menu-simplified.test.ts"],"sourcesContent":["/**\n * @file Simplified tests for menu functionality\n */\n\n// Mock electron modules\nconst mockBrowserWindow = {\n  getFocusedWindow: jest.fn(),\n};\n\nconst mockMenu = {\n  buildFromTemplate: jest.fn(),\n  setApplicationMenu: jest.fn(),\n};\n\nconst mockApp = {\n  getPath: jest.fn(() => '/mock/user/data'),\n};\n\njest.mock('electron', () => ({\n  Menu: mockMenu,\n  BrowserWindow: mockBrowserWindow,\n  app: mockApp,\n  shell: { openExternal: jest.fn() },\n  clipboard: { writeText: jest.fn() },\n}));\n\n// Mock dependencies\njest.mock('../../app/ui/multi-window-manager', () => ({\n  getHelpWindow: jest.fn(),\n  getAllWebsiteWindows: jest.fn(() => new Map()),\n  createHelpWindow: jest.fn(),\n  isWebsiteEditorFocused: jest.fn(),\n}));\n\njest.mock('../../app/ui/window-manager', () => ({\n  openSettingsWindow: jest.fn(),\n  openWebsiteSelectionWindow: jest.fn(),\n  getNativeInput: jest.fn(),\n}));\n\njest.mock('../../app/ipc/handlers', () => ({\n  exportSiteHandler: jest.fn(),\n  openWebsiteInNewWindow: jest.fn(),\n}));\n\njest.mock('../../app/utils/website-manager', () => ({\n  createWebsiteWithName: jest.fn(),\n  validateWebsiteName: jest.fn(),\n}));\n\nimport * as menu from '../../app/ui/menu';\n\ndescribe('Menu', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('updateApplicationMenu', () => {\n    it('should build and set application menu', () => {\n      const mockMenuInstance = { items: [] };\n      mockMenu.buildFromTemplate.mockReturnValue(mockMenuInstance);\n\n      menu.updateApplicationMenu();\n\n      expect(mockMenu.buildFromTemplate).toHaveBeenCalledWith(expect.any(Array));\n      expect(mockMenu.setApplicationMenu).toHaveBeenCalledWith(mockMenuInstance);\n    });\n  });\n\n  describe('createApplicationMenu', () => {\n    it('should create a menu template', () => {\n      const mockMenuInstance = { items: [] };\n      mockMenu.buildFromTemplate.mockReturnValue(mockMenuInstance);\n\n      const result = menu.createApplicationMenu();\n\n      expect(mockMenu.buildFromTemplate).toHaveBeenCalledWith(expect.any(Array));\n      expect(result).toBe(mockMenuInstance);\n    });\n  });\n\n  describe('isWebsiteWindowFocused', () => {\n    it('should return false when no window is focused', () => {\n      mockBrowserWindow.getFocusedWindow.mockReturnValue(null);\n      const { isWebsiteEditorFocused } = require('../../app/ui/multi-window-manager');\n      isWebsiteEditorFocused.mockReturnValue(false);\n\n      // Since isWebsiteWindowFocused is not exported, we test it indirectly via createApplicationMenu\n      menu.createApplicationMenu();\n      expect(mockBrowserWindow.getFocusedWindow).toHaveBeenCalled();\n    });\n  });\n});\n"],"version":3}