999e191c73385b17839b7b2d783ee9cd
"use strict";

/**
 * @file Dependency Injection Container
 *
 * Provides a lightweight, type-safe dependency injection system for Anglesite.
 * Supports singleton and transient lifetimes, circular dependency detection.
 * and easy testing through service substitution.
 *
 * Features:
 * - Type-safe service registration and resolution
 * - Singleton and transient service lifetimes
 * - Circular dependency detection
 * - Service substitution for testing
 * - Lazy initialization
 * - Hierarchical containers for scope isolation
 */
/* istanbul ignore next */
function cov_1nw8za6v5w() {
  var path = "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/core/container.ts";
  var hash = "4041b80622139ac3c8b91157e0e6ee0b81542cc7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/core/container.ts",
    statementMap: {
      "0": {
        start: {
          line: 17,
          column: 0
        },
        end: {
          line: 17,
          column: 62
        }
      },
      "1": {
        start: {
          line: 18,
          column: 0
        },
        end: {
          line: 18,
          column: 96
        }
      },
      "2": {
        start: {
          line: 19,
          column: 0
        },
        end: {
          line: 19,
          column: 24
        }
      },
      "3": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "4": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 35
        }
      },
      "5": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 37
        }
      },
      "6": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 43
        }
      },
      "7": {
        start: {
          line: 38,
          column: 24
        },
        end: {
          line: 38,
          column: 52
        }
      },
      "8": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 44,
          column: 11
        }
      },
      "9": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 20
        }
      },
      "10": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "11": {
        start: {
          line: 56,
          column: 33
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "12": {
        start: {
          line: 56,
          column: 66
        },
        end: {
          line: 56,
          column: 87
        }
      },
      "13": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 52
        }
      },
      "14": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 71
        }
      },
      "15": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 72,
          column: 11
        }
      },
      "16": {
        start: {
          line: 68,
          column: 27
        },
        end: {
          line: 68,
          column: 35
        }
      },
      "17": {
        start: {
          line: 73,
          column: 8
        },
        end: {
          line: 73,
          column: 20
        }
      },
      "18": {
        start: {
          line: 82,
          column: 8
        },
        end: {
          line: 85,
          column: 9
        }
      },
      "19": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 83,
          column: 81
        }
      },
      "20": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 84,
          column: 70
        }
      },
      "21": {
        start: {
          line: 87,
          column: 34
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "22": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "23": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 92,
          column: 13
        }
      },
      "24": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "25": {
        start: {
          line: 93,
          column: 12
        },
        end: {
          line: 93,
          column: 95
        }
      },
      "26": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 98,
          column: 9
        }
      },
      "27": {
        start: {
          line: 97,
          column: 12
        },
        end: {
          line: 97,
          column: 46
        }
      },
      "28": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "29": {
        start: {
          line: 101,
          column: 12
        },
        end: {
          line: 101,
          column: 104
        }
      },
      "30": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 104,
          column: 33
        }
      },
      "31": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "32": {
        start: {
          line: 107,
          column: 29
        },
        end: {
          line: 107,
          column: 56
        }
      },
      "33": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 111,
          column: 13
        }
      },
      "34": {
        start: {
          line: 110,
          column: 16
        },
        end: {
          line: 110,
          column: 54
        }
      },
      "35": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 28
        }
      },
      "36": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 40
        }
      },
      "37": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 9
        }
      },
      "38": {
        start: {
          line: 127,
          column: 26
        },
        end: {
          line: 127,
          column: 81
        }
      },
      "39": {
        start: {
          line: 128,
          column: 12
        },
        end: {
          line: 128,
          column: 70
        }
      },
      "40": {
        start: {
          line: 131,
          column: 34
        },
        end: {
          line: 131,
          column: 57
        }
      },
      "41": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "42": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 136,
          column: 13
        }
      },
      "43": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 54
        }
      },
      "44": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 95
        }
      },
      "45": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 142,
          column: 9
        }
      },
      "46": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 141,
          column: 46
        }
      },
      "47": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 33
        }
      },
      "48": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "49": {
        start: {
          line: 147,
          column: 34
        },
        end: {
          line: 147,
          column: 61
        }
      },
      "50": {
        start: {
          line: 148,
          column: 30
        },
        end: {
          line: 148,
          column: 66
        }
      },
      "51": {
        start: {
          line: 150,
          column: 12
        },
        end: {
          line: 152,
          column: 13
        }
      },
      "52": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 151,
          column: 54
        }
      },
      "53": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 28
        }
      },
      "54": {
        start: {
          line: 157,
          column: 12
        },
        end: {
          line: 157,
          column: 40
        }
      },
      "55": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 85
        }
      },
      "56": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 55
        }
      },
      "57": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 181,
          column: 48
        }
      },
      "58": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 39
        }
      },
      "59": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "60": {
        start: {
          line: 197,
          column: 31
        },
        end: {
          line: 197,
          column: 61
        }
      },
      "61": {
        start: {
          line: 198,
          column: 12
        },
        end: {
          line: 204,
          column: 13
        }
      },
      "62": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 203,
          column: 17
        }
      },
      "63": {
        start: {
          line: 200,
          column: 20
        },
        end: {
          line: 202,
          column: 21
        }
      },
      "64": {
        start: {
          line: 201,
          column: 24
        },
        end: {
          line: 201,
          column: 119
        }
      },
      "65": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 211,
          column: 30
        }
      },
      "66": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 31
        }
      },
      "67": {
        start: {
          line: 220,
          column: 8
        },
        end: {
          line: 222,
          column: 9
        }
      },
      "68": {
        start: {
          line: 221,
          column: 12
        },
        end: {
          line: 221,
          column: 87
        }
      },
      "69": {
        start: {
          line: 223,
          column: 25
        },
        end: {
          line: 223,
          column: 48
        }
      },
      "70": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 228,
          column: 11
        }
      },
      "71": {
        start: {
          line: 234,
          column: 32
        },
        end: {
          line: 234,
          column: 34
        }
      },
      "72": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "73": {
        start: {
          line: 236,
          column: 31
        },
        end: {
          line: 236,
          column: 61
        }
      },
      "74": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 253,
          column: 13
        }
      },
      "75": {
        start: {
          line: 238,
          column: 33
        },
        end: {
          line: 238,
          column: 52
        }
      },
      "76": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 252,
          column: 17
        }
      },
      "77": {
        start: {
          line: 240,
          column: 20
        },
        end: {
          line: 251,
          column: 21
        }
      },
      "78": {
        start: {
          line: 241,
          column: 39
        },
        end: {
          line: 241,
          column: 57
        }
      },
      "79": {
        start: {
          line: 242,
          column: 24
        },
        end: {
          line: 246,
          column: 25
        }
      },
      "80": {
        start: {
          line: 243,
          column: 28
        },
        end: {
          line: 245,
          column: 32
        }
      },
      "81": {
        start: {
          line: 244,
          column: 32
        },
        end: {
          line: 244,
          column: 78
        }
      },
      "82": {
        start: {
          line: 250,
          column: 24
        },
        end: {
          line: 250,
          column: 70
        }
      },
      "83": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 255,
          column: 43
        }
      },
      "84": {
        start: {
          line: 256,
          column: 8
        },
        end: {
          line: 256,
          column: 21
        }
      },
      "85": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 271,
          column: 9
        }
      },
      "86": {
        start: {
          line: 266,
          column: 27
        },
        end: {
          line: 266,
          column: 45
        }
      },
      "87": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 267,
          column: 104
        }
      },
      "88": {
        start: {
          line: 270,
          column: 12
        },
        end: {
          line: 270,
          column: 25
        }
      },
      "89": {
        start: {
          line: 274,
          column: 0
        },
        end: {
          line: 274,
          column: 34
        }
      },
      "90": {
        start: {
          line: 278,
          column: 0
        },
        end: {
          line: 278,
          column: 56
        }
      },
      "91": {
        start: {
          line: 285,
          column: 8
        },
        end: {
          line: 285,
          column: 47
        }
      },
      "92": {
        start: {
          line: 288,
          column: 8
        },
        end: {
          line: 288,
          column: 52
        }
      },
      "93": {
        start: {
          line: 291,
          column: 8
        },
        end: {
          line: 291,
          column: 52
        }
      },
      "94": {
        start: {
          line: 294,
          column: 0
        },
        end: {
          line: 294,
          column: 40
        }
      },
      "95": {
        start: {
          line: 301,
          column: 4
        },
        end: {
          line: 308,
          column: 6
        }
      },
      "96": {
        start: {
          line: 302,
          column: 8
        },
        end: {
          line: 307,
          column: 11
        }
      },
      "97": {
        start: {
          line: 304,
          column: 16
        },
        end: {
          line: 304,
          column: 62
        }
      },
      "98": {
        start: {
          line: 313,
          column: 0
        },
        end: {
          line: 330,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 24
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 71
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 37
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 83
          },
          end: {
            line: 60,
            column: 5
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 55,
            column: 24
          },
          end: {
            line: 55,
            column: 25
          }
        },
        loc: {
          start: {
            line: 55,
            column: 30
          },
          end: {
            line: 58,
            column: 9
          }
        },
        line: 55
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 53
          },
          end: {
            line: 56,
            column: 54
          }
        },
        loc: {
          start: {
            line: 56,
            column: 66
          },
          end: {
            line: 56,
            column: 87
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 5
          }
        },
        loc: {
          start: {
            line: 66,
            column: 37
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 66
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 21
          },
          end: {
            line: 68,
            column: 22
          }
        },
        loc: {
          start: {
            line: 68,
            column: 27
          },
          end: {
            line: 68,
            column: 35
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 5
          }
        },
        loc: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        loc: {
          start: {
            line: 124,
            column: 29
          },
          end: {
            line: 159,
            column: 5
          }
        },
        line: 124
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 165,
            column: 5
          }
        },
        loc: {
          start: {
            line: 165,
            column: 23
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 165
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 5
          }
        },
        loc: {
          start: {
            line: 173,
            column: 22
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 173
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 180,
            column: 5
          }
        },
        loc: {
          start: {
            line: 180,
            column: 22
          },
          end: {
            line: 182,
            column: 5
          }
        },
        line: 180
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 188,
            column: 4
          },
          end: {
            line: 188,
            column: 5
          }
        },
        loc: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 190,
            column: 5
          }
        },
        line: 188
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        loc: {
          start: {
            line: 195,
            column: 27
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 195
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 5
          }
        },
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 210
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        loc: {
          start: {
            line: 219,
            column: 27
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 219
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 233,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        loc: {
          start: {
            line: 233,
            column: 20
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 233
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 243,
            column: 62
          },
          end: {
            line: 243,
            column: 63
          }
        },
        loc: {
          start: {
            line: 243,
            column: 73
          },
          end: {
            line: 245,
            column: 29
          }
        },
        line: 243
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 263,
            column: 5
          }
        },
        loc: {
          start: {
            line: 263,
            column: 28
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 263
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 284,
            column: 4
          },
          end: {
            line: 284,
            column: 5
          }
        },
        loc: {
          start: {
            line: 284,
            column: 25
          },
          end: {
            line: 286,
            column: 5
          }
        },
        line: 284
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 287,
            column: 5
          }
        },
        loc: {
          start: {
            line: 287,
            column: 36
          },
          end: {
            line: 289,
            column: 5
          }
        },
        line: 287
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 290,
            column: 4
          },
          end: {
            line: 290,
            column: 5
          }
        },
        loc: {
          start: {
            line: 290,
            column: 30
          },
          end: {
            line: 292,
            column: 5
          }
        },
        line: 290
      },
      "22": {
        name: "Inject",
        decl: {
          start: {
            line: 299,
            column: 9
          },
          end: {
            line: 299,
            column: 15
          }
        },
        loc: {
          start: {
            line: 299,
            column: 29
          },
          end: {
            line: 309,
            column: 1
          }
        },
        line: 299
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 301,
            column: 11
          },
          end: {
            line: 301,
            column: 12
          }
        },
        loc: {
          start: {
            line: 301,
            column: 42
          },
          end: {
            line: 308,
            column: 5
          }
        },
        line: 301
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 13
          }
        },
        loc: {
          start: {
            line: 303,
            column: 18
          },
          end: {
            line: 305,
            column: 13
          }
        },
        line: 303
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 16
          },
          end: {
            line: 24,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 24,
            column: 26
          },
          end: {
            line: 24,
            column: 28
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 20
          },
          end: {
            line: 28,
            column: 32
          }
        }, {
          start: {
            line: 28,
            column: 36
          },
          end: {
            line: 28,
            column: 42
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 37,
            column: 28
          },
          end: {
            line: 37,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 37,
            column: 50
          }
        }],
        line: 37
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 52
          },
          end: {
            line: 37,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 37,
            column: 67
          },
          end: {
            line: 37,
            column: 69
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 59
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 59
          }
        }],
        line: 54
      },
      "5": {
        loc: {
          start: {
            line: 54,
            column: 61
          },
          end: {
            line: 54,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 54,
            column: 79
          },
          end: {
            line: 54,
            column: 81
          }
        }],
        line: 54
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 85,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 94,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "8": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 92,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "9": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 96,
            column: 54
          }
        }, {
          start: {
            line: 96,
            column: 58
          },
          end: {
            line: 96,
            column: 84
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 102,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "12": {
        loc: {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "13": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 129,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "14": {
        loc: {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 132
      },
      "15": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 136,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 142,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 140,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 12
          },
          end: {
            line: 140,
            column: 54
          }
        }, {
          start: {
            line: 140,
            column: 58
          },
          end: {
            line: 140,
            column: 84
          }
        }],
        line: 140
      },
      "18": {
        loc: {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 152,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "19": {
        loc: {
          start: {
            line: 166,
            column: 15
          },
          end: {
            line: 166,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 15
          },
          end: {
            line: 166,
            column: 38
          }
        }, {
          start: {
            line: 166,
            column: 43
          },
          end: {
            line: 166,
            column: 74
          }
        }, {
          start: {
            line: 166,
            column: 78
          },
          end: {
            line: 166,
            column: 83
          }
        }],
        line: 166
      },
      "20": {
        loc: {
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 204,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 198,
            column: 12
          },
          end: {
            line: 204,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 198
      },
      "21": {
        loc: {
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 202,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 20
          },
          end: {
            line: 202,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "22": {
        loc: {
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 8
          },
          end: {
            line: 222,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "23": {
        loc: {
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 12
          },
          end: {
            line: 253,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "24": {
        loc: {
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 16
          },
          end: {
            line: 237,
            column: 35
          }
        }, {
          start: {
            line: 237,
            column: 39
          },
          end: {
            line: 237,
            column: 78
          }
        }],
        line: 237
      },
      "25": {
        loc: {
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 252,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 239,
            column: 16
          },
          end: {
            line: 252,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 239
      },
      "26": {
        loc: {
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 246,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 24
          },
          end: {
            line: 246,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "27": {
        loc: {
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 267,
            column: 19
          },
          end: {
            line: 267,
            column: 44
          }
        }, {
          start: {
            line: 267,
            column: 48
          },
          end: {
            line: 267,
            column: 74
          }
        }, {
          start: {
            line: 267,
            column: 78
          },
          end: {
            line: 267,
            column: 103
          }
        }],
        line: 267
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/core/container.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/core/container.ts"],
      sourcesContent: ["/**\n * @file Dependency Injection Container\n *\n * Provides a lightweight, type-safe dependency injection system for Anglesite.\n * Supports singleton and transient lifetimes, circular dependency detection.\n * and easy testing through service substitution.\n *\n * Features:\n * - Type-safe service registration and resolution\n * - Singleton and transient service lifetimes\n * - Circular dependency detection\n * - Service substitution for testing\n * - Lazy initialization\n * - Hierarchical containers for scope isolation\n */\n\nexport type ServiceFactory<T = any> = () => T | Promise<T>; // eslint-disable-line @typescript-eslint/no-explicit-any\nexport type ServiceConstructor<T = any> = new (...args: any[]) => T; // eslint-disable-line @typescript-eslint/no-explicit-any\n\n// prettier-ignore\nexport interface ServiceDefinition<T = any> { // eslint-disable-line @typescript-eslint/no-explicit-any\n  factory: ServiceFactory<T>;\n  lifetime: 'singleton' | 'transient';\n  dependencies?: string[];\n  instance?: T;\n  isAsync?: boolean;\n}\n\nexport interface ContainerOptions {\n  parent?: DIContainer;\n  name?: string;\n}\n\n/**\n * Lightweight dependency injection container with type safety and lifecycle management.\n */\nexport class DIContainer {\n  private services = new Map<string, ServiceDefinition>();\n  private resolving = new Set<string>(); // Circular dependency detection\n  private parent?: DIContainer;\n  private name: string;\n\n  constructor(options: ContainerOptions = {}) {\n    this.parent = options.parent;\n    this.name = options.name || 'root';\n  }\n\n  /**\n   * Register a service with factory function.\n   * @param name Service identifier\n   * @param factory Function that creates the service instance\n   * @param lifetime Service lifetime (singleton or transient)\n   * @param dependencies Optional dependency names for validation\n   */\n  register<T>(\n    name: string,\n    factory: ServiceFactory<T>,\n    lifetime: 'singleton' | 'transient' = 'singleton',\n    dependencies: string[] = []\n  ): DIContainer {\n    const isAsync = this.isAsyncFactory(factory);\n\n    this.services.set(name, {\n      factory,\n      lifetime,\n      dependencies,\n      isAsync,\n    });\n\n    return this; // Fluent interface\n  }\n\n  /**\n   * Register a service using class constructor.\n   * @param name Service identifier\n   * @param constructor Class constructor to instantiate\n   * @param lifetime Service lifetime\n   * @param dependencyNames Names of services to inject into constructor\n   */\n  registerClass<T>(\n    name: string,\n    constructor: ServiceConstructor<T>,\n    lifetime: 'singleton' | 'transient' = 'singleton',\n    dependencyNames: string[] = []\n  ): DIContainer {\n    const factory: ServiceFactory<T> = () => {\n      const dependencies = dependencyNames.map((depName) => this.resolve(depName));\n      return new constructor(...dependencies);\n    };\n\n    return this.register(name, factory, lifetime, dependencyNames);\n  }\n\n  /**\n   * Register a service instance directly (always singleton).\n   * @param name Service identifier\n   * @param instance Service instance\n   */\n  registerInstance<T>(name: string, instance: T): DIContainer {\n    this.services.set(name, {\n      factory: () => instance,\n      lifetime: 'singleton',\n      dependencies: [],\n      instance,\n    });\n\n    return this;\n  }\n\n  /**\n   * Resolve a service by name with type safety.\n   * @param name Service identifier\n   * @returns Service instance\n   */\n  resolve<T>(name: string): T {\n    // Check for circular dependencies\n    if (this.resolving.has(name)) {\n      const cycle = Array.from(this.resolving).join(' -> ') + ' -> ' + name;\n      throw new Error(`Circular dependency detected: ${cycle}`);\n    }\n\n    // Try to resolve from current container\n    const serviceDefinition = this.services.get(name);\n\n    if (!serviceDefinition) {\n      // Try parent container\n      if (this.parent) {\n        return this.parent.resolve<T>(name);\n      }\n\n      throw new Error(`Service '${name}' is not registered in container '${this.name}'`);\n    }\n\n    // Return existing singleton instance if available\n    if (serviceDefinition.lifetime === 'singleton' && serviceDefinition.instance) {\n      return serviceDefinition.instance as T;\n    }\n\n    // Check for async factory in synchronous resolution\n    if (serviceDefinition.isAsync) {\n      throw new Error(`Service '${name}' requires async resolution. Use resolveAsync() instead.`);\n    }\n\n    // Mark as resolving for circular dependency detection\n    this.resolving.add(name);\n\n    try {\n      // Create new instance\n      const instance = serviceDefinition.factory() as T;\n\n      // Store singleton instance\n      if (serviceDefinition.lifetime === 'singleton') {\n        serviceDefinition.instance = instance;\n      }\n\n      return instance;\n    } finally {\n      // Clear resolving flag\n      this.resolving.delete(name);\n    }\n  }\n\n  /**\n   * Resolve a service asynchronously.\n   * @param name Service identifier\n   * @returns Promise resolving to service instance\n   */\n  async resolveAsync<T>(name: string): Promise<T> {\n    // Check for circular dependencies\n    if (this.resolving.has(name)) {\n      const cycle = Array.from(this.resolving).join(' -> ') + ' -> ' + name;\n      throw new Error(`Circular dependency detected: ${cycle}`);\n    }\n\n    // Try to resolve from current container\n    const serviceDefinition = this.services.get(name);\n\n    if (!serviceDefinition) {\n      // Try parent container\n      if (this.parent) {\n        return this.parent.resolveAsync<T>(name);\n      }\n\n      throw new Error(`Service '${name}' is not registered in container '${this.name}'`);\n    }\n\n    // Return existing singleton instance if available\n    if (serviceDefinition.lifetime === 'singleton' && serviceDefinition.instance) {\n      return serviceDefinition.instance as T;\n    }\n\n    // Mark as resolving for circular dependency detection\n    this.resolving.add(name);\n\n    try {\n      // Create new instance (handle both sync and async factories)\n      const factoryResult = serviceDefinition.factory();\n      const instance = (await Promise.resolve(factoryResult)) as T;\n\n      // Store singleton instance\n      if (serviceDefinition.lifetime === 'singleton') {\n        serviceDefinition.instance = instance;\n      }\n\n      return instance;\n    } finally {\n      // Clear resolving flag\n      this.resolving.delete(name);\n    }\n  }\n\n  /**\n   * Check if a service is registered.\n   * @param name Service identifier\n   * @returns True if service is registered\n   */\n  isRegistered(name: string): boolean {\n    return this.services.has(name) || (this.parent?.isRegistered(name) ?? false);\n  }\n\n  /**\n   * Create a child container for scope isolation.\n   * @param name Optional name for the child container\n   * @returns New child container\n   */\n  createScope(name?: string): DIContainer {\n    return new DIContainer({ parent: this, name });\n  }\n\n  /**\n   * Get all registered service names in current container.\n   * @returns Array of service names\n   */\n  getServiceNames(): string[] {\n    return Array.from(this.services.keys());\n  }\n\n  /**\n   * Get service definition for debugging.\n   * @param name Service identifier\n   * @returns Service definition or undefined\n   */\n  getServiceDefinition(name: string): ServiceDefinition | undefined {\n    return this.services.get(name);\n  }\n\n  /**\n   * Performs dependency validation to ensure all service dependencies are properly registered and resolvable.\n   * @throws Error if any dependencies are missing\n   */\n  validateDependencies(): void {\n    for (const serviceName of this.services.keys()) {\n      const definition = this.services.get(serviceName)!;\n      if (definition.dependencies) {\n        for (const dependency of definition.dependencies) {\n          if (!this.isRegistered(dependency)) {\n            throw new Error(`Service '${serviceName}' depends on '${dependency}' which is not registered`);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Clear all services and instances (useful for testing).\n   */\n  clear(): void {\n    this.services.clear();\n    this.resolving.clear();\n  }\n\n  /**\n   * Replace a service registration (useful for testing).\n   * @param name Service identifier\n   * @param factory New factory function\n   */\n  replace<T>(name: string, factory: ServiceFactory<T>): void {\n    if (!this.services.has(name)) {\n      throw new Error(`Cannot replace service '${name}' - it is not registered`);\n    }\n\n    const existing = this.services.get(name)!;\n    this.services.set(name, {\n      ...existing,\n      factory,\n      instance: undefined, // Clear existing instance\n    });\n  }\n\n  /**\n   * Gracefully shuts down all singleton service instances by calling their dispose methods when available.\n   */\n  async dispose(): Promise<void> {\n    const disposePromises: Promise<void>[] = [];\n\n    for (const serviceName of this.services.keys()) {\n      const definition = this.services.get(serviceName)!;\n      if (definition.instance && typeof definition.instance === 'object') {\n        const instance = definition.instance as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n        if (typeof instance.dispose === 'function') {\n          try {\n            const result = instance.dispose();\n            if (result instanceof Promise) {\n              disposePromises.push(\n                result.catch((error) => {\n                  console.warn('Service dispose error:', error);\n                })\n              );\n            }\n          } catch (error) {\n            // Handle sync dispose errors\n            console.warn('Service dispose error:', error);\n          }\n        }\n      }\n    }\n\n    await Promise.all(disposePromises);\n    this.clear();\n  }\n\n  /**\n   * Check if factory function is async.\n   * @param factory Factory function to check\n   * @returns True if factory returns a Promise\n   */\n  private isAsyncFactory(factory: ServiceFactory): boolean {\n    try {\n      // Create a test call to check return type\n      const result = factory.toString();\n      return result.includes('async ') || result.includes('Promise') || result.includes('await ');\n    } catch {\n      return false; // Conservative fallback\n    }\n  }\n}\n\n/**\n * Global container instance for application-wide services.\n */\nexport const container = new DIContainer({ name: 'global' });\n\n/**\n * Service locator pattern for quick access to common services.\n * Use sparingly - prefer constructor injection when possible.\n */\nexport class ServiceLocator {\n  static resolve<T>(name: string): T {\n    return container.resolve<T>(name);\n  }\n\n  static async resolveAsync<T>(name: string): Promise<T> {\n    return container.resolveAsync<T>(name);\n  }\n\n  static isRegistered(name: string): boolean {\n    return container.isRegistered(name);\n  }\n}\n\n/**\n * Decorator for automatic service injection (experimental).\n * @param serviceName Name of service to inject\n */\nexport function Inject(serviceName: string) {\n  // prettier-ignore\n  return function (target: any, propertyKey: string | symbol) { // eslint-disable-line @typescript-eslint/no-explicit-any\n    Object.defineProperty(target, propertyKey, {\n      get() {\n        return container.resolve(serviceName);\n      },\n      configurable: true,\n    });\n  };\n}\n\n/**\n * Type-safe service keys for better IDE support.\n */\nexport const ServiceKeys = {\n  // Core services\n  STORE: 'store',\n  LOGGER: 'logger',\n  CONFIG: 'config',\n\n  // Website management\n  WEBSITE_MANAGER: 'websiteManager',\n  WEBSITE_SERVER_MANAGER: 'websiteServerManager',\n\n  // UI services\n  MENU_MANAGER: 'menuManager',\n  WINDOW_MANAGER: 'windowManager',\n\n  // System services\n  DNS_MANAGER: 'dnsManager',\n  CERTIFICATE_MANAGER: 'certificateManager',\n\n  // Utilities\n  ATOMIC_OPERATIONS: 'atomicOperations',\n  FILE_SYSTEM: 'fileSystem',\n} as const;\n\nexport type ServiceKey = (typeof ServiceKeys)[keyof typeof ServiceKeys];\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4041b80622139ac3c8b91157e0e6ee0b81542cc7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1nw8za6v5w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1nw8za6v5w();
cov_1nw8za6v5w().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1nw8za6v5w().s[1]++;
exports.ServiceKeys = exports.ServiceLocator = exports.container = exports.DIContainer = void 0;
/* istanbul ignore next */
cov_1nw8za6v5w().s[2]++;
exports.Inject = Inject;
/**
 * Lightweight dependency injection container with type safety and lifecycle management.
 */
class DIContainer {
  constructor(options =
  /* istanbul ignore next */
  (cov_1nw8za6v5w().b[0][0]++, {})) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[0]++;
    cov_1nw8za6v5w().s[3]++;
    this.services = new Map();
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[4]++;
    this.resolving = new Set(); // Circular dependency detection
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[5]++;
    this.parent = options.parent;
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[6]++;
    this.name =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[1][0]++, options.name) ||
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[1][1]++, 'root');
  }
  /**
   * Register a service with factory function.
   * @param name Service identifier
   * @param factory Function that creates the service instance
   * @param lifetime Service lifetime (singleton or transient)
   * @param dependencies Optional dependency names for validation
   */
  register(name, factory, lifetime =
  /* istanbul ignore next */
  (cov_1nw8za6v5w().b[2][0]++, 'singleton'), dependencies =
  /* istanbul ignore next */
  (cov_1nw8za6v5w().b[3][0]++, [])) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[1]++;
    const isAsync =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().s[7]++, this.isAsyncFactory(factory));
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[8]++;
    this.services.set(name, {
      factory,
      lifetime,
      dependencies,
      isAsync
    });
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[9]++;
    return this; // Fluent interface
  }
  /**
   * Register a service using class constructor.
   * @param name Service identifier
   * @param constructor Class constructor to instantiate
   * @param lifetime Service lifetime
   * @param dependencyNames Names of services to inject into constructor
   */
  registerClass(name, constructor, lifetime =
  /* istanbul ignore next */
  (cov_1nw8za6v5w().b[4][0]++, 'singleton'), dependencyNames =
  /* istanbul ignore next */
  (cov_1nw8za6v5w().b[5][0]++, [])) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[2]++;
    cov_1nw8za6v5w().s[10]++;
    const factory = () => {
      /* istanbul ignore next */
      cov_1nw8za6v5w().f[3]++;
      const dependencies =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[11]++, dependencyNames.map(depName => {
        /* istanbul ignore next */
        cov_1nw8za6v5w().f[4]++;
        cov_1nw8za6v5w().s[12]++;
        return this.resolve(depName);
      }));
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[13]++;
      return new constructor(...dependencies);
    };
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[14]++;
    return this.register(name, factory, lifetime, dependencyNames);
  }
  /**
   * Register a service instance directly (always singleton).
   * @param name Service identifier
   * @param instance Service instance
   */
  registerInstance(name, instance) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[5]++;
    cov_1nw8za6v5w().s[15]++;
    this.services.set(name, {
      factory: () => {
        /* istanbul ignore next */
        cov_1nw8za6v5w().f[6]++;
        cov_1nw8za6v5w().s[16]++;
        return instance;
      },
      lifetime: 'singleton',
      dependencies: [],
      instance
    });
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[17]++;
    return this;
  }
  /**
   * Resolve a service by name with type safety.
   * @param name Service identifier
   * @returns Service instance
   */
  resolve(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[7]++;
    cov_1nw8za6v5w().s[18]++;
    // Check for circular dependencies
    if (this.resolving.has(name)) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[6][0]++;
      const cycle =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[19]++, Array.from(this.resolving).join(' -> ') + ' -> ' + name);
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[20]++;
      throw new Error(`Circular dependency detected: ${cycle}`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[6][1]++;
    }
    // Try to resolve from current container
    const serviceDefinition =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().s[21]++, this.services.get(name));
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[22]++;
    if (!serviceDefinition) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[7][0]++;
      cov_1nw8za6v5w().s[23]++;
      // Try parent container
      if (this.parent) {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[8][0]++;
        cov_1nw8za6v5w().s[24]++;
        return this.parent.resolve(name);
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[8][1]++;
      }
      cov_1nw8za6v5w().s[25]++;
      throw new Error(`Service '${name}' is not registered in container '${this.name}'`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[7][1]++;
    }
    // Return existing singleton instance if available
    cov_1nw8za6v5w().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[10][0]++, serviceDefinition.lifetime === 'singleton') &&
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[10][1]++, serviceDefinition.instance)) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[9][0]++;
      cov_1nw8za6v5w().s[27]++;
      return serviceDefinition.instance;
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[9][1]++;
    }
    // Check for async factory in synchronous resolution
    cov_1nw8za6v5w().s[28]++;
    if (serviceDefinition.isAsync) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[11][0]++;
      cov_1nw8za6v5w().s[29]++;
      throw new Error(`Service '${name}' requires async resolution. Use resolveAsync() instead.`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[11][1]++;
    }
    // Mark as resolving for circular dependency detection
    cov_1nw8za6v5w().s[30]++;
    this.resolving.add(name);
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[31]++;
    try {
      // Create new instance
      const instance =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[32]++, serviceDefinition.factory());
      // Store singleton instance
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[33]++;
      if (serviceDefinition.lifetime === 'singleton') {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[12][0]++;
        cov_1nw8za6v5w().s[34]++;
        serviceDefinition.instance = instance;
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[12][1]++;
      }
      cov_1nw8za6v5w().s[35]++;
      return instance;
    } finally {
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[36]++;
      // Clear resolving flag
      this.resolving.delete(name);
    }
  }
  /**
   * Resolve a service asynchronously.
   * @param name Service identifier
   * @returns Promise resolving to service instance
   */
  async resolveAsync(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[8]++;
    cov_1nw8za6v5w().s[37]++;
    // Check for circular dependencies
    if (this.resolving.has(name)) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[13][0]++;
      const cycle =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[38]++, Array.from(this.resolving).join(' -> ') + ' -> ' + name);
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[39]++;
      throw new Error(`Circular dependency detected: ${cycle}`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[13][1]++;
    }
    // Try to resolve from current container
    const serviceDefinition =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().s[40]++, this.services.get(name));
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[41]++;
    if (!serviceDefinition) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[14][0]++;
      cov_1nw8za6v5w().s[42]++;
      // Try parent container
      if (this.parent) {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[15][0]++;
        cov_1nw8za6v5w().s[43]++;
        return this.parent.resolveAsync(name);
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[15][1]++;
      }
      cov_1nw8za6v5w().s[44]++;
      throw new Error(`Service '${name}' is not registered in container '${this.name}'`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[14][1]++;
    }
    // Return existing singleton instance if available
    cov_1nw8za6v5w().s[45]++;
    if (
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[17][0]++, serviceDefinition.lifetime === 'singleton') &&
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[17][1]++, serviceDefinition.instance)) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[16][0]++;
      cov_1nw8za6v5w().s[46]++;
      return serviceDefinition.instance;
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[16][1]++;
    }
    // Mark as resolving for circular dependency detection
    cov_1nw8za6v5w().s[47]++;
    this.resolving.add(name);
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[48]++;
    try {
      // Create new instance (handle both sync and async factories)
      const factoryResult =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[49]++, serviceDefinition.factory());
      const instance =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[50]++, await Promise.resolve(factoryResult));
      // Store singleton instance
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[51]++;
      if (serviceDefinition.lifetime === 'singleton') {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[18][0]++;
        cov_1nw8za6v5w().s[52]++;
        serviceDefinition.instance = instance;
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[18][1]++;
      }
      cov_1nw8za6v5w().s[53]++;
      return instance;
    } finally {
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[54]++;
      // Clear resolving flag
      this.resolving.delete(name);
    }
  }
  /**
   * Check if a service is registered.
   * @param name Service identifier
   * @returns True if service is registered
   */
  isRegistered(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[9]++;
    cov_1nw8za6v5w().s[55]++;
    return /* istanbul ignore next */(cov_1nw8za6v5w().b[19][0]++, this.services.has(name)) || (
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[19][1]++, this.parent?.isRegistered(name)) ??
    /* istanbul ignore next */
    (cov_1nw8za6v5w().b[19][2]++, false));
  }
  /**
   * Create a child container for scope isolation.
   * @param name Optional name for the child container
   * @returns New child container
   */
  createScope(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[10]++;
    cov_1nw8za6v5w().s[56]++;
    return new DIContainer({
      parent: this,
      name
    });
  }
  /**
   * Get all registered service names in current container.
   * @returns Array of service names
   */
  getServiceNames() {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[11]++;
    cov_1nw8za6v5w().s[57]++;
    return Array.from(this.services.keys());
  }
  /**
   * Get service definition for debugging.
   * @param name Service identifier
   * @returns Service definition or undefined
   */
  getServiceDefinition(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[12]++;
    cov_1nw8za6v5w().s[58]++;
    return this.services.get(name);
  }
  /**
   * Performs dependency validation to ensure all service dependencies are properly registered and resolvable.
   * @throws Error if any dependencies are missing
   */
  validateDependencies() {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[13]++;
    cov_1nw8za6v5w().s[59]++;
    for (const serviceName of this.services.keys()) {
      const definition =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[60]++, this.services.get(serviceName));
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[61]++;
      if (definition.dependencies) {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[20][0]++;
        cov_1nw8za6v5w().s[62]++;
        for (const dependency of definition.dependencies) {
          /* istanbul ignore next */
          cov_1nw8za6v5w().s[63]++;
          if (!this.isRegistered(dependency)) {
            /* istanbul ignore next */
            cov_1nw8za6v5w().b[21][0]++;
            cov_1nw8za6v5w().s[64]++;
            throw new Error(`Service '${serviceName}' depends on '${dependency}' which is not registered`);
          } else
          /* istanbul ignore next */
          {
            cov_1nw8za6v5w().b[21][1]++;
          }
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[20][1]++;
      }
    }
  }
  /**
   * Clear all services and instances (useful for testing).
   */
  clear() {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[14]++;
    cov_1nw8za6v5w().s[65]++;
    this.services.clear();
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[66]++;
    this.resolving.clear();
  }
  /**
   * Replace a service registration (useful for testing).
   * @param name Service identifier
   * @param factory New factory function
   */
  replace(name, factory) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[15]++;
    cov_1nw8za6v5w().s[67]++;
    if (!this.services.has(name)) {
      /* istanbul ignore next */
      cov_1nw8za6v5w().b[22][0]++;
      cov_1nw8za6v5w().s[68]++;
      throw new Error(`Cannot replace service '${name}' - it is not registered`);
    } else
    /* istanbul ignore next */
    {
      cov_1nw8za6v5w().b[22][1]++;
    }
    const existing =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().s[69]++, this.services.get(name));
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[70]++;
    this.services.set(name, {
      ...existing,
      factory,
      instance: undefined // Clear existing instance
    });
  }
  /**
   * Gracefully shuts down all singleton service instances by calling their dispose methods when available.
   */
  async dispose() {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[16]++;
    const disposePromises =
    /* istanbul ignore next */
    (cov_1nw8za6v5w().s[71]++, []);
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[72]++;
    for (const serviceName of this.services.keys()) {
      const definition =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[73]++, this.services.get(serviceName));
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[74]++;
      if (
      /* istanbul ignore next */
      (cov_1nw8za6v5w().b[24][0]++, definition.instance) &&
      /* istanbul ignore next */
      (cov_1nw8za6v5w().b[24][1]++, typeof definition.instance === 'object')) {
        /* istanbul ignore next */
        cov_1nw8za6v5w().b[23][0]++;
        const instance =
        /* istanbul ignore next */
        (cov_1nw8za6v5w().s[75]++, definition.instance); // eslint-disable-line @typescript-eslint/no-explicit-any
        /* istanbul ignore next */
        cov_1nw8za6v5w().s[76]++;
        if (typeof instance.dispose === 'function') {
          /* istanbul ignore next */
          cov_1nw8za6v5w().b[25][0]++;
          cov_1nw8za6v5w().s[77]++;
          try {
            const result =
            /* istanbul ignore next */
            (cov_1nw8za6v5w().s[78]++, instance.dispose());
            /* istanbul ignore next */
            cov_1nw8za6v5w().s[79]++;
            if (result instanceof Promise) {
              /* istanbul ignore next */
              cov_1nw8za6v5w().b[26][0]++;
              cov_1nw8za6v5w().s[80]++;
              disposePromises.push(result.catch(error => {
                /* istanbul ignore next */
                cov_1nw8za6v5w().f[17]++;
                cov_1nw8za6v5w().s[81]++;
                console.warn('Service dispose error:', error);
              }));
            } else
            /* istanbul ignore next */
            {
              cov_1nw8za6v5w().b[26][1]++;
            }
          } catch (error) {
            /* istanbul ignore next */
            cov_1nw8za6v5w().s[82]++;
            // Handle sync dispose errors
            console.warn('Service dispose error:', error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_1nw8za6v5w().b[25][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_1nw8za6v5w().b[23][1]++;
      }
    }
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[83]++;
    await Promise.all(disposePromises);
    /* istanbul ignore next */
    cov_1nw8za6v5w().s[84]++;
    this.clear();
  }
  /**
   * Check if factory function is async.
   * @param factory Factory function to check
   * @returns True if factory returns a Promise
   */
  isAsyncFactory(factory) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[18]++;
    cov_1nw8za6v5w().s[85]++;
    try {
      // Create a test call to check return type
      const result =
      /* istanbul ignore next */
      (cov_1nw8za6v5w().s[86]++, factory.toString());
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[87]++;
      return /* istanbul ignore next */(cov_1nw8za6v5w().b[27][0]++, result.includes('async ')) ||
      /* istanbul ignore next */
      (cov_1nw8za6v5w().b[27][1]++, result.includes('Promise')) ||
      /* istanbul ignore next */
      (cov_1nw8za6v5w().b[27][2]++, result.includes('await '));
    } catch {
      /* istanbul ignore next */
      cov_1nw8za6v5w().s[88]++;
      return false; // Conservative fallback
    }
  }
}
/* istanbul ignore next */
cov_1nw8za6v5w().s[89]++;
exports.DIContainer = DIContainer;
/**
 * Global container instance for application-wide services.
 */
/* istanbul ignore next */
cov_1nw8za6v5w().s[90]++;
exports.container = new DIContainer({
  name: 'global'
});
/**
 * Service locator pattern for quick access to common services.
 * Use sparingly - prefer constructor injection when possible.
 */
class ServiceLocator {
  static resolve(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[19]++;
    cov_1nw8za6v5w().s[91]++;
    return exports.container.resolve(name);
  }
  static async resolveAsync(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[20]++;
    cov_1nw8za6v5w().s[92]++;
    return exports.container.resolveAsync(name);
  }
  static isRegistered(name) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[21]++;
    cov_1nw8za6v5w().s[93]++;
    return exports.container.isRegistered(name);
  }
}
/* istanbul ignore next */
cov_1nw8za6v5w().s[94]++;
exports.ServiceLocator = ServiceLocator;
/**
 * Decorator for automatic service injection (experimental).
 * @param serviceName Name of service to inject
 */
function Inject(serviceName) {
  /* istanbul ignore next */
  cov_1nw8za6v5w().f[22]++;
  cov_1nw8za6v5w().s[95]++;
  // prettier-ignore
  return function (target, propertyKey) {
    /* istanbul ignore next */
    cov_1nw8za6v5w().f[23]++;
    cov_1nw8za6v5w().s[96]++;
    Object.defineProperty(target, propertyKey, {
      get() {
        /* istanbul ignore next */
        cov_1nw8za6v5w().f[24]++;
        cov_1nw8za6v5w().s[97]++;
        return exports.container.resolve(serviceName);
      },
      configurable: true
    });
  };
}
/**
 * Type-safe service keys for better IDE support.
 */
/* istanbul ignore next */
cov_1nw8za6v5w().s[98]++;
exports.ServiceKeys = {
  // Core services
  STORE: 'store',
  LOGGER: 'logger',
  CONFIG: 'config',
  // Website management
  WEBSITE_MANAGER: 'websiteManager',
  WEBSITE_SERVER_MANAGER: 'websiteServerManager',
  // UI services
  MENU_MANAGER: 'menuManager',
  WINDOW_MANAGER: 'windowManager',
  // System services
  DNS_MANAGER: 'dnsManager',
  CERTIFICATE_MANAGER: 'certificateManager',
  // Utilities
  ATOMIC_OPERATIONS: 'atomicOperations',
  FILE_SYSTEM: 'fileSystem'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,