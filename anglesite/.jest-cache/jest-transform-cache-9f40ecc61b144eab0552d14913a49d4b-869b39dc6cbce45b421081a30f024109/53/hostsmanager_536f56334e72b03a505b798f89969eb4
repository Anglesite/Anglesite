0de4d5ef41a8401a0b69a3b6beac0b90
"use strict";

/* istanbul ignore next */
function cov_xp4bvnosa() {
  var path = "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/dns/hosts-manager.ts";
  var hash = "90976b676cf01d9d4cb59950c12380683fec8fc4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/dns/hosts-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 22
        },
        end: {
          line: 37,
          column: 1
        }
      },
      "36": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 62
        }
      },
      "37": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 62
        }
      },
      "38": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "39": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 66
        }
      },
      "40": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 42
        }
      },
      "41": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 44
        }
      },
      "42": {
        start: {
          line: 52,
          column: 19
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "43": {
        start: {
          line: 53,
          column: 24
        },
        end: {
          line: 53,
          column: 48
        }
      },
      "44": {
        start: {
          line: 54,
          column: 15
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "45": {
        start: {
          line: 56,
          column: 27
        },
        end: {
          line: 56,
          column: 62
        }
      },
      "46": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 57,
          column: 48
        }
      },
      "47": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 48
        }
      },
      "48": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 59,
          column: 61
        }
      },
      "49": {
        start: {
          line: 60,
          column: 29
        },
        end: {
          line: 60,
          column: 75
        }
      },
      "50": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "51": {
        start: {
          line: 84,
          column: 30
        },
        end: {
          line: 84,
          column: 34
        }
      },
      "52": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 129,
          column: 5
        }
      },
      "53": {
        start: {
          line: 87,
          column: 39
        },
        end: {
          line: 87,
          column: 68
        }
      },
      "54": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "55": {
        start: {
          line: 90,
          column: 28
        },
        end: {
          line: 90,
          column: 65
        }
      },
      "56": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 115,
          column: 13
        }
      },
      "57": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 104,
          column: 19
        }
      },
      "58": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 23
        }
      },
      "59": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 114,
          column: 19
        }
      },
      "60": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 77
        }
      },
      "61": {
        start: {
          line: 120,
          column: 28
        },
        end: {
          line: 120,
          column: 65
        }
      },
      "62": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "63": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 89
        }
      },
      "64": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 75
        }
      },
      "65": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "66": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "67": {
        start: {
          line: 134,
          column: 8
        },
        end: {
          line: 134,
          column: 66
        }
      },
      "68": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 53
        }
      },
      "69": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 64
        }
      },
      "70": {
        start: {
          line: 137,
          column: 8
        },
        end: {
          line: 137,
          column: 62
        }
      },
      "71": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 65
        }
      },
      "72": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 64
        }
      },
      "73": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 75
        }
      },
      "74": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 66
        }
      },
      "75": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 63
        }
      },
      "76": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 69
        }
      },
      "77": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 59
        }
      },
      "78": {
        start: {
          line: 153,
          column: 4
        },
        end: {
          line: 159,
          column: 5
        }
      },
      "79": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 55
        }
      },
      "80": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 157,
          column: 59
        }
      },
      "81": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 21
        }
      },
      "82": {
        start: {
          line: 165,
          column: 4
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "83": {
        start: {
          line: 166,
          column: 8
        },
        end: {
          line: 166,
          column: 21
        }
      },
      "84": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "85": {
        start: {
          line: 170,
          column: 32
        },
        end: {
          line: 170,
          column: 37
        }
      },
      "86": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "87": {
        start: {
          line: 172,
          column: 31
        },
        end: {
          line: 172,
          column: 99
        }
      },
      "88": {
        start: {
          line: 173,
          column: 12
        },
        end: {
          line: 173,
          column: 60
        }
      },
      "89": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 38
        }
      },
      "90": {
        start: {
          line: 180,
          column: 30
        },
        end: {
          line: 180,
          column: 35
        }
      },
      "91": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 188,
          column: 9
        }
      },
      "92": {
        start: {
          line: 182,
          column: 46
        },
        end: {
          line: 182,
          column: 84
        }
      },
      "93": {
        start: {
          line: 183,
          column: 12
        },
        end: {
          line: 183,
          column: 65
        }
      },
      "94": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 187,
          column: 36
        }
      },
      "95": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 52
        }
      },
      "96": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 71
        }
      },
      "97": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 193,
          column: 21
        }
      },
      "98": {
        start: {
          line: 200,
          column: 4
        },
        end: {
          line: 202,
          column: 5
        }
      },
      "99": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 21
        }
      },
      "100": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "101": {
        start: {
          line: 205,
          column: 30
        },
        end: {
          line: 205,
          column: 35
        }
      },
      "102": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 213,
          column: 9
        }
      },
      "103": {
        start: {
          line: 207,
          column: 46
        },
        end: {
          line: 207,
          column: 84
        }
      },
      "104": {
        start: {
          line: 208,
          column: 12
        },
        end: {
          line: 208,
          column: 65
        }
      },
      "105": {
        start: {
          line: 212,
          column: 12
        },
        end: {
          line: 212,
          column: 36
        }
      },
      "106": {
        start: {
          line: 215,
          column: 32
        },
        end: {
          line: 215,
          column: 37
        }
      },
      "107": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "108": {
        start: {
          line: 217,
          column: 31
        },
        end: {
          line: 217,
          column: 99
        }
      },
      "109": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 60
        }
      },
      "110": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 38
        }
      },
      "111": {
        start: {
          line: 224,
          column: 8
        },
        end: {
          line: 224,
          column: 53
        }
      },
      "112": {
        start: {
          line: 227,
          column: 8
        },
        end: {
          line: 227,
          column: 84
        }
      },
      "113": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 228,
          column: 21
        }
      },
      "114": {
        start: {
          line: 235,
          column: 4
        },
        end: {
          line: 237,
          column: 5
        }
      },
      "115": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 236,
          column: 15
        }
      },
      "116": {
        start: {
          line: 238,
          column: 29
        },
        end: {
          line: 238,
          column: 55
        }
      },
      "117": {
        start: {
          line: 239,
          column: 22
        },
        end: {
          line: 239,
          column: 46
        }
      },
      "118": {
        start: {
          line: 240,
          column: 4
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "119": {
        start: {
          line: 241,
          column: 8
        },
        end: {
          line: 241,
          column: 104
        }
      },
      "120": {
        start: {
          line: 243,
          column: 9
        },
        end: {
          line: 252,
          column: 5
        }
      },
      "121": {
        start: {
          line: 244,
          column: 8
        },
        end: {
          line: 244,
          column: 73
        }
      },
      "122": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 71
        }
      },
      "123": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 246,
          column: 43
        }
      },
      "124": {
        start: {
          line: 247,
          column: 8
        },
        end: {
          line: 247,
          column: 95
        }
      },
      "125": {
        start: {
          line: 248,
          column: 8
        },
        end: {
          line: 248,
          column: 67
        }
      },
      "126": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 67
        }
      },
      "127": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 55
        }
      },
      "128": {
        start: {
          line: 251,
          column: 8
        },
        end: {
          line: 251,
          column: 77
        }
      },
      "129": {
        start: {
          line: 258,
          column: 4
        },
        end: {
          line: 314,
          column: 5
        }
      },
      "130": {
        start: {
          line: 260,
          column: 32
        },
        end: {
          line: 260,
          column: 73
        }
      },
      "131": {
        start: {
          line: 261,
          column: 8
        },
        end: {
          line: 309,
          column: 9
        }
      },
      "132": {
        start: {
          line: 263,
          column: 31
        },
        end: {
          line: 263,
          column: 65
        }
      },
      "133": {
        start: {
          line: 264,
          column: 12
        },
        end: {
          line: 264,
          column: 53
        }
      },
      "134": {
        start: {
          line: 268,
          column: 37
        },
        end: {
          line: 268,
          column: 63
        }
      },
      "135": {
        start: {
          line: 270,
          column: 28
        },
        end: {
          line: 273,
          column: 13
        }
      },
      "136": {
        start: {
          line: 275,
          column: 12
        },
        end: {
          line: 280,
          column: 13
        }
      },
      "137": {
        start: {
          line: 276,
          column: 16
        },
        end: {
          line: 276,
          column: 87
        }
      },
      "138": {
        start: {
          line: 279,
          column: 16
        },
        end: {
          line: 279,
          column: 86
        }
      },
      "139": {
        start: {
          line: 283,
          column: 32
        },
        end: {
          line: 283,
          column: 86
        }
      },
      "140": {
        start: {
          line: 283,
          column: 50
        },
        end: {
          line: 283,
          column: 85
        }
      },
      "141": {
        start: {
          line: 284,
          column: 32
        },
        end: {
          line: 284,
          column: 69
        }
      },
      "142": {
        start: {
          line: 285,
          column: 12
        },
        end: {
          line: 308,
          column: 15
        }
      },
      "143": {
        start: {
          line: 286,
          column: 16
        },
        end: {
          line: 307,
          column: 19
        }
      },
      "144": {
        start: {
          line: 287,
          column: 20
        },
        end: {
          line: 306,
          column: 21
        }
      },
      "145": {
        start: {
          line: 289,
          column: 24
        },
        end: {
          line: 294,
          column: 25
        }
      },
      "146": {
        start: {
          line: 290,
          column: 28
        },
        end: {
          line: 290,
          column: 76
        }
      },
      "147": {
        start: {
          line: 292,
          column: 29
        },
        end: {
          line: 294,
          column: 25
        }
      },
      "148": {
        start: {
          line: 293,
          column: 28
        },
        end: {
          line: 293,
          column: 108
        }
      },
      "149": {
        start: {
          line: 295,
          column: 24
        },
        end: {
          line: 295,
          column: 100
        }
      },
      "150": {
        start: {
          line: 296,
          column: 24
        },
        end: {
          line: 296,
          column: 52
        }
      },
      "151": {
        start: {
          line: 299,
          column: 24
        },
        end: {
          line: 304,
          column: 25
        }
      },
      "152": {
        start: {
          line: 300,
          column: 28
        },
        end: {
          line: 300,
          column: 94
        }
      },
      "153": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 303,
          column: 82
        }
      },
      "154": {
        start: {
          line: 305,
          column: 24
        },
        end: {
          line: 305,
          column: 79
        }
      },
      "155": {
        start: {
          line: 312,
          column: 8
        },
        end: {
          line: 312,
          column: 125
        }
      },
      "156": {
        start: {
          line: 313,
          column: 8
        },
        end: {
          line: 313,
          column: 34
        }
      },
      "157": {
        start: {
          line: 320,
          column: 4
        },
        end: {
          line: 334,
          column: 5
        }
      },
      "158": {
        start: {
          line: 321,
          column: 23
        },
        end: {
          line: 321,
          column: 106
        }
      },
      "159": {
        start: {
          line: 322,
          column: 8
        },
        end: {
          line: 329,
          column: 9
        }
      },
      "160": {
        start: {
          line: 323,
          column: 12
        },
        end: {
          line: 323,
          column: 61
        }
      },
      "161": {
        start: {
          line: 324,
          column: 12
        },
        end: {
          line: 324,
          column: 24
        }
      },
      "162": {
        start: {
          line: 327,
          column: 12
        },
        end: {
          line: 327,
          column: 69
        }
      },
      "163": {
        start: {
          line: 328,
          column: 12
        },
        end: {
          line: 328,
          column: 25
        }
      },
      "164": {
        start: {
          line: 332,
          column: 8
        },
        end: {
          line: 332,
          column: 73
        }
      },
      "165": {
        start: {
          line: 333,
          column: 8
        },
        end: {
          line: 333,
          column: 21
        }
      },
      "166": {
        start: {
          line: 340,
          column: 4
        },
        end: {
          line: 354,
          column: 5
        }
      },
      "167": {
        start: {
          line: 341,
          column: 23
        },
        end: {
          line: 341,
          column: 98
        }
      },
      "168": {
        start: {
          line: 342,
          column: 8
        },
        end: {
          line: 349,
          column: 9
        }
      },
      "169": {
        start: {
          line: 343,
          column: 12
        },
        end: {
          line: 343,
          column: 65
        }
      },
      "170": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 344,
          column: 24
        }
      },
      "171": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 74
        }
      },
      "172": {
        start: {
          line: 348,
          column: 12
        },
        end: {
          line: 348,
          column: 25
        }
      },
      "173": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 352,
          column: 78
        }
      },
      "174": {
        start: {
          line: 353,
          column: 8
        },
        end: {
          line: 353,
          column: 21
        }
      },
      "175": {
        start: {
          line: 360,
          column: 4
        },
        end: {
          line: 373,
          column: 7
        }
      },
      "176": {
        start: {
          line: 361,
          column: 8
        },
        end: {
          line: 372,
          column: 11
        }
      },
      "177": {
        start: {
          line: 362,
          column: 12
        },
        end: {
          line: 366,
          column: 13
        }
      },
      "178": {
        start: {
          line: 363,
          column: 16
        },
        end: {
          line: 363,
          column: 82
        }
      },
      "179": {
        start: {
          line: 364,
          column: 16
        },
        end: {
          line: 364,
          column: 31
        }
      },
      "180": {
        start: {
          line: 365,
          column: 16
        },
        end: {
          line: 365,
          column: 23
        }
      },
      "181": {
        start: {
          line: 368,
          column: 27
        },
        end: {
          line: 370,
          column: 14
        }
      },
      "182": {
        start: {
          line: 369,
          column: 16
        },
        end: {
          line: 369,
          column: 41
        }
      },
      "183": {
        start: {
          line: 371,
          column: 12
        },
        end: {
          line: 371,
          column: 28
        }
      },
      "184": {
        start: {
          line: 379,
          column: 4
        },
        end: {
          line: 390,
          column: 5
        }
      },
      "185": {
        start: {
          line: 381,
          column: 24
        },
        end: {
          line: 381,
          column: 73
        }
      },
      "186": {
        start: {
          line: 382,
          column: 8
        },
        end: {
          line: 384,
          column: 9
        }
      },
      "187": {
        start: {
          line: 383,
          column: 12
        },
        end: {
          line: 383,
          column: 68
        }
      },
      "188": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 23
        }
      },
      "189": {
        start: {
          line: 388,
          column: 8
        },
        end: {
          line: 388,
          column: 66
        }
      },
      "190": {
        start: {
          line: 389,
          column: 8
        },
        end: {
          line: 389,
          column: 21
        }
      },
      "191": {
        start: {
          line: 396,
          column: 4
        },
        end: {
          line: 409,
          column: 5
        }
      },
      "192": {
        start: {
          line: 398,
          column: 23
        },
        end: {
          line: 398,
          column: 54
        }
      },
      "193": {
        start: {
          line: 399,
          column: 8
        },
        end: {
          line: 402,
          column: 9
        }
      },
      "194": {
        start: {
          line: 400,
          column: 12
        },
        end: {
          line: 400,
          column: 68
        }
      },
      "195": {
        start: {
          line: 401,
          column: 12
        },
        end: {
          line: 401,
          column: 24
        }
      },
      "196": {
        start: {
          line: 404,
          column: 8
        },
        end: {
          line: 404,
          column: 55
        }
      },
      "197": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 407,
          column: 61
        }
      },
      "198": {
        start: {
          line: 408,
          column: 8
        },
        end: {
          line: 408,
          column: 21
        }
      },
      "199": {
        start: {
          line: 415,
          column: 4
        },
        end: {
          line: 415,
          column: 54
        }
      },
      "200": {
        start: {
          line: 423,
          column: 4
        },
        end: {
          line: 485,
          column: 5
        }
      },
      "201": {
        start: {
          line: 426,
          column: 8
        },
        end: {
          line: 437,
          column: 9
        }
      },
      "202": {
        start: {
          line: 428,
          column: 31
        },
        end: {
          line: 428,
          column: 73
        }
      },
      "203": {
        start: {
          line: 429,
          column: 35
        },
        end: {
          line: 429,
          column: 97
        }
      },
      "204": {
        start: {
          line: 430,
          column: 12
        },
        end: {
          line: 430,
          column: 67
        }
      },
      "205": {
        start: {
          line: 433,
          column: 12
        },
        end: {
          line: 433,
          column: 100
        }
      },
      "206": {
        start: {
          line: 435,
          column: 37
        },
        end: {
          line: 435,
          column: 122
        }
      },
      "207": {
        start: {
          line: 435,
          column: 72
        },
        end: {
          line: 435,
          column: 121
        }
      },
      "208": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 436,
          column: 52
        }
      },
      "209": {
        start: {
          line: 438,
          column: 8
        },
        end: {
          line: 438,
          column: 60
        }
      },
      "210": {
        start: {
          line: 440,
          column: 29
        },
        end: {
          line: 440,
          column: 84
        }
      },
      "211": {
        start: {
          line: 441,
          column: 29
        },
        end: {
          line: 441,
          column: 103
        }
      },
      "212": {
        start: {
          line: 441,
          column: 86
        },
        end: {
          line: 441,
          column: 100
        }
      },
      "213": {
        start: {
          line: 443,
          column: 28
        },
        end: {
          line: 451,
          column: 10
        }
      },
      "214": {
        start: {
          line: 444,
          column: 12
        },
        end: {
          line: 450,
          column: 15
        }
      },
      "215": {
        start: {
          line: 445,
          column: 16
        },
        end: {
          line: 448,
          column: 17
        }
      },
      "216": {
        start: {
          line: 446,
          column: 20
        },
        end: {
          line: 446,
          column: 32
        }
      },
      "217": {
        start: {
          line: 447,
          column: 20
        },
        end: {
          line: 447,
          column: 27
        }
      },
      "218": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 31
        }
      },
      "219": {
        start: {
          line: 453,
          column: 32
        },
        end: {
          line: 453,
          column: 34
        }
      },
      "220": {
        start: {
          line: 454,
          column: 8
        },
        end: {
          line: 464,
          column: 9
        }
      },
      "221": {
        start: {
          line: 455,
          column: 26
        },
        end: {
          line: 455,
          column: 43
        }
      },
      "222": {
        start: {
          line: 456,
          column: 12
        },
        end: {
          line: 463,
          column: 13
        }
      },
      "223": {
        start: {
          line: 457,
          column: 33
        },
        end: {
          line: 457,
          column: 41
        }
      },
      "224": {
        start: {
          line: 458,
          column: 16
        },
        end: {
          line: 462,
          column: 17
        }
      },
      "225": {
        start: {
          line: 459,
          column: 20
        },
        end: {
          line: 461,
          column: 21
        }
      },
      "226": {
        start: {
          line: 460,
          column: 24
        },
        end: {
          line: 460,
          column: 55
        }
      },
      "227": {
        start: {
          line: 466,
          column: 27
        },
        end: {
          line: 466,
          column: 31
        }
      },
      "228": {
        start: {
          line: 467,
          column: 8
        },
        end: {
          line: 473,
          column: 9
        }
      },
      "229": {
        start: {
          line: 468,
          column: 12
        },
        end: {
          line: 468,
          column: 63
        }
      },
      "230": {
        start: {
          line: 469,
          column: 28
        },
        end: {
          line: 469,
          column: 57
        }
      },
      "231": {
        start: {
          line: 470,
          column: 12
        },
        end: {
          line: 472,
          column: 13
        }
      },
      "232": {
        start: {
          line: 471,
          column: 16
        },
        end: {
          line: 471,
          column: 37
        }
      },
      "233": {
        start: {
          line: 474,
          column: 8
        },
        end: {
          line: 479,
          column: 9
        }
      },
      "234": {
        start: {
          line: 475,
          column: 12
        },
        end: {
          line: 475,
          column: 74
        }
      },
      "235": {
        start: {
          line: 478,
          column: 12
        },
        end: {
          line: 478,
          column: 83
        }
      },
      "236": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 480,
          column: 28
        }
      },
      "237": {
        start: {
          line: 483,
          column: 8
        },
        end: {
          line: 483,
          column: 63
        }
      },
      "238": {
        start: {
          line: 484,
          column: 8
        },
        end: {
          line: 484,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 35,
            column: 57
          }
        },
        loc: {
          start: {
            line: 35,
            column: 71
          },
          end: {
            line: 37,
            column: 1
          }
        },
        line: 35
      },
      "10": {
        name: "addLocalDnsResolution",
        decl: {
          start: {
            line: 82,
            column: 15
          },
          end: {
            line: 82,
            column: 36
          }
        },
        loc: {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 148,
            column: 1
          }
        },
        line: 82
      },
      "11": {
        name: "checkAnglesiteSection",
        decl: {
          start: {
            line: 152,
            column: 15
          },
          end: {
            line: 152,
            column: 36
          }
        },
        loc: {
          start: {
            line: 152,
            column: 39
          },
          end: {
            line: 160,
            column: 1
          }
        },
        line: 152
      },
      "12": {
        name: "isTouchIdAvailable",
        decl: {
          start: {
            line: 164,
            column: 15
          },
          end: {
            line: 164,
            column: 33
          }
        },
        loc: {
          start: {
            line: 164,
            column: 36
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 164
      },
      "13": {
        name: "canEnableTouchId",
        decl: {
          start: {
            line: 199,
            column: 15
          },
          end: {
            line: 199,
            column: 31
          }
        },
        loc: {
          start: {
            line: 199,
            column: 34
          },
          end: {
            line: 230,
            column: 1
          }
        },
        line: 199
      },
      "14": {
        name: "checkAndSuggestTouchIdSetup",
        decl: {
          start: {
            line: 234,
            column: 15
          },
          end: {
            line: 234,
            column: 42
          }
        },
        loc: {
          start: {
            line: 234,
            column: 45
          },
          end: {
            line: 253,
            column: 1
          }
        },
        line: 234
      },
      "15": {
        name: "executeWithElevatedPrivileges",
        decl: {
          start: {
            line: 257,
            column: 15
          },
          end: {
            line: 257,
            column: 44
          }
        },
        loc: {
          start: {
            line: 257,
            column: 60
          },
          end: {
            line: 315,
            column: 1
          }
        },
        line: 257
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 283,
            column: 41
          },
          end: {
            line: 283,
            column: 42
          }
        },
        loc: {
          start: {
            line: 283,
            column: 50
          },
          end: {
            line: 283,
            column: 85
          }
        },
        line: 283
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 285,
            column: 31
          },
          end: {
            line: 285,
            column: 32
          }
        },
        loc: {
          start: {
            line: 285,
            column: 44
          },
          end: {
            line: 308,
            column: 13
          }
        },
        line: 285
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 286,
            column: 65
          },
          end: {
            line: 286,
            column: 66
          }
        },
        loc: {
          start: {
            line: 286,
            column: 84
          },
          end: {
            line: 307,
            column: 17
          }
        },
        line: 286
      },
      "19": {
        name: "addHostEntry",
        decl: {
          start: {
            line: 319,
            column: 15
          },
          end: {
            line: 319,
            column: 27
          }
        },
        loc: {
          start: {
            line: 319,
            column: 63
          },
          end: {
            line: 335,
            column: 1
          }
        },
        line: 319
      },
      "20": {
        name: "removeHostEntry",
        decl: {
          start: {
            line: 339,
            column: 15
          },
          end: {
            line: 339,
            column: 30
          }
        },
        loc: {
          start: {
            line: 339,
            column: 41
          },
          end: {
            line: 355,
            column: 1
          }
        },
        line: 339
      },
      "21": {
        name: "hostEntryExists",
        decl: {
          start: {
            line: 359,
            column: 15
          },
          end: {
            line: 359,
            column: 30
          }
        },
        loc: {
          start: {
            line: 359,
            column: 41
          },
          end: {
            line: 374,
            column: 1
          }
        },
        line: 359
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 360,
            column: 23
          },
          end: {
            line: 360,
            column: 24
          }
        },
        loc: {
          start: {
            line: 360,
            column: 36
          },
          end: {
            line: 373,
            column: 5
          }
        },
        line: 360
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 361,
            column: 27
          },
          end: {
            line: 361,
            column: 28
          }
        },
        loc: {
          start: {
            line: 361,
            column: 43
          },
          end: {
            line: 372,
            column: 9
          }
        },
        line: 361
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 368,
            column: 38
          },
          end: {
            line: 368,
            column: 39
          }
        },
        loc: {
          start: {
            line: 368,
            column: 52
          },
          end: {
            line: 370,
            column: 13
          }
        },
        line: 368
      },
      "25": {
        name: "setupAnglesiteWildcardSection",
        decl: {
          start: {
            line: 378,
            column: 15
          },
          end: {
            line: 378,
            column: 44
          }
        },
        loc: {
          start: {
            line: 378,
            column: 47
          },
          end: {
            line: 391,
            column: 1
          }
        },
        line: 378
      },
      "26": {
        name: "addToAnglesiteSection",
        decl: {
          start: {
            line: 395,
            column: 15
          },
          end: {
            line: 395,
            column: 36
          }
        },
        loc: {
          start: {
            line: 395,
            column: 72
          },
          end: {
            line: 410,
            column: 1
          }
        },
        line: 395
      },
      "27": {
        name: "updateHostsFile",
        decl: {
          start: {
            line: 414,
            column: 15
          },
          end: {
            line: 414,
            column: 30
          }
        },
        loc: {
          start: {
            line: 414,
            column: 66
          },
          end: {
            line: 416,
            column: 1
          }
        },
        line: 414
      },
      "28": {
        name: "cleanupHostsFile",
        decl: {
          start: {
            line: 422,
            column: 15
          },
          end: {
            line: 422,
            column: 31
          }
        },
        loc: {
          start: {
            line: 422,
            column: 34
          },
          end: {
            line: 486,
            column: 1
          }
        },
        line: 422
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 435,
            column: 66
          },
          end: {
            line: 435,
            column: 67
          }
        },
        loc: {
          start: {
            line: 435,
            column: 72
          },
          end: {
            line: 435,
            column: 121
          }
        },
        line: 435
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 441,
            column: 76
          },
          end: {
            line: 441,
            column: 77
          }
        },
        loc: {
          start: {
            line: 441,
            column: 86
          },
          end: {
            line: 441,
            column: 100
          }
        },
        line: 441
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 443,
            column: 46
          },
          end: {
            line: 443,
            column: 47
          }
        },
        loc: {
          start: {
            line: 443,
            column: 67
          },
          end: {
            line: 451,
            column: 9
          }
        },
        line: 443
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 444,
            column: 31
          },
          end: {
            line: 444,
            column: 32
          }
        },
        loc: {
          start: {
            line: 444,
            column: 47
          },
          end: {
            line: 450,
            column: 13
          }
        },
        line: 444
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 35,
            column: 22
          },
          end: {
            line: 37,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 23
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 51
          }
        }, {
          start: {
            line: 35,
            column: 56
          },
          end: {
            line: 37,
            column: 1
          }
        }],
        line: 35
      },
      "18": {
        loc: {
          start: {
            line: 36,
            column: 11
          },
          end: {
            line: 36,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 37
          },
          end: {
            line: 36,
            column: 40
          }
        }, {
          start: {
            line: 36,
            column: 43
          },
          end: {
            line: 36,
            column: 61
          }
        }],
        line: 36
      },
      "19": {
        loc: {
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 12
          },
          end: {
            line: 36,
            column: 15
          }
        }, {
          start: {
            line: 36,
            column: 19
          },
          end: {
            line: 36,
            column: 33
          }
        }],
        line: 36
      },
      "20": {
        loc: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "21": {
        loc: {
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: 117,
            column: 13
          },
          end: {
            line: 127,
            column: 9
          }
        }],
        line: 88
      },
      "22": {
        loc: {
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 12
          },
          end: {
            line: 115,
            column: 13
          }
        }, {
          start: {
            line: 107,
            column: 17
          },
          end: {
            line: 115,
            column: 13
          }
        }],
        line: 91
      },
      "23": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 126,
            column: 13
          }
        }, {
          start: {
            line: 124,
            column: 17
          },
          end: {
            line: 126,
            column: 13
          }
        }],
        line: 121
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 4
          },
          end: {
            line: 167,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 189,
            column: 15
          },
          end: {
            line: 189,
            column: 32
          }
        }, {
          start: {
            line: 189,
            column: 36
          },
          end: {
            line: 189,
            column: 51
          }
        }],
        line: 189
      },
      "26": {
        loc: {
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 4
          },
          end: {
            line: 202,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "27": {
        loc: {
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 224,
            column: 15
          },
          end: {
            line: 224,
            column: 30
          }
        }, {
          start: {
            line: 224,
            column: 34
          },
          end: {
            line: 224,
            column: 52
          }
        }],
        line: 224
      },
      "28": {
        loc: {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 237,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "29": {
        loc: {
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 4
          },
          end: {
            line: 252,
            column: 5
          }
        }, {
          start: {
            line: 243,
            column: 9
          },
          end: {
            line: 252,
            column: 5
          }
        }],
        line: 240
      },
      "30": {
        loc: {
          start: {
            line: 243,
            column: 9
          },
          end: {
            line: 252,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 243,
            column: 9
          },
          end: {
            line: 252,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 243
      },
      "31": {
        loc: {
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 261,
            column: 8
          },
          end: {
            line: 309,
            column: 9
          }
        }, {
          start: {
            line: 266,
            column: 13
          },
          end: {
            line: 309,
            column: 9
          }
        }],
        line: 261
      },
      "32": {
        loc: {
          start: {
            line: 272,
            column: 22
          },
          end: {
            line: 272,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 272,
            column: 54
          },
          end: {
            line: 272,
            column: 63
          }
        }, {
          start: {
            line: 272,
            column: 66
          },
          end: {
            line: 272,
            column: 75
          }
        }],
        line: 272
      },
      "33": {
        loc: {
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 275,
            column: 12
          },
          end: {
            line: 280,
            column: 13
          }
        }, {
          start: {
            line: 278,
            column: 17
          },
          end: {
            line: 280,
            column: 13
          }
        }],
        line: 275
      },
      "34": {
        loc: {
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 287,
            column: 20
          },
          end: {
            line: 306,
            column: 21
          }
        }, {
          start: {
            line: 298,
            column: 25
          },
          end: {
            line: 306,
            column: 21
          }
        }],
        line: 287
      },
      "35": {
        loc: {
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 294,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 24
          },
          end: {
            line: 294,
            column: 25
          }
        }, {
          start: {
            line: 292,
            column: 29
          },
          end: {
            line: 294,
            column: 25
          }
        }],
        line: 289
      },
      "36": {
        loc: {
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 289,
            column: 28
          },
          end: {
            line: 289,
            column: 68
          }
        }, {
          start: {
            line: 289,
            column: 72
          },
          end: {
            line: 289,
            column: 91
          }
        }],
        line: 289
      },
      "37": {
        loc: {
          start: {
            line: 292,
            column: 29
          },
          end: {
            line: 294,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 29
          },
          end: {
            line: 294,
            column: 25
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "38": {
        loc: {
          start: {
            line: 299,
            column: 24
          },
          end: {
            line: 304,
            column: 25
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 299,
            column: 24
          },
          end: {
            line: 304,
            column: 25
          }
        }, {
          start: {
            line: 302,
            column: 29
          },
          end: {
            line: 304,
            column: 25
          }
        }],
        line: 299
      },
      "39": {
        loc: {
          start: {
            line: 312,
            column: 69
          },
          end: {
            line: 312,
            column: 123
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 312,
            column: 94
          },
          end: {
            line: 312,
            column: 107
          }
        }, {
          start: {
            line: 312,
            column: 110
          },
          end: {
            line: 312,
            column: 123
          }
        }],
        line: 312
      },
      "40": {
        loc: {
          start: {
            line: 319,
            column: 38
          },
          end: {
            line: 319,
            column: 61
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 319,
            column: 50
          },
          end: {
            line: 319,
            column: 61
          }
        }],
        line: 319
      },
      "41": {
        loc: {
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 8
          },
          end: {
            line: 329,
            column: 9
          }
        }, {
          start: {
            line: 326,
            column: 13
          },
          end: {
            line: 329,
            column: 9
          }
        }],
        line: 322
      },
      "42": {
        loc: {
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 342,
            column: 8
          },
          end: {
            line: 349,
            column: 9
          }
        }, {
          start: {
            line: 346,
            column: 13
          },
          end: {
            line: 349,
            column: 9
          }
        }],
        line: 342
      },
      "43": {
        loc: {
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 362,
            column: 12
          },
          end: {
            line: 366,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 362
      },
      "44": {
        loc: {
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 8
          },
          end: {
            line: 384,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "45": {
        loc: {
          start: {
            line: 395,
            column: 47
          },
          end: {
            line: 395,
            column: 70
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 395,
            column: 59
          },
          end: {
            line: 395,
            column: 70
          }
        }],
        line: 395
      },
      "46": {
        loc: {
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 399,
            column: 8
          },
          end: {
            line: 402,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 399
      },
      "47": {
        loc: {
          start: {
            line: 414,
            column: 41
          },
          end: {
            line: 414,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 414,
            column: 53
          },
          end: {
            line: 414,
            column: 64
          }
        }],
        line: 414
      },
      "48": {
        loc: {
          start: {
            line: 440,
            column: 29
          },
          end: {
            line: 440,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 440,
            column: 63
          },
          end: {
            line: 440,
            column: 79
          }
        }, {
          start: {
            line: 440,
            column: 82
          },
          end: {
            line: 440,
            column: 84
          }
        }],
        line: 440
      },
      "49": {
        loc: {
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 445,
            column: 16
          },
          end: {
            line: 448,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 445
      },
      "50": {
        loc: {
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 463,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 456,
            column: 12
          },
          end: {
            line: 463,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 456
      },
      "51": {
        loc: {
          start: {
            line: 458,
            column: 16
          },
          end: {
            line: 462,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 458,
            column: 16
          },
          end: {
            line: 462,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 458
      },
      "52": {
        loc: {
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 458,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 458,
            column: 20
          },
          end: {
            line: 458,
            column: 46
          }
        }, {
          start: {
            line: 458,
            column: 50
          },
          end: {
            line: 458,
            column: 68
          }
        }],
        line: 458
      },
      "53": {
        loc: {
          start: {
            line: 459,
            column: 20
          },
          end: {
            line: 461,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 459,
            column: 20
          },
          end: {
            line: 461,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 459
      },
      "54": {
        loc: {
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 470,
            column: 12
          },
          end: {
            line: 472,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 470
      },
      "55": {
        loc: {
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 474,
            column: 8
          },
          end: {
            line: 479,
            column: 9
          }
        }, {
          start: {
            line: 477,
            column: 13
          },
          end: {
            line: 479,
            column: 9
          }
        }],
        line: 474
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0],
      "46": [0, 0],
      "47": [0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      file: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/dns/hosts-manager.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/dns/hosts-manager.ts"],
      sourcesContent: ["/**\n * @file DNS and hosts file management for Anglesite development domains.\n *\n * This module handles:\n * - Adding .test domains to /etc/hosts for local DNS resolution\n * - Managing the Anglesite section in the hosts file\n * - Cleaning up orphaned domain entries\n * - Cross-platform hosts file modifications using hostile library.\n */\nimport { dialog } from 'electron';\nimport { execFile } from 'child_process';\nimport { promisify } from 'util';\n// Import for DI access\nimport { getGlobalContext } from '../core/service-registry';\nimport { ServiceKeys } from '../core/container';\nimport { IWebsiteManager } from '../core/interfaces';\nimport * as hostile from 'hostile';\n\nimport sudoPrompt from 'sudo-prompt';\nimport isElevated from 'native-is-elevated';\n\nconst execFileAsync = promisify(execFile);\n\n/**\n * Add local DNS resolution for a hostname with biometric authentication.\n *\n * Automatically configures /etc/hosts to resolve the specified hostname to 127.0.0.1\n * for local development. Uses Touch ID when available for secure privilege escalation.\n *\n * Features:\n * - First-time setup creates Anglesite section with user confirmation dialog\n * - Subsequent additions are silent and automatic\n * - Touch ID biometric authentication when available\n * - Fallback to password authentication\n * - Comprehensive error handling with user feedback.\n * @param hostname The .test hostname to add (e.g., \"mysite.test\").\n * @returns Promise that resolves when DNS resolution is configured.\n * @example\n * ```typescript\n * await addLocalDnsResolution('my-website.test');\n * // Now https://my-website.test:8080 resolves to localhost\n * ```\n */\nexport async function addLocalDnsResolution(hostname: string): Promise<void> {\n  // Check if auto-configuration is enabled\n  const autoConfigEnabled = true; // TODO: Get from settings\n\n  if (autoConfigEnabled) {\n    // Check if Anglesite section exists\n    const anglesiteSectionExists = await checkAnglesiteSection();\n\n    if (!anglesiteSectionExists) {\n      // Set up the wildcard section for the first time\n      const success = await setupAnglesiteWildcardSection();\n      if (success) {\n        dialog.showMessageBox({\n          type: 'info',\n          title: 'DNS Configuration Complete',\n          message: 'Development domains configured successfully!',\n          detail: `Your site is now available at:\n\n\u2022 https://${hostname}:8080\n\u2022 https://localhost:8080\n\nAll future websites will automatically work at:\n\u2022 https://[website-name].test:8080`,\n          buttons: ['OK'],\n        });\n        return;\n      } else {\n        dialog.showMessageBox({\n          type: 'warning',\n          title: 'Setup Failed',\n          message: 'Could not enable automatic domain configuration',\n          detail: `To access your site at https://${hostname}:8080, please add this line to /etc/hosts:\\n\\n127.0.0.1\\t${hostname}`,\n          buttons: ['OK'],\n        });\n      }\n    } else {\n      // Anglesite section exists - add domain silently\n      console.log(`Adding ${hostname} to existing Anglesite section\u2026`);\n      const success = await addToAnglesiteSection(hostname);\n      if (success) {\n        console.log(`\u2705 DNS resolution for ${hostname} configured automatically`);\n      } else {\n        console.error(`\u274C Failed to add ${hostname} to hosts file`);\n      }\n    }\n    return;\n  }\n\n  try {\n    // This section is handled by the auto-configuration above\n    // No need to check for wildcard entries with hostile\n\n    // Inform user about DNS setup\n    console.log(`\\n========================================`);\n    console.log(`\uD83D\uDCCC Development Server Access:`);\n    console.log(`========================================`);\n    console.log(`\u2705 Available at: https://localhost:8080`);\n    console.log(`\u2728 Custom domain: https://${hostname}:8080`);\n    console.log(`1. Enable auto-configuration in Settings`);\n    console.log(`2. Or manually add: 127.0.0.1\\t*.test to /etc/hosts`);\n    console.log(`========================================\\n`);\n  } catch (error) {\n    console.warn('Could not check DNS resolution:', error);\n    console.log(`\\nAccess your site at: https://localhost:8080`);\n    console.log(`Or set up custom domain in Settings`);\n  }\n}\n\n/**\n * Check if anglesite.test domain exists in hosts file.\n */\nasync function checkAnglesiteSection(): Promise<boolean> {\n  try {\n    return await hostEntryExists('anglesite.test');\n  } catch (error) {\n    console.error('Error checking hosts file:', error);\n    return false;\n  }\n}\n\n/**\n * Check if Touch ID is available and configured for sudo on macOS.\n */\nasync function isTouchIdAvailable(): Promise<boolean> {\n  if (process.platform !== 'darwin') {\n    return false;\n  }\n\n  try {\n    // Check if pam_tid.so is configured in sudo PAM configuration\n    let touchIdConfigured = false;\n    try {\n      const { stdout } = await execFileAsync('grep', ['-c', 'pam_tid.so', '/etc/pam.d/sudo']);\n      touchIdConfigured = parseInt(stdout.trim()) > 0;\n    } catch {\n      // File not found or no matches - Touch ID not configured\n      touchIdConfigured = false;\n    }\n\n    // Check if Touch ID hardware is available\n    let touchIdHardware = false;\n    try {\n      const { stdout: biometryCheck } = await execFileAsync('bioutil', ['-r']);\n      touchIdHardware = biometryCheck.includes('Touch ID');\n    } catch {\n      // bioutil not available or no Touch ID hardware\n      touchIdHardware = false;\n    }\n\n    return touchIdConfigured && touchIdHardware;\n  } catch (error) {\n    console.debug('Could not check Touch ID availability:', error);\n    return false;\n  }\n}\n\n/**\n * Check if Touch ID hardware is available but not configured for sudo.\n */\nasync function canEnableTouchId(): Promise<boolean> {\n  if (process.platform !== 'darwin') {\n    return false;\n  }\n\n  try {\n    // Check if Touch ID hardware is available\n    let touchIdHardware = false;\n    try {\n      const { stdout: biometryCheck } = await execFileAsync('bioutil', ['-r']);\n      touchIdHardware = biometryCheck.includes('Touch ID');\n    } catch {\n      // bioutil not available or no Touch ID hardware\n      touchIdHardware = false;\n    }\n\n    // Check if pam_tid.so is NOT configured in sudo PAM configuration\n    let touchIdConfigured = false;\n    try {\n      const { stdout } = await execFileAsync('grep', ['-c', 'pam_tid.so', '/etc/pam.d/sudo']);\n      touchIdConfigured = parseInt(stdout.trim()) > 0;\n    } catch {\n      // File not found or no matches - Touch ID not configured\n      touchIdConfigured = false;\n    }\n\n    return touchIdHardware && !touchIdConfigured;\n  } catch (error) {\n    console.debug('Could not check Touch ID configuration possibility:', error);\n    return false;\n  }\n}\n\n/**\n * Show Touch ID setup information to user if available but not configured.\n */\nexport async function checkAndSuggestTouchIdSetup(): Promise<void> {\n  if (process.platform !== 'darwin') {\n    return;\n  }\n\n  const touchIdAvailable = await isTouchIdAvailable();\n  const canEnable = await canEnableTouchId();\n\n  if (touchIdAvailable) {\n    console.log('\uD83D\uDD10 Touch ID is configured for sudo commands - biometric authentication available');\n  } else if (canEnable) {\n    console.log('\uD83D\uDCA1 Touch ID detected but not configured for sudo.');\n    console.log('   To enable Touch ID for administrator access:');\n    console.log('   1. Open Terminal');\n    console.log('   2. Run: sudo cp /etc/pam.d/sudo_local.template /etc/pam.d/sudo_local');\n    console.log('   3. Edit: sudo nano /etc/pam.d/sudo_local');\n    console.log('   4. Uncomment: auth sufficient pam_tid.so');\n    console.log('   5. Save and restart Terminal');\n    console.log('   This will enable Touch ID for all sudo operations.');\n  }\n}\n\n/**\n * Execute a command with elevated privileges using sudo-prompt with Touch ID support.\n */\nasync function executeWithElevatedPrivileges(\n  command: string,\n  args: string[]\n): Promise<{ success: boolean; output?: string }> {\n  try {\n    // Check if we already have elevated privileges\n    const alreadyElevated = await isElevated();\n\n    if (alreadyElevated) {\n      // We already have elevated privileges, run directly using secure execFile\n      const { stdout } = await execFileAsync(command, args);\n      return { success: true, output: stdout };\n    } else {\n      // Check if Touch ID is available\n      const touchIdAvailable = await isTouchIdAvailable();\n\n      // Need to request elevated privileges\n      const options = {\n        name: 'Anglesite DNS',\n        icns: process.platform === 'darwin' ? undefined : undefined, // Can be set to app icon path\n      };\n\n      // Log authentication method for debugging\n      if (touchIdAvailable) {\n        console.log('\uD83D\uDD10 Requesting administrator access (Touch ID available)');\n      } else {\n        console.log('\uD83D\uDD11 Requesting administrator access (password required)');\n      }\n\n      // Create a secure command string for sudo-prompt\n      // Unfortunately, sudo-prompt requires a string, but we can at least properly escape it\n      const escapedArgs = args.map((arg) => `'${arg.replace(/'/g, \"'\\\"'\\\"'\")}'`);\n      const fullCommand = `${command} ${escapedArgs.join(' ')}`;\n\n      return new Promise((resolve) => {\n        sudoPrompt.exec(fullCommand, options, (error?: Error, stdout?: string | Buffer) => {\n          if (error) {\n            // Check for specific Touch ID cancellation or failure\n            if (error.message.includes('User cancelled') || (error as Error & { code?: number }).code === -128) {\n              console.log('Authentication cancelled by user');\n            } else if (touchIdAvailable) {\n              console.log('Touch ID authentication failed, may have fallen back to password');\n            }\n            console.error('Failed to execute with elevated privileges:', error.message);\n            resolve({ success: false });\n          } else {\n            if (touchIdAvailable) {\n              console.log('\u2705 Authentication successful (Touch ID or password)');\n            } else {\n              console.log('\u2705 Authentication successful (password)');\n            }\n            resolve({ success: true, output: stdout?.toString() });\n          }\n        });\n      });\n    }\n  } catch (error: unknown) {\n    console.error(\n      'Failed to execute with elevated privileges:',\n      error instanceof Error ? error.message : String(error)\n    );\n    return { success: false };\n  }\n}\n\n/**\n * Add a host entry using hostile with native system authentication.\n */\nasync function addHostEntry(hostname: string, ipAddress: string = '127.0.0.1'): Promise<boolean> {\n  try {\n    const result = await executeWithElevatedPrivileges('npx', ['hostile', 'set', ipAddress, hostname]);\n\n    if (result.success) {\n      console.log(`\u2705 Added ${hostname} to hosts file`);\n      return true;\n    } else {\n      console.error(`Failed to add ${hostname} to hosts file`);\n      return false;\n    }\n  } catch (error) {\n    console.error(`Failed to add ${hostname} to hosts file:`, error);\n    return false;\n  }\n}\n\n/**\n * Remove a host entry using hostile with native system authentication.\n */\nasync function removeHostEntry(hostname: string): Promise<boolean> {\n  try {\n    const result = await executeWithElevatedPrivileges('npx', ['hostile', 'remove', hostname]);\n\n    if (result.success) {\n      console.log(`\u2705 Removed ${hostname} from hosts file`);\n      return true;\n    } else {\n      console.error(`Failed to remove ${hostname} from hosts file`);\n      return false;\n    }\n  } catch (error) {\n    console.error(`Failed to remove ${hostname} from hosts file:`, error);\n    return false;\n  }\n}\n\n/**\n * Check if a host entry exists using hostile library.\n */\nasync function hostEntryExists(hostname: string): Promise<boolean> {\n  return new Promise((resolve) => {\n    hostile.get(false, (err: Error | null, lines: unknown) => {\n      if (err) {\n        console.error(`Failed to check hosts file for ${hostname}:`, err);\n        resolve(false);\n        return;\n      }\n\n      // hostile.get returns array of [ip, hostname] tuples\n      const exists = (lines as Array<[string, string]>).some(([, host]) => {\n        return host === hostname;\n      });\n      resolve(exists);\n    });\n  });\n}\n\n/**\n * Set up initial Anglesite domain using hostile library.\n */\nasync function setupAnglesiteWildcardSection(): Promise<boolean> {\n  try {\n    // Add the main anglesite.test domain\n    const success = await addHostEntry('anglesite.test', '127.0.0.1');\n    if (success) {\n      console.log('Anglesite domain configured successfully');\n    }\n    return success;\n  } catch (error) {\n    console.error('Failed to setup Anglesite domain:', error);\n    return false;\n  }\n}\n\n/**\n * Add hostname to hosts file using hostile library.\n */\nasync function addToAnglesiteSection(hostname: string, ipAddress: string = '127.0.0.1'): Promise<boolean> {\n  try {\n    // Check if entry already exists\n    const exists = await hostEntryExists(hostname);\n    if (exists) {\n      console.log(`${hostname} already exists in hosts file`);\n      return true;\n    }\n\n    // Add the host entry\n    return await addHostEntry(hostname, ipAddress);\n  } catch (error) {\n    console.error('Failed to add to hosts file:', error);\n    return false;\n  }\n}\n\n/**\n * Update hosts file with new entries.\n */\nexport async function updateHostsFile(hostname: string, ipAddress: string = '127.0.0.1'): Promise<boolean> {\n  return addToAnglesiteSection(hostname, ipAddress);\n}\n\n/**\n * Clean up orphaned .test domain entries using hostile library\n * Removes domains that no longer have corresponding website folders.\n * @returns Promise resolving to true if cleanup succeeded or no changes needed, false if failed.\n */\nexport async function cleanupHostsFile(): Promise<boolean> {\n  try {\n    // Get list of actual website directories\n    let existingWebsites: string[];\n    try {\n      // Use DI-based website manager\n      const appContext = getGlobalContext();\n      const websiteManager = appContext.getService<IWebsiteManager>(ServiceKeys.WEBSITE_MANAGER);\n      existingWebsites = await websiteManager.listWebsites();\n    } catch (diError) {\n      console.warn('Failed to list websites via DI, falling back to legacy method:', diError);\n      // Fallback to legacy method if DI fails (for when DI is not initialized yet)\n      const { listWebsites } = await import('../utils/website-manager');\n      existingWebsites = await listWebsites();\n    }\n    console.log('Existing websites:', existingWebsites);\n\n    // Always include anglesite.test for the main docs\n    const websiteNames = Array.isArray(existingWebsites) ? existingWebsites : [];\n    const validDomains = new Set(['anglesite.test', ...websiteNames.map((name: string) => `${name}.test`)]);\n\n    // Get current hosts file entries\n    const hostEntries = await new Promise<Array<[string, string]>>((resolve, reject) => {\n      hostile.get(false, (err: Error | null, lines: unknown) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(lines as Array<[string, string]>);\n      });\n    });\n\n    // Find orphaned .test domains\n    const orphanedDomains: string[] = [];\n    for (const [ip, line] of hostEntries) {\n      const parts = line.split(/\\s+/);\n      if (parts.length >= 2) {\n        const hostname = parts[1];\n        if (hostname.endsWith('.test') && ip === '127.0.0.1') {\n          if (!validDomains.has(hostname)) {\n            orphanedDomains.push(hostname);\n          }\n        }\n      }\n    }\n\n    // Remove orphaned domains\n    let allSucceeded = true;\n    for (const domain of orphanedDomains) {\n      console.log(`Removing orphaned domain: ${domain}`);\n      const success = await removeHostEntry(domain);\n      if (!success) {\n        allSucceeded = false;\n      }\n    }\n\n    if (orphanedDomains.length === 0) {\n      console.log('Hosts file is already clean, no changes needed');\n    } else {\n      console.log(`Cleaned up ${orphanedDomains.length} orphaned domain(s)`);\n    }\n\n    return allSucceeded;\n  } catch (error) {\n    console.error('Failed to clean up hosts file:', error);\n    return false;\n  }\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "90976b676cf01d9d4cb59950c12380683fec8fc4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xp4bvnosa = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xp4bvnosa();
var __createBinding =
/* istanbul ignore next */
(cov_xp4bvnosa().s[0]++,
/* istanbul ignore next */
(cov_xp4bvnosa().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_xp4bvnosa().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_xp4bvnosa().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_xp4bvnosa().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[0]++;
  cov_xp4bvnosa().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[2][0]++;
    cov_xp4bvnosa().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_xp4bvnosa().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_xp4bvnosa().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[5][1]++,
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[3][0]++;
    cov_xp4bvnosa().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[1]++;
        cov_xp4bvnosa().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[3][1]++;
  }
  cov_xp4bvnosa().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_xp4bvnosa().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[2]++;
  cov_xp4bvnosa().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[7][0]++;
    cov_xp4bvnosa().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[7][1]++;
  }
  cov_xp4bvnosa().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_xp4bvnosa().s[11]++,
/* istanbul ignore next */
(cov_xp4bvnosa().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_xp4bvnosa().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_xp4bvnosa().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_xp4bvnosa().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[3]++;
  cov_xp4bvnosa().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_xp4bvnosa().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[4]++;
  cov_xp4bvnosa().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_xp4bvnosa().s[14]++,
/* istanbul ignore next */
(cov_xp4bvnosa().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_xp4bvnosa().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_xp4bvnosa().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[5]++;
  cov_xp4bvnosa().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_xp4bvnosa().f[6]++;
    cov_xp4bvnosa().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_xp4bvnosa().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[17]++, []);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_xp4bvnosa().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_xp4bvnosa().b[12][0]++;
          cov_xp4bvnosa().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_xp4bvnosa().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_xp4bvnosa().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_xp4bvnosa().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_xp4bvnosa().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_xp4bvnosa().f[8]++;
    cov_xp4bvnosa().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[13][0]++;
      cov_xp4bvnosa().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_xp4bvnosa().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[26]++, {});
    /* istanbul ignore next */
    cov_xp4bvnosa().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[15][0]++;
      cov_xp4bvnosa().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_xp4bvnosa().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_xp4bvnosa().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_xp4bvnosa().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_xp4bvnosa().b[16][0]++;
          cov_xp4bvnosa().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_xp4bvnosa().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_xp4bvnosa().b[15][1]++;
    }
    cov_xp4bvnosa().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[34]++;
    return result;
  };
}()));
var __importDefault =
/* istanbul ignore next */
(cov_xp4bvnosa().s[35]++,
/* istanbul ignore next */
(cov_xp4bvnosa().b[17][0]++, this) &&
/* istanbul ignore next */
(cov_xp4bvnosa().b[17][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_xp4bvnosa().b[17][2]++, function (mod) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[9]++;
  cov_xp4bvnosa().s[36]++;
  return /* istanbul ignore next */(cov_xp4bvnosa().b[19][0]++, mod) &&
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[19][1]++, mod.__esModule) ?
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[18][0]++, mod) :
  /* istanbul ignore next */
  (cov_xp4bvnosa().b[18][1]++, {
    "default": mod
  });
}));
/* istanbul ignore next */
cov_xp4bvnosa().s[37]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xp4bvnosa().s[38]++;
exports.addLocalDnsResolution = addLocalDnsResolution;
/* istanbul ignore next */
cov_xp4bvnosa().s[39]++;
exports.checkAndSuggestTouchIdSetup = checkAndSuggestTouchIdSetup;
/* istanbul ignore next */
cov_xp4bvnosa().s[40]++;
exports.updateHostsFile = updateHostsFile;
/* istanbul ignore next */
cov_xp4bvnosa().s[41]++;
exports.cleanupHostsFile = cleanupHostsFile;
/**
 * @file DNS and hosts file management for Anglesite development domains.
 *
 * This module handles:
 * - Adding .test domains to /etc/hosts for local DNS resolution
 * - Managing the Anglesite section in the hosts file
 * - Cleaning up orphaned domain entries
 * - Cross-platform hosts file modifications using hostile library.
 */
const electron_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[42]++, require("electron"));
const child_process_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[43]++, require("child_process"));
const util_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[44]++, require("util"));
// Import for DI access
const service_registry_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[45]++, require("../core/service-registry"));
const container_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[46]++, require("../core/container"));
const hostile =
/* istanbul ignore next */
(cov_xp4bvnosa().s[47]++, __importStar(require("hostile")));
const sudo_prompt_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[48]++, __importDefault(require("sudo-prompt")));
const native_is_elevated_1 =
/* istanbul ignore next */
(cov_xp4bvnosa().s[49]++, __importDefault(require("native-is-elevated")));
const execFileAsync =
/* istanbul ignore next */
(cov_xp4bvnosa().s[50]++, (0, util_1.promisify)(child_process_1.execFile));
/**
 * Add local DNS resolution for a hostname with biometric authentication.
 *
 * Automatically configures /etc/hosts to resolve the specified hostname to 127.0.0.1
 * for local development. Uses Touch ID when available for secure privilege escalation.
 *
 * Features:
 * - First-time setup creates Anglesite section with user confirmation dialog
 * - Subsequent additions are silent and automatic
 * - Touch ID biometric authentication when available
 * - Fallback to password authentication
 * - Comprehensive error handling with user feedback.
 * @param hostname The .test hostname to add (e.g., "mysite.test").
 * @returns Promise that resolves when DNS resolution is configured.
 * @example
 * ```typescript
 * await addLocalDnsResolution('my-website.test');
 * // Now https://my-website.test:8080 resolves to localhost
 * ```
 */
async function addLocalDnsResolution(hostname) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[10]++;
  // Check if auto-configuration is enabled
  const autoConfigEnabled =
  /* istanbul ignore next */
  (cov_xp4bvnosa().s[51]++, true); // TODO: Get from settings
  /* istanbul ignore next */
  cov_xp4bvnosa().s[52]++;
  if (autoConfigEnabled) {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[20][0]++;
    // Check if Anglesite section exists
    const anglesiteSectionExists =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[53]++, await checkAnglesiteSection());
    /* istanbul ignore next */
    cov_xp4bvnosa().s[54]++;
    if (!anglesiteSectionExists) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[21][0]++;
      // Set up the wildcard section for the first time
      const success =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[55]++, await setupAnglesiteWildcardSection());
      /* istanbul ignore next */
      cov_xp4bvnosa().s[56]++;
      if (success) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[22][0]++;
        cov_xp4bvnosa().s[57]++;
        electron_1.dialog.showMessageBox({
          type: 'info',
          title: 'DNS Configuration Complete',
          message: 'Development domains configured successfully!',
          detail: `Your site is now available at:

• https://${hostname}:8080
• https://localhost:8080

All future websites will automatically work at:
• https://[website-name].test:8080`,
          buttons: ['OK']
        });
        /* istanbul ignore next */
        cov_xp4bvnosa().s[58]++;
        return;
      } else {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[22][1]++;
        cov_xp4bvnosa().s[59]++;
        electron_1.dialog.showMessageBox({
          type: 'warning',
          title: 'Setup Failed',
          message: 'Could not enable automatic domain configuration',
          detail: `To access your site at https://${hostname}:8080, please add this line to /etc/hosts:\n\n127.0.0.1\t${hostname}`,
          buttons: ['OK']
        });
      }
    } else {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[21][1]++;
      cov_xp4bvnosa().s[60]++;
      // Anglesite section exists - add domain silently
      console.log(`Adding ${hostname} to existing Anglesite section…`);
      const success =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[61]++, await addToAnglesiteSection(hostname));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[62]++;
      if (success) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[23][0]++;
        cov_xp4bvnosa().s[63]++;
        console.log(`✅ DNS resolution for ${hostname} configured automatically`);
      } else {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[23][1]++;
        cov_xp4bvnosa().s[64]++;
        console.error(`❌ Failed to add ${hostname} to hosts file`);
      }
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[65]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[20][1]++;
  }
  cov_xp4bvnosa().s[66]++;
  try {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[67]++;
    // This section is handled by the auto-configuration above
    // No need to check for wildcard entries with hostile
    // Inform user about DNS setup
    console.log(`\n========================================`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[68]++;
    console.log(`📌 Development Server Access:`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[69]++;
    console.log(`========================================`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[70]++;
    console.log(`✅ Available at: https://localhost:8080`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[71]++;
    console.log(`✨ Custom domain: https://${hostname}:8080`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[72]++;
    console.log(`1. Enable auto-configuration in Settings`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[73]++;
    console.log(`2. Or manually add: 127.0.0.1\t*.test to /etc/hosts`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[74]++;
    console.log(`========================================\n`);
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[75]++;
    console.warn('Could not check DNS resolution:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[76]++;
    console.log(`\nAccess your site at: https://localhost:8080`);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[77]++;
    console.log(`Or set up custom domain in Settings`);
  }
}
/**
 * Check if anglesite.test domain exists in hosts file.
 */
async function checkAnglesiteSection() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[11]++;
  cov_xp4bvnosa().s[78]++;
  try {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[79]++;
    return await hostEntryExists('anglesite.test');
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[80]++;
    console.error('Error checking hosts file:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[81]++;
    return false;
  }
}
/**
 * Check if Touch ID is available and configured for sudo on macOS.
 */
async function isTouchIdAvailable() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[12]++;
  cov_xp4bvnosa().s[82]++;
  if (process.platform !== 'darwin') {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[24][0]++;
    cov_xp4bvnosa().s[83]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[24][1]++;
  }
  cov_xp4bvnosa().s[84]++;
  try {
    // Check if pam_tid.so is configured in sudo PAM configuration
    let touchIdConfigured =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[85]++, false);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[86]++;
    try {
      const {
        stdout
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[87]++, await execFileAsync('grep', ['-c', 'pam_tid.so', '/etc/pam.d/sudo']));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[88]++;
      touchIdConfigured = parseInt(stdout.trim()) > 0;
    } catch {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[89]++;
      // File not found or no matches - Touch ID not configured
      touchIdConfigured = false;
    }
    // Check if Touch ID hardware is available
    let touchIdHardware =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[90]++, false);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[91]++;
    try {
      const {
        stdout: biometryCheck
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[92]++, await execFileAsync('bioutil', ['-r']));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[93]++;
      touchIdHardware = biometryCheck.includes('Touch ID');
    } catch {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[94]++;
      // bioutil not available or no Touch ID hardware
      touchIdHardware = false;
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[95]++;
    return /* istanbul ignore next */(cov_xp4bvnosa().b[25][0]++, touchIdConfigured) &&
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[25][1]++, touchIdHardware);
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[96]++;
    console.debug('Could not check Touch ID availability:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[97]++;
    return false;
  }
}
/**
 * Check if Touch ID hardware is available but not configured for sudo.
 */
async function canEnableTouchId() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[13]++;
  cov_xp4bvnosa().s[98]++;
  if (process.platform !== 'darwin') {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[26][0]++;
    cov_xp4bvnosa().s[99]++;
    return false;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[26][1]++;
  }
  cov_xp4bvnosa().s[100]++;
  try {
    // Check if Touch ID hardware is available
    let touchIdHardware =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[101]++, false);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[102]++;
    try {
      const {
        stdout: biometryCheck
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[103]++, await execFileAsync('bioutil', ['-r']));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[104]++;
      touchIdHardware = biometryCheck.includes('Touch ID');
    } catch {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[105]++;
      // bioutil not available or no Touch ID hardware
      touchIdHardware = false;
    }
    // Check if pam_tid.so is NOT configured in sudo PAM configuration
    let touchIdConfigured =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[106]++, false);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[107]++;
    try {
      const {
        stdout
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[108]++, await execFileAsync('grep', ['-c', 'pam_tid.so', '/etc/pam.d/sudo']));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[109]++;
      touchIdConfigured = parseInt(stdout.trim()) > 0;
    } catch {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[110]++;
      // File not found or no matches - Touch ID not configured
      touchIdConfigured = false;
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[111]++;
    return /* istanbul ignore next */(cov_xp4bvnosa().b[27][0]++, touchIdHardware) &&
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[27][1]++, !touchIdConfigured);
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[112]++;
    console.debug('Could not check Touch ID configuration possibility:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[113]++;
    return false;
  }
}
/**
 * Show Touch ID setup information to user if available but not configured.
 */
async function checkAndSuggestTouchIdSetup() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[14]++;
  cov_xp4bvnosa().s[114]++;
  if (process.platform !== 'darwin') {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[28][0]++;
    cov_xp4bvnosa().s[115]++;
    return;
  } else
  /* istanbul ignore next */
  {
    cov_xp4bvnosa().b[28][1]++;
  }
  const touchIdAvailable =
  /* istanbul ignore next */
  (cov_xp4bvnosa().s[116]++, await isTouchIdAvailable());
  const canEnable =
  /* istanbul ignore next */
  (cov_xp4bvnosa().s[117]++, await canEnableTouchId());
  /* istanbul ignore next */
  cov_xp4bvnosa().s[118]++;
  if (touchIdAvailable) {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[29][0]++;
    cov_xp4bvnosa().s[119]++;
    console.log('🔐 Touch ID is configured for sudo commands - biometric authentication available');
  } else {
    /* istanbul ignore next */
    cov_xp4bvnosa().b[29][1]++;
    cov_xp4bvnosa().s[120]++;
    if (canEnable) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[30][0]++;
      cov_xp4bvnosa().s[121]++;
      console.log('💡 Touch ID detected but not configured for sudo.');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[122]++;
      console.log('   To enable Touch ID for administrator access:');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[123]++;
      console.log('   1. Open Terminal');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[124]++;
      console.log('   2. Run: sudo cp /etc/pam.d/sudo_local.template /etc/pam.d/sudo_local');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[125]++;
      console.log('   3. Edit: sudo nano /etc/pam.d/sudo_local');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[126]++;
      console.log('   4. Uncomment: auth sufficient pam_tid.so');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[127]++;
      console.log('   5. Save and restart Terminal');
      /* istanbul ignore next */
      cov_xp4bvnosa().s[128]++;
      console.log('   This will enable Touch ID for all sudo operations.');
    } else
    /* istanbul ignore next */
    {
      cov_xp4bvnosa().b[30][1]++;
    }
  }
}
/**
 * Execute a command with elevated privileges using sudo-prompt with Touch ID support.
 */
async function executeWithElevatedPrivileges(command, args) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[15]++;
  cov_xp4bvnosa().s[129]++;
  try {
    // Check if we already have elevated privileges
    const alreadyElevated =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[130]++, await (0, native_is_elevated_1.default)());
    /* istanbul ignore next */
    cov_xp4bvnosa().s[131]++;
    if (alreadyElevated) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[31][0]++;
      // We already have elevated privileges, run directly using secure execFile
      const {
        stdout
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[132]++, await execFileAsync(command, args));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[133]++;
      return {
        success: true,
        output: stdout
      };
    } else {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[31][1]++;
      // Check if Touch ID is available
      const touchIdAvailable =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[134]++, await isTouchIdAvailable());
      // Need to request elevated privileges
      const options =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[135]++, {
        name: 'Anglesite DNS',
        icns: process.platform === 'darwin' ?
        /* istanbul ignore next */
        (cov_xp4bvnosa().b[32][0]++, undefined) :
        /* istanbul ignore next */
        (cov_xp4bvnosa().b[32][1]++, undefined) // Can be set to app icon path
      });
      // Log authentication method for debugging
      /* istanbul ignore next */
      cov_xp4bvnosa().s[136]++;
      if (touchIdAvailable) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[33][0]++;
        cov_xp4bvnosa().s[137]++;
        console.log('🔐 Requesting administrator access (Touch ID available)');
      } else {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[33][1]++;
        cov_xp4bvnosa().s[138]++;
        console.log('🔑 Requesting administrator access (password required)');
      }
      // Create a secure command string for sudo-prompt
      // Unfortunately, sudo-prompt requires a string, but we can at least properly escape it
      const escapedArgs =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[139]++, args.map(arg => {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[16]++;
        cov_xp4bvnosa().s[140]++;
        return `'${arg.replace(/'/g, "'\"'\"'")}'`;
      }));
      const fullCommand =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[141]++, `${command} ${escapedArgs.join(' ')}`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[142]++;
      return new Promise(resolve => {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[17]++;
        cov_xp4bvnosa().s[143]++;
        sudo_prompt_1.default.exec(fullCommand, options, (error, stdout) => {
          /* istanbul ignore next */
          cov_xp4bvnosa().f[18]++;
          cov_xp4bvnosa().s[144]++;
          if (error) {
            /* istanbul ignore next */
            cov_xp4bvnosa().b[34][0]++;
            cov_xp4bvnosa().s[145]++;
            // Check for specific Touch ID cancellation or failure
            if (
            /* istanbul ignore next */
            (cov_xp4bvnosa().b[36][0]++, error.message.includes('User cancelled')) ||
            /* istanbul ignore next */
            (cov_xp4bvnosa().b[36][1]++, error.code === -128)) {
              /* istanbul ignore next */
              cov_xp4bvnosa().b[35][0]++;
              cov_xp4bvnosa().s[146]++;
              console.log('Authentication cancelled by user');
            } else {
              /* istanbul ignore next */
              cov_xp4bvnosa().b[35][1]++;
              cov_xp4bvnosa().s[147]++;
              if (touchIdAvailable) {
                /* istanbul ignore next */
                cov_xp4bvnosa().b[37][0]++;
                cov_xp4bvnosa().s[148]++;
                console.log('Touch ID authentication failed, may have fallen back to password');
              } else
              /* istanbul ignore next */
              {
                cov_xp4bvnosa().b[37][1]++;
              }
            }
            /* istanbul ignore next */
            cov_xp4bvnosa().s[149]++;
            console.error('Failed to execute with elevated privileges:', error.message);
            /* istanbul ignore next */
            cov_xp4bvnosa().s[150]++;
            resolve({
              success: false
            });
          } else {
            /* istanbul ignore next */
            cov_xp4bvnosa().b[34][1]++;
            cov_xp4bvnosa().s[151]++;
            if (touchIdAvailable) {
              /* istanbul ignore next */
              cov_xp4bvnosa().b[38][0]++;
              cov_xp4bvnosa().s[152]++;
              console.log('✅ Authentication successful (Touch ID or password)');
            } else {
              /* istanbul ignore next */
              cov_xp4bvnosa().b[38][1]++;
              cov_xp4bvnosa().s[153]++;
              console.log('✅ Authentication successful (password)');
            }
            /* istanbul ignore next */
            cov_xp4bvnosa().s[154]++;
            resolve({
              success: true,
              output: stdout?.toString()
            });
          }
        });
      });
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[155]++;
    console.error('Failed to execute with elevated privileges:', error instanceof Error ?
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[39][0]++, error.message) :
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[39][1]++, String(error)));
    /* istanbul ignore next */
    cov_xp4bvnosa().s[156]++;
    return {
      success: false
    };
  }
}
/**
 * Add a host entry using hostile with native system authentication.
 */
async function addHostEntry(hostname, ipAddress =
/* istanbul ignore next */
(cov_xp4bvnosa().b[40][0]++, '127.0.0.1')) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[19]++;
  cov_xp4bvnosa().s[157]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[158]++, await executeWithElevatedPrivileges('npx', ['hostile', 'set', ipAddress, hostname]));
    /* istanbul ignore next */
    cov_xp4bvnosa().s[159]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[41][0]++;
      cov_xp4bvnosa().s[160]++;
      console.log(`✅ Added ${hostname} to hosts file`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[161]++;
      return true;
    } else {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[41][1]++;
      cov_xp4bvnosa().s[162]++;
      console.error(`Failed to add ${hostname} to hosts file`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[163]++;
      return false;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[164]++;
    console.error(`Failed to add ${hostname} to hosts file:`, error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[165]++;
    return false;
  }
}
/**
 * Remove a host entry using hostile with native system authentication.
 */
async function removeHostEntry(hostname) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[20]++;
  cov_xp4bvnosa().s[166]++;
  try {
    const result =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[167]++, await executeWithElevatedPrivileges('npx', ['hostile', 'remove', hostname]));
    /* istanbul ignore next */
    cov_xp4bvnosa().s[168]++;
    if (result.success) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[42][0]++;
      cov_xp4bvnosa().s[169]++;
      console.log(`✅ Removed ${hostname} from hosts file`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[170]++;
      return true;
    } else {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[42][1]++;
      cov_xp4bvnosa().s[171]++;
      console.error(`Failed to remove ${hostname} from hosts file`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[172]++;
      return false;
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[173]++;
    console.error(`Failed to remove ${hostname} from hosts file:`, error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[174]++;
    return false;
  }
}
/**
 * Check if a host entry exists using hostile library.
 */
async function hostEntryExists(hostname) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[21]++;
  cov_xp4bvnosa().s[175]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_xp4bvnosa().f[22]++;
    cov_xp4bvnosa().s[176]++;
    hostile.get(false, (err, lines) => {
      /* istanbul ignore next */
      cov_xp4bvnosa().f[23]++;
      cov_xp4bvnosa().s[177]++;
      if (err) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[43][0]++;
        cov_xp4bvnosa().s[178]++;
        console.error(`Failed to check hosts file for ${hostname}:`, err);
        /* istanbul ignore next */
        cov_xp4bvnosa().s[179]++;
        resolve(false);
        /* istanbul ignore next */
        cov_xp4bvnosa().s[180]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_xp4bvnosa().b[43][1]++;
      }
      // hostile.get returns array of [ip, hostname] tuples
      const exists =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[181]++, lines.some(([, host]) => {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[24]++;
        cov_xp4bvnosa().s[182]++;
        return host === hostname;
      }));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[183]++;
      resolve(exists);
    });
  });
}
/**
 * Set up initial Anglesite domain using hostile library.
 */
async function setupAnglesiteWildcardSection() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[25]++;
  cov_xp4bvnosa().s[184]++;
  try {
    // Add the main anglesite.test domain
    const success =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[185]++, await addHostEntry('anglesite.test', '127.0.0.1'));
    /* istanbul ignore next */
    cov_xp4bvnosa().s[186]++;
    if (success) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[44][0]++;
      cov_xp4bvnosa().s[187]++;
      console.log('Anglesite domain configured successfully');
    } else
    /* istanbul ignore next */
    {
      cov_xp4bvnosa().b[44][1]++;
    }
    cov_xp4bvnosa().s[188]++;
    return success;
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[189]++;
    console.error('Failed to setup Anglesite domain:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[190]++;
    return false;
  }
}
/**
 * Add hostname to hosts file using hostile library.
 */
async function addToAnglesiteSection(hostname, ipAddress =
/* istanbul ignore next */
(cov_xp4bvnosa().b[45][0]++, '127.0.0.1')) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[26]++;
  cov_xp4bvnosa().s[191]++;
  try {
    // Check if entry already exists
    const exists =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[192]++, await hostEntryExists(hostname));
    /* istanbul ignore next */
    cov_xp4bvnosa().s[193]++;
    if (exists) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[46][0]++;
      cov_xp4bvnosa().s[194]++;
      console.log(`${hostname} already exists in hosts file`);
      /* istanbul ignore next */
      cov_xp4bvnosa().s[195]++;
      return true;
    } else
    /* istanbul ignore next */
    {
      cov_xp4bvnosa().b[46][1]++;
    }
    // Add the host entry
    cov_xp4bvnosa().s[196]++;
    return await addHostEntry(hostname, ipAddress);
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[197]++;
    console.error('Failed to add to hosts file:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[198]++;
    return false;
  }
}
/**
 * Update hosts file with new entries.
 */
async function updateHostsFile(hostname, ipAddress =
/* istanbul ignore next */
(cov_xp4bvnosa().b[47][0]++, '127.0.0.1')) {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[27]++;
  cov_xp4bvnosa().s[199]++;
  return addToAnglesiteSection(hostname, ipAddress);
}
/**
 * Clean up orphaned .test domain entries using hostile library
 * Removes domains that no longer have corresponding website folders.
 * @returns Promise resolving to true if cleanup succeeded or no changes needed, false if failed.
 */
async function cleanupHostsFile() {
  /* istanbul ignore next */
  cov_xp4bvnosa().f[28]++;
  cov_xp4bvnosa().s[200]++;
  try {
    // Get list of actual website directories
    let existingWebsites;
    /* istanbul ignore next */
    cov_xp4bvnosa().s[201]++;
    try {
      // Use DI-based website manager
      const appContext =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[202]++, (0, service_registry_1.getGlobalContext)());
      const websiteManager =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[203]++, appContext.getService(container_1.ServiceKeys.WEBSITE_MANAGER));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[204]++;
      existingWebsites = await websiteManager.listWebsites();
    } catch (diError) {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[205]++;
      console.warn('Failed to list websites via DI, falling back to legacy method:', diError);
      // Fallback to legacy method if DI fails (for when DI is not initialized yet)
      const {
        listWebsites
      } =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[206]++, await Promise.resolve().then(() => {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[29]++;
        cov_xp4bvnosa().s[207]++;
        return __importStar(require('../utils/website-manager'));
      }));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[208]++;
      existingWebsites = await listWebsites();
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[209]++;
    console.log('Existing websites:', existingWebsites);
    // Always include anglesite.test for the main docs
    const websiteNames =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[210]++, Array.isArray(existingWebsites) ?
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[48][0]++, existingWebsites) :
    /* istanbul ignore next */
    (cov_xp4bvnosa().b[48][1]++, []));
    const validDomains =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[211]++, new Set(['anglesite.test', ...websiteNames.map(name => {
      /* istanbul ignore next */
      cov_xp4bvnosa().f[30]++;
      cov_xp4bvnosa().s[212]++;
      return `${name}.test`;
    })]));
    // Get current hosts file entries
    const hostEntries =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[213]++, await new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_xp4bvnosa().f[31]++;
      cov_xp4bvnosa().s[214]++;
      hostile.get(false, (err, lines) => {
        /* istanbul ignore next */
        cov_xp4bvnosa().f[32]++;
        cov_xp4bvnosa().s[215]++;
        if (err) {
          /* istanbul ignore next */
          cov_xp4bvnosa().b[49][0]++;
          cov_xp4bvnosa().s[216]++;
          reject(err);
          /* istanbul ignore next */
          cov_xp4bvnosa().s[217]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_xp4bvnosa().b[49][1]++;
        }
        cov_xp4bvnosa().s[218]++;
        resolve(lines);
      });
    }));
    // Find orphaned .test domains
    const orphanedDomains =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[219]++, []);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[220]++;
    for (const [ip, line] of hostEntries) {
      const parts =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[221]++, line.split(/\s+/));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[222]++;
      if (parts.length >= 2) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[50][0]++;
        const hostname =
        /* istanbul ignore next */
        (cov_xp4bvnosa().s[223]++, parts[1]);
        /* istanbul ignore next */
        cov_xp4bvnosa().s[224]++;
        if (
        /* istanbul ignore next */
        (cov_xp4bvnosa().b[52][0]++, hostname.endsWith('.test')) &&
        /* istanbul ignore next */
        (cov_xp4bvnosa().b[52][1]++, ip === '127.0.0.1')) {
          /* istanbul ignore next */
          cov_xp4bvnosa().b[51][0]++;
          cov_xp4bvnosa().s[225]++;
          if (!validDomains.has(hostname)) {
            /* istanbul ignore next */
            cov_xp4bvnosa().b[53][0]++;
            cov_xp4bvnosa().s[226]++;
            orphanedDomains.push(hostname);
          } else
          /* istanbul ignore next */
          {
            cov_xp4bvnosa().b[53][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_xp4bvnosa().b[51][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_xp4bvnosa().b[50][1]++;
      }
    }
    // Remove orphaned domains
    let allSucceeded =
    /* istanbul ignore next */
    (cov_xp4bvnosa().s[227]++, true);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[228]++;
    for (const domain of orphanedDomains) {
      /* istanbul ignore next */
      cov_xp4bvnosa().s[229]++;
      console.log(`Removing orphaned domain: ${domain}`);
      const success =
      /* istanbul ignore next */
      (cov_xp4bvnosa().s[230]++, await removeHostEntry(domain));
      /* istanbul ignore next */
      cov_xp4bvnosa().s[231]++;
      if (!success) {
        /* istanbul ignore next */
        cov_xp4bvnosa().b[54][0]++;
        cov_xp4bvnosa().s[232]++;
        allSucceeded = false;
      } else
      /* istanbul ignore next */
      {
        cov_xp4bvnosa().b[54][1]++;
      }
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[233]++;
    if (orphanedDomains.length === 0) {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[55][0]++;
      cov_xp4bvnosa().s[234]++;
      console.log('Hosts file is already clean, no changes needed');
    } else {
      /* istanbul ignore next */
      cov_xp4bvnosa().b[55][1]++;
      cov_xp4bvnosa().s[235]++;
      console.log(`Cleaned up ${orphanedDomains.length} orphaned domain(s)`);
    }
    /* istanbul ignore next */
    cov_xp4bvnosa().s[236]++;
    return allSucceeded;
  } catch (error) {
    /* istanbul ignore next */
    cov_xp4bvnosa().s[237]++;
    console.error('Failed to clean up hosts file:', error);
    /* istanbul ignore next */
    cov_xp4bvnosa().s[238]++;
    return false;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,