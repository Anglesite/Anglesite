{"version":3,"names":["electron_1","cov_i62zfwyug","s","require","multi_window_manager_1","menu_1","handlers_1","first_launch_1","hosts_manager_1","theme_manager_1","service_registry_1","container_1","app","setName","mainWindow","exports","store","initializeApp","f","initializeGlobalContext","appContext","getGlobalContext","getService","ServiceKeys","STORE","get","b","handleFirstLaunch","menu","createApplicationMenu","Menu","setApplicationMenu","setupIpcMainListeners","themeManager","initialize","cleanupHostsFile","checkAndSuggestTouchIdSetup","setupServerManagerEventListeners","Promise","resolve","then","__importStar","restoreWindowStates","whenReady","on","process","platform","quit","forceSave","closeAllWindows","shutdownGlobalContext","event","_webContents","url","_error","_certificate","callback","includes","preventDefault","commandLine","appendSwitch","env","NODE_ENV","removeAllListeners"],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/main.ts"],"sourcesContent":["/**\n * @file Main process of the Electron application (Refactored)\n * @see {@link https://www.electronjs.org/docs/latest/tutorial/quick-start}\n */\nimport { app, Menu, BrowserWindow } from 'electron';\n// Import modular components\nimport { closeAllWindows, restoreWindowStates } from './ui/multi-window-manager';\nimport { createApplicationMenu } from './ui/menu';\nimport { setupIpcMainListeners } from './ipc/handlers';\n// Store class removed - now using DI with IStore interface\nimport { handleFirstLaunch } from './utils/first-launch';\nimport { cleanupHostsFile, checkAndSuggestTouchIdSetup } from './dns/hosts-manager';\nimport { themeManager } from './ui/theme-manager';\nimport { initializeGlobalContext, shutdownGlobalContext, getGlobalContext } from './core/service-registry';\nimport { IStore } from './core/interfaces';\nimport { ServiceKeys } from './core/container';\n\n// Set application name as early as possible\napp.setName('Anglesite');\n\n/**\n * Main window instance\n */\nlet mainWindow: BrowserWindow | null = null;\n\n/**\n * App settings store\n */\nlet store: IStore;\n\n/**\n * Initialize the application.\n */\nasync function initializeApp(): Promise<void> {\n  // Initialize DI container and global application context first\n  await initializeGlobalContext();\n\n  // Initialize app settings store from DI container\n  const appContext = getGlobalContext();\n  store = appContext.getService<IStore>(ServiceKeys.STORE);\n\n  // Check if first launch is needed\n  if (!store.get('firstLaunchCompleted')) {\n    await handleFirstLaunch(store);\n  }\n\n  // Note: Help window is only created when explicitly requested by the user\n\n  // Set up the application menu\n  const menu = createApplicationMenu();\n  Menu.setApplicationMenu(menu);\n\n  // Setup IPC handlers\n  setupIpcMainListeners();\n\n  // Initialize theme manager\n  themeManager.initialize();\n\n  // Clean up hosts file to match existing websites\n  await cleanupHostsFile();\n\n  // Check Touch ID setup and provide helpful information\n  await checkAndSuggestTouchIdSetup();\n\n  // Initialize server manager event listeners now that DI is ready\n  const { setupServerManagerEventListeners } = await import('./ui/multi-window-manager');\n  setupServerManagerEventListeners();\n\n  // Restore previously open website windows\n  await restoreWindowStates();\n\n  // Note: Help window is now only created when explicitly requested by the user\n}\n\n/**\n * App event handlers\n */\napp.whenReady().then(() => {\n  initializeApp();\n\n  app.on('activate', () => {\n    // On macOS it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (mainWindow === null) {\n      initializeApp();\n    }\n  });\n});\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\n// Clean up resources when the app is about to quit\napp.on('before-quit', async () => {\n  // Force save any pending settings changes\n  if (store) {\n    await store.forceSave();\n  }\n  await closeAllWindows();\n\n  // Shutdown DI container and services\n  await shutdownGlobalContext();\n});\n\n// Handle certificate errors for development\napp.on('certificate-error', (event, _webContents, url, _error, _certificate, callback) => {\n  // Allow self-signed certificates for local development\n  if (url.includes('localhost') || url.includes('.test')) {\n    event.preventDefault();\n    callback(true);\n  } else {\n    callback(false);\n  }\n});\n\n// Disable web security for development (allows self-signed certs)\napp.commandLine.appendSwitch('--ignore-certificate-errors-spki-list');\napp.commandLine.appendSwitch('--ignore-certificate-errors');\napp.commandLine.appendSwitch('--ignore-ssl-errors');\n\n// Suppress Node.js deprecation warnings in development\nif (process.env.NODE_ENV !== 'production') {\n  process.removeAllListeners('warning');\n}\n\nexport { mainWindow };\n"],"mappingsaAAA,GAAAC,CAAA,QAAAC,OAAA;AACA;AACA,MAAAC,sBAAA;AAAA;AAAA,CAAAH,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAE,MAAA;AAAA;AAAA,CAAAJ,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAG,UAAA;AAAA;AAAA,CAAAL,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA;AACA,MAAAI,cAAA;AAAA;AAAA,CAAAN,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAK,eAAA;AAAA;AAAA,CAAAP,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAM,eAAA;AAAA;AAAA,CAAAR,aAAA,GAAAC,CAAA,QAAAC,OAAA;AACA,MAAAO,kBAAA;AAAA;AAAA,CAAAT,aAAA,GAAAC,CAAA,QAAAC,OAAA;AAEA,MAAAQ,WAAA;AAAA;AAAA,CAAAV,aAAA,GAAAC,CAAA,QAAAC,OAAA;AAEA;AAAA;AAAAF,aAAA,GAAAC,CAAA;AACAF,UAAA,CAAAY,GAAG,CAACC,OAAO,CAAC,WAAW,CAAC;AAExB;;;AAGA,IAAIC,UAAU;AAAA;AAAA,CAAAb,aAAA,GAAAC,CAAA,QAAyB,IAAI;AAAC;AAAAD,aAAA,GAAAC,CAAA;AA4GnCa,OAAA,CAAAD,UAAA,GAAAA,UAAA;AA1GT;;;AAGA,IAAIE,KAAa;AAEjB;;;AAGA,eAAeC,aAAaA,CAAA;EAAA;EAAAhB,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAC,CAAA;EAC1B;EACA,MAAM,IAAAQ,kBAAA,CAAAS,uBAAuB,GAAE;EAE/B;EACA,MAAMC,UAAU;EAAA;EAAA,CAAAnB,aAAA,GAAAC,CAAA,QAAG,IAAAQ,kBAAA,CAAAW,gBAAgB,GAAE;EAAC;EAAApB,aAAA,GAAAC,CAAA;EACtCc,KAAK,GAAGI,UAAU,CAACE,UAAU,CAASX,WAAA,CAAAY,WAAW,CAACC,KAAK,CAAC;EAExD;EAAA;EAAAvB,aAAA,GAAAC,CAAA;EACA,IAAI,CAACc,KAAK,CAACS,GAAG,CAAC,sBAAsB,CAAC,EAAE;IAAA;IAAAxB,aAAA,GAAAyB,CAAA;IAAAzB,aAAA,GAAAC,CAAA;IACtC,MAAM,IAAAK,cAAA,CAAAoB,iBAAiB,EAACX,KAAK,CAAC;EAChC,CAAC;EAAA;EAAA;IAAAf,aAAA,GAAAyB,CAAA;EAAA;EAED;EAEA;EACA,MAAME,IAAI;EAAA;EAAA,CAAA3B,aAAA,GAAAC,CAAA,QAAG,IAAAG,MAAA,CAAAwB,qBAAqB,GAAE;EAAC;EAAA5B,aAAA,GAAAC,CAAA;EACrCF,UAAA,CAAA8B,IAAI,CAACC,kBAAkB,CAACH,IAAI,CAAC;EAE7B;EAAA;EAAA3B,aAAA,GAAAC,CAAA;EACA,IAAAI,UAAA,CAAA0B,qBAAqB,GAAE;EAEvB;EAAA;EAAA/B,aAAA,GAAAC,CAAA;EACAO,eAAA,CAAAwB,YAAY,CAACC,UAAU,EAAE;EAEzB;EAAA;EAAAjC,aAAA,GAAAC,CAAA;EACA,MAAM,IAAAM,eAAA,CAAA2B,gBAAgB,GAAE;EAExB;EAAA;EAAAlC,aAAA,GAAAC,CAAA;EACA,MAAM,IAAAM,eAAA,CAAA4B,2BAA2B,GAAE;EAEnC;EACA,MAAM;IAAEC;EAAgC,CAAE;EAAA;EAAA,CAAApC,aAAA,GAAAC,CAAA,QAAG,MAAAoC,OAAA,CAAAC,OAAA,GAAAC,IAAA;IAAA;IAAAvC,aAAA,GAAAiB,CAAA;IAAAjB,aAAA,GAAAC,CAAA;IAAA,OAAAuC,YAAA,CAAAtC,OAAA,CAAa,2BAA2B;EAAA,EAAC;EAAC;EAAAF,aAAA,GAAAC,CAAA;EACvFmC,gCAAgC,EAAE;EAElC;EAAA;EAAApC,aAAA,GAAAC,CAAA;EACA,MAAM,IAAAE,sBAAA,CAAAsC,mBAAmB,GAAE;EAE3B;AACF;AAEA;;;AAAA;AAAAzC,aAAA,GAAAC,CAAA;AAGAF,UAAA,CAAAY,GAAG,CAAC+B,SAAS,EAAE,CAACH,IAAI,CAAC,MAAK;EAAA;EAAAvC,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAC,CAAA;EACxBe,aAAa,EAAE;EAAC;EAAAhB,aAAA,GAAAC,CAAA;EAEhBF,UAAA,CAAAY,GAAG,CAACgC,EAAE,CAAC,UAAU,EAAE,MAAK;IAAA;IAAA3C,aAAA,GAAAiB,CAAA;IAAAjB,aAAA,GAAAC,CAAA;IACtB;IACA;IACA,IAAIY,UAAU,KAAK,IAAI,EAAE;MAAA;MAAAb,aAAA,GAAAyB,CAAA;MAAAzB,aAAA,GAAAC,CAAA;MACvBe,aAAa,EAAE;IACjB,CAAC;IAAA;IAAA;MAAAhB,aAAA,GAAAyB,CAAA;IAAA;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF;AACA;AACA;AAAA;AAAAzB,aAAA,GAAAC,CAAA;AACAF,UAAA,CAAAY,GAAG,CAACgC,EAAE,CAAC,mBAAmB,EAAE,MAAK;EAAA;EAAA3C,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAC,CAAA;EAC/B,IAAI2C,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAAA;IAAA7C,aAAA,GAAAyB,CAAA;IAAAzB,aAAA,GAAAC,CAAA;IACjCF,UAAA,CAAAY,GAAG,CAACmC,IAAI,EAAE;EACZ,CAAC;EAAA;EAAA;IAAA9C,aAAA,GAAAyB,CAAA;EAAA;AACH,CAAC,CAAC;AAEF;AAAA;AAAAzB,aAAA,GAAAC,CAAA;AACAF,UAAA,CAAAY,GAAG,CAACgC,EAAE,CAAC,aAAa,EAAE,YAAW;EAAA;EAAA3C,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAC,CAAA;EAC/B;EACA,IAAIc,KAAK,EAAE;IAAA;IAAAf,aAAA,GAAAyB,CAAA;IAAAzB,aAAA,GAAAC,CAAA;IACT,MAAMc,KAAK,CAACgC,SAAS,EAAE;EACzB,CAAC;EAAA;EAAA;IAAA/C,aAAA,GAAAyB,CAAA;EAAA;EAAAzB,aAAA,GAAAC,CAAA;EACD,MAAM,IAAAE,sBAAA,CAAA6C,eAAe,GAAE;EAEvB;EAAA;EAAAhD,aAAA,GAAAC,CAAA;EACA,MAAM,IAAAQ,kBAAA,CAAAwC,qBAAqB,GAAE;AAC/B,CAAC,CAAC;AAEF;AAAA;AAAAjD,aAAA,GAAAC,CAAA;AACAF,UAAA,CAAAY,GAAG,CAACgC,EAAE,CAAC,mBAAmB,EAAE,CAACO,KAAK,EAAEC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,YAAY,EAAEC,QAAQ,KAAI;EAAA;EAAAvD,aAAA,GAAAiB,CAAA;EAAAjB,aAAA,GAAAC,CAAA;EACvF;EACA;EAAI;EAAA,CAAAD,aAAA,GAAAyB,CAAA,WAAA2B,GAAG,CAACI,QAAQ,CAAC,WAAW,CAAC;EAAA;EAAA,CAAAxD,aAAA,GAAAyB,CAAA,WAAI2B,GAAG,CAACI,QAAQ,CAAC,OAAO,CAAC,GAAE;IAAA;IAAAxD,aAAA,GAAAyB,CAAA;IAAAzB,aAAA,GAAAC,CAAA;IACtDiD,KAAK,CAACO,cAAc,EAAE;IAAC;IAAAzD,aAAA,GAAAC,CAAA;IACvBsD,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC,MAAM;IAAA;IAAAvD,aAAA,GAAAyB,CAAA;IAAAzB,aAAA,GAAAC,CAAA;IACLsD,QAAQ,CAAC,KAAK,CAAC;EACjB;AACF,CAAC,CAAC;AAEF;AAAA;AAAAvD,aAAA,GAAAC,CAAA;AACAF,UAAA,CAAAY,GAAG,CAAC+C,WAAW,CAACC,YAAY,CAAC,uCAAuC,CAAC;AAAC;AAAA3D,aAAA,GAAAC,CAAA;AACtEF,UAAA,CAAAY,GAAG,CAAC+C,WAAW,CAACC,YAAY,CAAC,6BAA6B,CAAC;AAAC;AAAA3D,aAAA,GAAAC,CAAA;AAC5DF,UAAA,CAAAY,GAAG,CAAC+C,WAAW,CAACC,YAAY,CAAC,qBAAqB,CAAC;AAEnD;AAAA;AAAA3D,aAAA,GAAAC,CAAA;AACA,IAAI2C,OAAO,CAACgB,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EAAA;EAAA7D,aAAA,GAAAyB,CAAA;EAAAzB,aAAA,GAAAC,CAAA;EACzC2C,OAAO,CAACkB,kBAAkB,CAAC,SAAS,CAAC;AACvC,CAAC;AAAA;AAAA;EAAA9D,aAAA,GAAAyB,CAAA;AAAA","ignoreList":[]}