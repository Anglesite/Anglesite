{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/webpack.prod.js","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/webpack.prod.js"],"sourcesContent":["/**\n * @file Production webpack configuration for Anglesite\n * @description Optimized for performance, bundle size, and caching. Features minification,\n * CSS extraction, image optimization, code splitting, and production-ready source maps.\n * Merges with common configuration and adds production-specific optimizations.\n * @author David W. Keith <git@dwk.io>\n * @since 0.1.0\n */\n\nconst path = require('path');\nconst { merge } = require('webpack-merge');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst CssMinimizerPlugin = require('css-minimizer-webpack-plugin');\nconst TerserPlugin = require('terser-webpack-plugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ImageminWebpWebpackPlugin = require('imagemin-webp-webpack-plugin');\nconst ImageminAvifWebpackPlugin = require('imagemin-avif-webpack-plugin');\nconst { BundleAnalyzerPlugin } = require('webpack-bundle-analyzer');\nconst common = require('./webpack.common.js');\nconst ASSET_CONFIG = require('./assets.config');\n\n/** Enable bundle analysis when ANALYZE_BUNDLE environment variable is set */\nconst analyzeBundle = process.env.ANALYZE_BUNDLE === 'true';\n\n/**\n * Production webpack configuration\n * @type {import('webpack').Configuration}\n */\nmodule.exports = merge(common, {\n  /** Production mode enables optimizations and minification */\n  mode: 'production',\n  \n  /** \n   * Production output configuration\n   * Uses content hashes for optimal browser caching\n   */\n  output: {\n    path: path.resolve(__dirname, 'dist/app/ui/react'),\n    filename: ASSET_CONFIG.output.naming.production.js,\n    chunkFilename: '[name].[contenthash:8].chunk.js',\n    publicPath: ASSET_CONFIG.output.publicPath.production,\n    clean: ASSET_CONFIG.output.clean,\n    assetModuleFilename: 'assets/[name].[contenthash:8][ext]',\n    sourceMapFilename: ASSET_CONFIG.sourceMaps.production.filename,\n  },\n\n  /** Production-specific module rules */\n  module: {\n    rules: [\n      /** \n       * TypeScript/React files for production\n       * Optimized for smaller bundle size with production source maps\n       */\n      {\n        test: /\\.tsx?$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: 'ts-loader',\n            options: {\n              transpileOnly: true,\n              configFile: path.resolve(__dirname, 'app/ui/react/tsconfig.json'),\n              compilerOptions: {\n                sourceMap: ASSET_CONFIG.sourceMaps.production.loaders,\n              },\n            },\n          },\n        ],\n      },\n\n      /** \n       * CSS files extracted to separate files for production\n       * Enables better caching and parallel loading\n       */\n      {\n        test: /\\.css$/,\n        use: [\n          MiniCssExtractPlugin.loader,\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 2,\n              sourceMap: ASSET_CONFIG.sourceMaps.production.css,\n            },\n          },\n          {\n            loader: 'postcss-loader',\n            options: {\n              sourceMap: ASSET_CONFIG.sourceMaps.production.css,\n            },\n          },\n        ],\n      },\n\n      /** \n       * Responsive images optimized for production\n       * Generates multiple formats and sizes for optimal loading\n       */\n      {\n        test: /\\.(png|jpg|jpeg)$/i,\n        use: [\n          {\n            loader: 'responsive-loader',\n            options: {\n              adapter: require('responsive-loader/sharp'),\n              sizes: ASSET_CONFIG.images.breakpoints,\n              placeholder: true,\n              placeholderSize: 40,\n              quality: ASSET_CONFIG.images.quality.jpeg,\n              format: 'jpg',\n            },\n          },\n        ],\n        type: 'javascript/auto',\n      },\n\n      /** \n       * Static images with production hashed filenames\n       * Enables optimal caching strategies\n       */\n      {\n        test: /\\.(svg|gif|ico)$/i,\n        generator: {\n          filename: ASSET_CONFIG.output.naming.production.images,\n        },\n      },\n\n      /** \n       * Font files with production hashed filenames\n       * Long-term caching with content-based hashes\n       */\n      {\n        test: /\\.(woff|woff2|eot|ttf|otf)$/i,\n        generator: {\n          filename: ASSET_CONFIG.output.naming.production.fonts,\n        },\n      },\n    ],\n  },\n\n  /** Production-specific plugins */\n  plugins: [\n    /** \n     * HTML template plugin for production\n     * Minifies HTML and injects optimized assets\n     */\n    new HtmlWebpackPlugin({\n      template: path.resolve(__dirname, 'app/ui/templates/website-editor-react-production.html'),\n      filename: 'index.html',\n      inject: 'body',\n      minify: {\n        removeComments: true,\n        collapseWhitespace: true,\n        removeRedundantAttributes: true,\n        useShortDoctype: true,\n        removeEmptyAttributes: true,\n        removeStyleLinkTypeAttributes: true,\n        keepClosingSlash: true,\n        minifyJS: true,\n        minifyCSS: true,\n        minifyURLs: true,\n      },\n    }),\n\n    /** \n     * CSS extraction plugin for production\n     * Separates CSS into cacheable files with content hashes\n     */\n    new MiniCssExtractPlugin({\n      filename: ASSET_CONFIG.output.naming.production.css,\n      chunkFilename: '[name].[contenthash:8].chunk.css',\n    }),\n\n    /** \n     * WebP image optimization for modern browsers\n     * Reduces image file sizes by up to 25-30%\n     */\n    new ImageminWebpWebpackPlugin({\n      config: [\n        {\n          test: /\\.(jpe?g|png)$/,\n          options: {\n            quality: ASSET_CONFIG.images.quality.webp,\n          },\n        },\n      ],\n      overrideExtension: false,\n    }),\n\n    /** \n     * AVIF image optimization for latest browsers\n     * Next-generation format with superior compression\n     */\n    new ImageminAvifWebpackPlugin({\n      config: [\n        {\n          test: /\\.(jpe?g|png)$/,\n          options: {\n            quality: ASSET_CONFIG.images.quality.avif,\n          },\n        },\n      ],\n      overrideExtension: false,\n    }),\n\n    /** \n     * Bundle analyzer for production builds (optional)\n     * Helps identify optimization opportunities\n     */\n    analyzeBundle &&\n      new BundleAnalyzerPlugin({\n        analyzerMode: 'server',\n        openAnalyzer: ASSET_CONFIG.performance.analyzer.openAnalyzer,\n      }),\n  ].filter(Boolean),\n\n  /** \n   * Production optimization configuration\n   * Enables aggressive minification and optimal code splitting\n   */\n  optimization: {\n    /** Enable all optimization plugins */\n    minimize: true,\n    /** Custom minimizers for JS and CSS */\n    minimizer: [\n      /** \n       * JavaScript minification with Terser\n       * Removes console.log statements and comments\n       */\n      new TerserPlugin({\n        terserOptions: {\n          compress: {\n            drop_console: true,\n          },\n        },\n      }),\n      /** \n       * CSS minification and optimization\n       * Removes whitespace and optimizes selectors\n       */\n      new CssMinimizerPlugin(),\n    ],\n\n    /** \n     * Code splitting configuration for optimal caching\n     * Separates vendor code from application code\n     */\n    splitChunks: {\n      chunks: 'all',\n      cacheGroups: {\n        /** \n         * Vendor chunk for third-party libraries\n         * High priority to ensure consistent splitting\n         */\n        vendor: {\n          test: /[\\\\/]node_modules[\\\\/]/,\n          name: 'vendors',\n          priority: 10,\n          reuseExistingChunk: true,\n        },\n        /** \n         * Common chunk for shared application code\n         * Lower priority than vendor chunks\n         */\n        common: {\n          name: 'common',\n          minChunks: 2,\n          priority: 5,\n          reuseExistingChunk: true,\n        },\n      },\n    },\n\n    /** \n     * Runtime chunk extraction for better caching\n     * Webpack runtime code in separate file\n     */\n    runtimeChunk: {\n      name: 'runtime',\n    },\n  },\n\n  /** \n   * Production source maps for debugging\n   * Separate files to avoid impacting bundle size\n   */\n  devtool: ASSET_CONFIG.sourceMaps.production.devtool,\n\n  /** \n   * Performance budgets and warnings\n   * Helps identify bundle size issues early\n   */\n  performance: {\n    hints: ASSET_CONFIG.performance.hints,\n    maxEntrypointSize: ASSET_CONFIG.performance.maxEntrypointSize,\n    maxAssetSize: ASSET_CONFIG.performance.maxAssetSize,\n  },\n});"],"version":3}