{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/dist/app/renderer.js","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/dist/app/renderer.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializeRenderer = initializeRenderer;\nexports.logElectronAPIAvailability = logElectronAPIAvailability;\nexports.logDocumentReadyState = logDocumentReadyState;\nexports.sendRendererLoadedMessage = sendRendererLoadedMessage;\nexports.registerShowWebsiteNameInputListener = registerShowWebsiteNameInputListener;\nexports.setupButtonEventHandlers = setupButtonEventHandlers;\nexports.registerMenuEventListeners = registerMenuEventListeners;\nexports.setupDOMContentLoadedHandler = setupDOMContentLoadedHandler;\n/**\n * @file Renderer process for the Electron application.\n * @see {@link https://www.electronjs.org/docs/latest/tutorial/process-model#renderer-process}\n */\n// Export functions for testing\nfunction initializeRenderer() {\n    // Renderer initialization\n}\nfunction logElectronAPIAvailability() {\n    // Check electronAPI availability\n}\nfunction logDocumentReadyState() {\n    // Check document ready state\n}\nfunction sendRendererLoadedMessage() {\n    // Send a message to main process to confirm renderer is loaded\n    if (window.electronAPI) {\n        window.electronAPI.send('renderer-loaded', 'Renderer is working!');\n    }\n}\n// Execute initialization when running as script\ninitializeRenderer();\nlogElectronAPIAvailability();\nlogDocumentReadyState();\nsendRendererLoadedMessage();\nfunction registerShowWebsiteNameInputListener() {\n    try {\n        if (window.electronAPI && window.electronAPI.on) {\n            window.electronAPI.on('show-website-name-input', () => {\n                const websiteName = prompt('Enter a name for your new website:', 'My Website');\n                if (websiteName && websiteName.trim()) {\n                    window.electronAPI.send('create-website-with-name', websiteName.trim());\n                }\n            });\n        }\n        else {\n            console.error('No electronAPI available');\n        }\n    }\n    catch (error) {\n        console.error('Error setting up listener:', error);\n    }\n}\n// Execute when running as script\nregisterShowWebsiteNameInputListener();\nfunction setupButtonEventHandlers() {\n    const newWebsiteButton = document.getElementById('new-website');\n    const previewButton = document.getElementById('preview');\n    const openBrowserButton = document.getElementById('open-browser');\n    const reloadButton = document.getElementById('reload');\n    const devToolsButton = document.getElementById('devtools');\n    /**\n     * Adds event listener to the new website button.\n     * @returns {void}\n     */\n    if (newWebsiteButton) {\n        newWebsiteButton.addEventListener('click', () => {\n            window.electronAPI.send('new-website');\n        });\n    }\n    /**\n     * Adds event listener to the preview button to load the site preview.\n     * @returns {void}\n     */\n    if (previewButton) {\n        previewButton.addEventListener('click', () => {\n            console.log('Preview button clicked');\n            window.electronAPI.send('preview');\n        });\n    }\n    /**\n     * Adds event listener to the open browser button to open the site in external browser.\n     * @returns {void}\n     */\n    if (openBrowserButton) {\n        openBrowserButton.addEventListener('click', () => {\n            window.electronAPI.send('open-browser');\n        });\n    }\n    /**\n     * Adds event listener to the reload button to refresh the site preview.\n     * @returns {void}\n     */\n    if (reloadButton) {\n        reloadButton.addEventListener('click', () => {\n            console.log('Reload button clicked');\n            window.electronAPI.send('reload-preview');\n        });\n    }\n    /**\n     * Adds event listener to the DevTools button to toggle dev tools.\n     * @returns {void}\n     */\n    if (devToolsButton) {\n        devToolsButton.addEventListener('click', () => {\n            console.log('DevTools button clicked - sending IPC message');\n            window.electronAPI.send('toggle-devtools');\n            console.log('IPC message sent');\n        });\n    }\n    else {\n        console.error('DevTools button not found!');\n    }\n}\n// Execute when running as script\nsetupButtonEventHandlers();\nfunction registerMenuEventListeners() {\n    /**\n     * Listens for preview loaded events from the main process.\n     * @returns {void}\n     */\n    window.electronAPI.on('preview-loaded', () => {\n        console.log('Preview BrowserView loaded');\n    });\n    /**\n     * Handle menu events from the application menu.\n     * @returns {void}\n     */\n    window.electronAPI.on('menu-new-website', () => {\n        window.electronAPI.send('new-website');\n    });\n    // Handle trigger-new-website from menu\n    window.electronAPI.on('trigger-new-website', () => {\n        window.electronAPI.send('new-website');\n    });\n    window.electronAPI.on('menu-reload', () => {\n        const reloadButton = document.getElementById('reload');\n        if (reloadButton) {\n            reloadButton.click();\n        }\n    });\n    window.electronAPI.on('menu-toggle-devtools', () => {\n        const devToolsButton = document.getElementById('devtools');\n        if (devToolsButton) {\n            devToolsButton.click();\n        }\n    });\n    window.electronAPI.on('menu-export-site', () => {\n        console.log('Export site requested from menu');\n        window.electronAPI.send('export-site');\n    });\n}\n// Execute when running as script\nregisterMenuEventListeners();\nfunction setupDOMContentLoadedHandler() {\n    /**\n     * Add console log to confirm renderer is loaded.\n     * @returns {void}\n     */\n    window.addEventListener('DOMContentLoaded', () => {\n        // Renderer loaded successfully with BrowserView support\n        // Setting up menu event listeners is handled elsewhere\n    });\n}\n// Execute when running as script\nsetupDOMContentLoadedHandler();\n"],"version":3}