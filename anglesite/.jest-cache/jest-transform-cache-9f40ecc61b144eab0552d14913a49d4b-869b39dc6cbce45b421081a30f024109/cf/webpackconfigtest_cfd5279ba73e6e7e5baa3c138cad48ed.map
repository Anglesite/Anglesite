{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/config/webpack-config.test.ts","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/config/webpack-config.test.ts"],"sourcesContent":["/**\n * @file Tests for webpack configuration files\n * @description Validates that webpack configurations are properly structured and contain required settings\n */\n\nimport * as path from 'path';\nimport * as fs from 'fs';\nimport { Configuration } from 'webpack';\n\n// Extended configuration type that includes dev server\ninterface ExtendedConfiguration extends Configuration {\n  devServer?: any;\n}\n\ndescribe('Webpack Configuration Tests', () => {\n  const configDir = path.resolve(process.cwd());\n\n  describe('Configuration Files Exist', () => {\n    it('should have webpack.common.js', () => {\n      const commonPath = path.join(configDir, 'webpack.common.js');\n      expect(fs.existsSync(commonPath)).toBe(true);\n    });\n\n    it('should have webpack.dev.js', () => {\n      const devPath = path.join(configDir, 'webpack.dev.js');\n      expect(fs.existsSync(devPath)).toBe(true);\n    });\n\n    it('should have webpack.prod.js', () => {\n      const prodPath = path.join(configDir, 'webpack.prod.js');\n      expect(fs.existsSync(prodPath)).toBe(true);\n    });\n\n    it('should have assets.config.js', () => {\n      const assetsPath = path.join(configDir, 'assets.config.js');\n      expect(fs.existsSync(assetsPath)).toBe(true);\n    });\n  });\n\n  describe('Webpack Common Configuration', () => {\n    let commonConfig: Configuration;\n\n    beforeAll(() => {\n      // Clear require cache to ensure fresh load\n      const commonPath = require.resolve('../../webpack.common.js');\n      delete require.cache[commonPath];\n      commonConfig = require('../../webpack.common.js');\n    });\n\n    it('should have correct target for Electron', () => {\n      expect(commonConfig.target).toBe('electron-renderer');\n    });\n\n    it('should have proper entry points', () => {\n      expect(commonConfig.entry).toBeDefined();\n      expect(typeof commonConfig.entry).toBe('object');\n      expect(commonConfig.entry).toHaveProperty('main');\n      expect(commonConfig.entry).toHaveProperty('styles');\n    });\n\n    it('should have TypeScript extensions resolved', () => {\n      expect(commonConfig.resolve?.extensions).toContain('.ts');\n      expect(commonConfig.resolve?.extensions).toContain('.tsx');\n    });\n\n    it('should have path aliases configured', () => {\n      expect(commonConfig.resolve?.alias).toHaveProperty('@');\n      expect(commonConfig.resolve?.alias).toHaveProperty('@components');\n      expect(commonConfig.resolve?.alias).toHaveProperty('@styles');\n    });\n\n    it('should have TypeScript loader configured', () => {\n      const rules = commonConfig.module?.rules || [];\n      const tsRule = rules.find(rule => \n        rule && typeof rule === 'object' && 'test' in rule && \n        rule.test instanceof RegExp && rule.test.test('.tsx')\n      );\n      expect(tsRule).toBeDefined();\n    });\n\n    it('should exclude electron from bundle', () => {\n      expect(commonConfig.externals).toHaveProperty('electron');\n    });\n\n    it('should have copy plugin for static assets', () => {\n      expect(commonConfig.plugins).toBeDefined();\n      expect(Array.isArray(commonConfig.plugins)).toBe(true);\n    });\n  });\n\n  describe('Webpack Development Configuration', () => {\n    let devConfig: ExtendedConfiguration;\n\n    beforeAll(() => {\n      // Mock webpack-merge for testing\n      jest.mock('webpack-merge', () => ({\n        merge: (...configs: any[]) => {\n          return Object.assign({}, ...configs);\n        },\n      }));\n\n      const devPath = require.resolve('../../webpack.dev.js');\n      delete require.cache[devPath];\n      devConfig = require('../../webpack.dev.js');\n    });\n\n    it('should be in development mode', () => {\n      expect(devConfig.mode).toBe('development');\n    });\n\n    it('should have development source maps', () => {\n      expect(devConfig.devtool).toBeDefined();\n      expect(typeof devConfig.devtool).toBe('string');\n    });\n\n    it('should have dev server configuration', () => {\n      expect(devConfig.devServer).toBeDefined();\n      expect(devConfig.devServer).toHaveProperty('hot');\n      expect(devConfig.devServer).toHaveProperty('port');\n    });\n\n    it('should have development output settings', () => {\n      expect(devConfig.output).toBeDefined();\n      expect(devConfig.output?.clean).toBe(true);\n    });\n\n    it('should disable performance hints in development', () => {\n      expect(devConfig.performance).toEqual(expect.objectContaining({ hints: false }));\n    });\n\n    afterAll(() => {\n      jest.unmock('webpack-merge');\n    });\n  });\n\n  describe('Webpack Production Configuration', () => {\n    let prodConfig: Configuration;\n\n    beforeAll(() => {\n      // Mock webpack-merge for testing\n      jest.mock('webpack-merge', () => ({\n        merge: (...configs: any[]) => {\n          return Object.assign({}, ...configs);\n        },\n      }));\n\n      const prodPath = require.resolve('../../webpack.prod.js');\n      delete require.cache[prodPath];\n      prodConfig = require('../../webpack.prod.js');\n    });\n\n    it('should be in production mode', () => {\n      expect(prodConfig.mode).toBe('production');\n    });\n\n    it('should have optimization configured', () => {\n      expect(prodConfig.optimization).toBeDefined();\n      expect(prodConfig.optimization?.minimize).toBe(true);\n      expect(prodConfig.optimization?.splitChunks).toBeDefined();\n      expect(prodConfig.optimization?.runtimeChunk).toBeDefined();\n    });\n\n    it('should have production source maps', () => {\n      expect(prodConfig.devtool).toBeDefined();\n    });\n\n    it('should have performance hints enabled', () => {\n      expect(prodConfig.performance).toBeDefined();\n      expect(prodConfig.performance).toHaveProperty('hints');\n    });\n\n    it('should have production output with hashed filenames', () => {\n      expect(prodConfig.output).toBeDefined();\n      expect(prodConfig.output?.filename).toContain('[contenthash');\n    });\n\n    afterAll(() => {\n      jest.unmock('webpack-merge');\n    });\n  });\n\n  describe('Assets Configuration', () => {\n    let assetsConfig: any;\n\n    beforeAll(() => {\n      const assetsPath = require.resolve('../../assets.config.js');\n      delete require.cache[assetsPath];\n      assetsConfig = require('../../assets.config.js');\n    });\n\n    it('should have image optimization settings', () => {\n      expect(assetsConfig.images).toBeDefined();\n      expect(assetsConfig.images.breakpoints).toBeDefined();\n      expect(assetsConfig.images.quality).toBeDefined();\n    });\n\n    it('should have source map configurations', () => {\n      expect(assetsConfig.sourceMaps).toBeDefined();\n      expect(assetsConfig.sourceMaps.development).toBeDefined();\n      expect(assetsConfig.sourceMaps.production).toBeDefined();\n    });\n\n    it('should have output naming patterns', () => {\n      expect(assetsConfig.output.naming).toBeDefined();\n      expect(assetsConfig.output.naming.development).toBeDefined();\n      expect(assetsConfig.output.naming.production).toBeDefined();\n    });\n\n    it('should have performance settings', () => {\n      expect(assetsConfig.performance).toBeDefined();\n      expect(typeof assetsConfig.performance.maxEntrypointSize).toBe('number');\n      expect(typeof assetsConfig.performance.maxAssetSize).toBe('number');\n    });\n  });\n\n  describe('Package.json Scripts Integration', () => {\n    let packageJson: any;\n\n    beforeAll(() => {\n      const packagePath = path.join(configDir, 'package.json');\n      const packageContent = fs.readFileSync(packagePath, 'utf8');\n      packageJson = JSON.parse(packageContent);\n    });\n\n    it('should have updated build scripts', () => {\n      expect(packageJson.scripts['build:react']).toContain('webpack.prod.js');\n      expect(packageJson.scripts['build:react:dev']).toContain('webpack.dev.js');\n      expect(packageJson.scripts['dev:react']).toContain('webpack.dev.js');\n    });\n\n    it('should have webpack-merge as dependency', () => {\n      expect(packageJson.devDependencies).toHaveProperty('webpack-merge');\n    });\n\n    it('should have all required webpack plugins', () => {\n      const devDeps = packageJson.devDependencies;\n      expect(devDeps).toHaveProperty('html-webpack-plugin');\n      expect(devDeps).toHaveProperty('mini-css-extract-plugin');\n      expect(devDeps).toHaveProperty('css-minimizer-webpack-plugin');\n      expect(devDeps).toHaveProperty('terser-webpack-plugin');\n      expect(devDeps).toHaveProperty('@pmmmwh/react-refresh-webpack-plugin');\n      expect(devDeps).toHaveProperty('copy-webpack-plugin');\n    });\n  });\n\n  describe('Configuration Compatibility', () => {\n    it('should have backed up old webpack.config.js', () => {\n      const oldConfigPath = path.join(configDir, 'webpack.config.js.old');\n      expect(fs.existsSync(oldConfigPath)).toBe(true);\n    });\n\n    it('should not have conflicting webpack.config.js', () => {\n      const configPath = path.join(configDir, 'webpack.config.js');\n      expect(fs.existsSync(configPath)).toBe(false);\n    });\n\n    it('should maintain consistent asset paths between configs', () => {\n      const assetsConfig = require('../../assets.config.js');\n      \n      // Both dev and prod should use the same asset config\n      expect(assetsConfig.output.publicPath.development).toBeDefined();\n      expect(assetsConfig.output.publicPath.production).toBeDefined();\n      expect(assetsConfig.images.breakpoints).toBeInstanceOf(Array);\n    });\n  });\n});"],"version":3}