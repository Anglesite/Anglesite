{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/app/core/container.test.ts","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/app/core/container.test.ts"],"sourcesContent":["/**\n * @file Tests for Dependency Injection Container\n *\n * Comprehensive tests for the DI container including service registration,\n * resolution, lifecycle management, and error scenarios.\n */\n\nimport { DIContainer, ServiceKeys } from '../../../app/core/container';\nimport { Logger, FileSystemService } from '../../../app/core/service-registry';\n\ndescribe('DIContainer', () => {\n  let container: DIContainer;\n\n  beforeEach(() => {\n    container = new DIContainer({ name: 'test' });\n  });\n\n  afterEach(async () => {\n    await container.dispose();\n  });\n\n  describe('Service Registration', () => {\n    it('should register and resolve singleton services', () => {\n      const mockService = { value: 42 };\n      container.register('testService', () => mockService, 'singleton');\n\n      const resolved1 = container.resolve('testService');\n      const resolved2 = container.resolve('testService');\n\n      expect(resolved1).toBe(mockService);\n      expect(resolved2).toBe(mockService); // Same instance for singleton\n    });\n\n    it('should register and resolve transient services', () => {\n      let counter = 0;\n      container.register('testService', () => ({ id: ++counter }), 'transient');\n\n      const resolved1 = container.resolve('testService');\n      const resolved2 = container.resolve('testService');\n\n      expect(resolved1).toEqual({ id: 1 });\n      expect(resolved2).toEqual({ id: 2 });\n      expect(resolved1).not.toBe(resolved2); // Different instances for transient\n    });\n\n    it('should register services using class constructor', () => {\n      class TestService {\n        constructor(\n          public name: string,\n          public value: number\n        ) {}\n        getName() {\n          return this.name;\n        }\n      }\n\n      container.registerInstance('dep1', 'test-name');\n      container.registerInstance('dep2', 42);\n      container.registerClass('testService', TestService, 'singleton', ['dep1', 'dep2']);\n\n      const resolved = container.resolve<TestService>('testService');\n      expect(resolved).toBeInstanceOf(TestService);\n      expect(resolved.getName()).toBe('test-name');\n      expect(resolved.value).toBe(42);\n    });\n\n    it('should register service instances directly', () => {\n      const instance = { value: 'test-instance' };\n      container.registerInstance('testService', instance);\n\n      const resolved = container.resolve('testService');\n      expect(resolved).toBe(instance);\n    });\n\n    it('should support fluent interface for registration', () => {\n      const result = container\n        .register('service1', () => 'value1')\n        .register('service2', () => 'value2')\n        .registerInstance('service3', 'value3');\n\n      expect(result).toBe(container);\n      expect(container.resolve('service1')).toBe('value1');\n      expect(container.resolve('service2')).toBe('value2');\n      expect(container.resolve('service3')).toBe('value3');\n    });\n  });\n\n  describe('Service Resolution', () => {\n    it('should throw error for unregistered service', () => {\n      expect(() => container.resolve('nonexistent')).toThrow(\n        \"Service 'nonexistent' is not registered in container 'test'\"\n      );\n    });\n\n    it('should resolve services from parent container', () => {\n      const parent = new DIContainer({ name: 'parent' });\n      parent.registerInstance('parentService', 'parent-value');\n\n      const child = new DIContainer({ parent, name: 'child' });\n      child.registerInstance('childService', 'child-value');\n\n      expect(child.resolve('parentService')).toBe('parent-value');\n      expect(child.resolve('childService')).toBe('child-value');\n\n      // Parent should not have access to child services\n      expect(() => parent.resolve('childService')).toThrow();\n    });\n\n    it('should detect circular dependencies', () => {\n      container.register('serviceA', () => container.resolve('serviceB'));\n      container.register('serviceB', () => container.resolve('serviceA'));\n\n      expect(() => container.resolve('serviceA')).toThrow(/Circular dependency detected/);\n    });\n\n    it('should handle complex circular dependency chains', () => {\n      container.register('serviceA', () => container.resolve('serviceB'));\n      container.register('serviceB', () => container.resolve('serviceC'));\n      container.register('serviceC', () => container.resolve('serviceA'));\n\n      expect(() => container.resolve('serviceA')).toThrow(\n        /Circular dependency detected.*serviceA -> serviceB -> serviceC -> serviceA/\n      );\n    });\n  });\n\n  describe('Async Service Resolution', () => {\n    it('should resolve async services', async () => {\n      container.register('asyncService', async () => {\n        return new Promise((resolve) => setTimeout(() => resolve('async-value'), 10));\n      });\n\n      const resolved = await container.resolveAsync('asyncService');\n      expect(resolved).toBe('async-value');\n    });\n\n    it('should cache async singleton services', async () => {\n      let creationCount = 0;\n      container.register(\n        'asyncSingleton',\n        async () => {\n          creationCount++;\n          return { id: creationCount };\n        },\n        'singleton'\n      );\n\n      const resolved1 = await container.resolveAsync('asyncSingleton');\n      const resolved2 = await container.resolveAsync('asyncSingleton');\n\n      expect(creationCount).toBe(1);\n      expect(resolved1).toBe(resolved2);\n    });\n\n    it('should throw error when trying to resolve async service synchronously', () => {\n      container.register('asyncService', async () => 'async-value');\n\n      expect(() => container.resolve('asyncService')).toThrow(\n        \"Service 'asyncService' requires async resolution. Use resolveAsync() instead.\"\n      );\n    });\n\n    it('should handle mixed sync and async resolution', async () => {\n      container.register('syncService', () => 'sync-value');\n      container.register('asyncService', async () => 'async-value');\n\n      // Sync resolution should work for sync services\n      expect(container.resolve('syncService')).toBe('sync-value');\n\n      // Async resolution should work for both\n      expect(await container.resolveAsync('syncService')).toBe('sync-value');\n      expect(await container.resolveAsync('asyncService')).toBe('async-value');\n    });\n  });\n\n  describe('Service Introspection', () => {\n    it('should check if service is registered', () => {\n      container.registerInstance('testService', 'value');\n\n      expect(container.isRegistered('testService')).toBe(true);\n      expect(container.isRegistered('nonexistent')).toBe(false);\n    });\n\n    it('should get service names', () => {\n      container.registerInstance('service1', 'value1');\n      container.registerInstance('service2', 'value2');\n\n      const names = container.getServiceNames();\n      expect(names).toContain('service1');\n      expect(names).toContain('service2');\n      expect(names).toHaveLength(2);\n    });\n\n    it('should get service definitions', () => {\n      container.register('testService', () => 'value', 'singleton', ['dep1']);\n\n      const definition = container.getServiceDefinition('testService');\n      expect(definition).toBeDefined();\n      expect(definition!.lifetime).toBe('singleton');\n      expect(definition!.dependencies).toEqual(['dep1']);\n    });\n  });\n\n  describe('Dependency Validation', () => {\n    it('should validate dependencies successfully', () => {\n      container.registerInstance('dep1', 'value1');\n      container.register('service1', () => 'value', 'singleton', ['dep1']);\n\n      expect(() => container.validateDependencies()).not.toThrow();\n    });\n\n    it('should throw error for missing dependencies', () => {\n      container.register('service1', () => 'value', 'singleton', ['missingDep']);\n\n      expect(() => container.validateDependencies()).toThrow(\n        \"Service 'service1' depends on 'missingDep' which is not registered\"\n      );\n    });\n\n    it('should validate dependencies across parent containers', () => {\n      const parent = new DIContainer({ name: 'parent' });\n      parent.registerInstance('parentDep', 'value');\n\n      const child = new DIContainer({ parent, name: 'child' });\n      child.register('childService', () => 'value', 'singleton', ['parentDep']);\n\n      expect(() => child.validateDependencies()).not.toThrow();\n    });\n  });\n\n  describe('Service Scoping', () => {\n    it('should create child scopes', () => {\n      container.registerInstance('parentService', 'parent-value');\n\n      const childScope = container.createScope('child');\n      childScope.registerInstance('childService', 'child-value');\n\n      expect(childScope.resolve('parentService')).toBe('parent-value');\n      expect(childScope.resolve('childService')).toBe('child-value');\n    });\n\n    it('should isolate services between scopes', () => {\n      const scope1 = container.createScope('scope1');\n      const scope2 = container.createScope('scope2');\n\n      scope1.registerInstance('service', 'scope1-value');\n      scope2.registerInstance('service', 'scope2-value');\n\n      expect(scope1.resolve('service')).toBe('scope1-value');\n      expect(scope2.resolve('service')).toBe('scope2-value');\n    });\n  });\n\n  describe('Service Replacement', () => {\n    it('should replace existing service', () => {\n      container.registerInstance('testService', 'original');\n      expect(container.resolve('testService')).toBe('original');\n\n      container.replace('testService', () => 'replaced');\n      expect(container.resolve('testService')).toBe('replaced');\n    });\n\n    it('should throw error when replacing non-existent service', () => {\n      expect(() => container.replace('nonexistent', () => 'value')).toThrow(\n        \"Cannot replace service 'nonexistent' - it is not registered\"\n      );\n    });\n  });\n\n  describe('Container Lifecycle', () => {\n    it('should clear all services', () => {\n      container.registerInstance('service1', 'value1');\n      container.registerInstance('service2', 'value2');\n\n      expect(container.getServiceNames()).toHaveLength(2);\n\n      container.clear();\n\n      expect(container.getServiceNames()).toHaveLength(0);\n      expect(() => container.resolve('service1')).toThrow();\n    });\n\n    it('should dispose services that implement dispose method', async () => {\n      const disposableMock = {\n        value: 'test',\n        dispose: jest.fn().mockResolvedValue(undefined),\n      };\n\n      container.registerInstance('disposableService', disposableMock);\n\n      // Resolve to create instance\n      container.resolve('disposableService');\n\n      await container.dispose();\n\n      expect(disposableMock.dispose).toHaveBeenCalledTimes(1);\n    });\n\n    it('should handle dispose errors gracefully', async () => {\n      const faultyService = {\n        dispose: jest.fn().mockImplementation(() => {\n          throw new Error('Dispose failed');\n        }),\n      };\n\n      container.registerInstance('faultyService', faultyService);\n      container.resolve('faultyService');\n\n      // Should complete dispose despite errors\n      await container.dispose();\n      expect(faultyService.dispose).toHaveBeenCalled();\n    });\n  });\n\n  describe('Real Service Integration', () => {\n    it('should work with Logger service', () => {\n      container.register(ServiceKeys.LOGGER, () => new Logger('test'), 'singleton');\n\n      const logger = container.resolve<Logger>(ServiceKeys.LOGGER);\n      expect(logger).toBeInstanceOf(Logger);\n\n      // Should return same instance for singleton\n      const logger2 = container.resolve<Logger>(ServiceKeys.LOGGER);\n      expect(logger2).toBe(logger);\n    });\n\n    it('should work with FileSystem service', () => {\n      container.register(ServiceKeys.FILE_SYSTEM, () => new FileSystemService(), 'singleton');\n\n      const fileSystem = container.resolve<FileSystemService>(ServiceKeys.FILE_SYSTEM);\n      expect(fileSystem).toBeInstanceOf(FileSystemService);\n      expect(typeof fileSystem.exists).toBe('function');\n      expect(typeof fileSystem.readFile).toBe('function');\n    });\n\n    it('should handle service dependencies correctly', () => {\n      // Register logger first\n      container.register(ServiceKeys.LOGGER, () => new Logger('app'), 'singleton');\n\n      // Register a service that depends on logger\n      container.register(\n        'serviceWithDep',\n        () => {\n          const logger = container.resolve<Logger>(ServiceKeys.LOGGER);\n          return { logger, value: 'test' };\n        },\n        'singleton',\n        [ServiceKeys.LOGGER]\n      );\n\n      const service = container.resolve<{ logger: Logger; value: string }>('serviceWithDep');\n      expect(service.logger).toBeInstanceOf(Logger);\n      expect(service.value).toBe('test');\n    });\n  });\n\n  describe('Error Scenarios', () => {\n    it('should handle factory function errors', () => {\n      container.register('errorService', () => {\n        throw new Error('Factory error');\n      });\n\n      expect(() => container.resolve('errorService')).toThrow('Factory error');\n    });\n\n    it('should handle async factory errors', async () => {\n      container.register('asyncErrorService', async () => {\n        throw new Error('Async factory error');\n      });\n\n      await expect(container.resolveAsync('asyncErrorService')).rejects.toThrow('Async factory error');\n    });\n\n    it('should maintain container state after factory errors', () => {\n      container.registerInstance('goodService', 'good');\n      container.register('errorService', () => {\n        throw new Error('Factory error');\n      });\n\n      expect(() => container.resolve('errorService')).toThrow();\n      expect(container.resolve('goodService')).toBe('good'); // Should still work\n    });\n  });\n});\n"],"version":3}