{"version":3,"names":["exports","loadTemplate","cov_1l6gjx1f40","s","loadTemplateAsDataUrl","getTemplateFilePath","fs","__importStar","require","path","electron_1","templateName","variables","b","f","templatePath","app","isPackaged","join","process","resourcesPath","__dirname","appError","console","warn","existsSync","Error","templateContent","readFileSync","key","value","Object","entries","placeholder","replace","RegExp","error","encodeURIComponent"],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ui/template-loader.ts"],"sourcesContent":["/**\n * @file Template loading utility for HTML templates\n */\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport { app } from 'electron';\n\n/**\n * Interface for template replacement variables.\n */\ninterface TemplateVariables {\n  [key: string]: string;\n}\n\n/**\n * Load and process an HTML template file with variable substitution.\n * @param templateName Name of the template file (without extension)\n * @param variables Object containing variables to substitute in template\n * @returns Processed HTML string\n */\nexport function loadTemplate(templateName: string, variables: TemplateVariables = {}): string {\n  try {\n    // Handle both development and packaged app paths\n    let templatePath: string;\n\n    try {\n      if (app.isPackaged) {\n        // In packaged app, use the app resources path\n        templatePath = path.join(process.resourcesPath, 'app', 'ui', 'templates', `${templateName}.html`);\n      } else {\n        // In development, use __dirname\n        templatePath = path.join(__dirname, 'templates', `${templateName}.html`);\n      }\n    } catch (appError) {\n      // Fallback to __dirname if app module access fails\n      console.warn('Failed to access app module, falling back to __dirname:', appError);\n      templatePath = path.join(__dirname, 'templates', `${templateName}.html`);\n    }\n\n    if (!fs.existsSync(templatePath)) {\n      throw new Error(`Template file not found: ${templatePath}`);\n    }\n\n    let templateContent = fs.readFileSync(templatePath, 'utf8');\n\n    // Replace template variables in the format {{variableName}}\n    for (const [key, value] of Object.entries(variables)) {\n      const placeholder = `{{${key}}}`;\n      templateContent = templateContent.replace(new RegExp(placeholder, 'g'), value);\n    }\n\n    return templateContent;\n  } catch (error) {\n    console.error(`Failed to load template ${templateName}:`, error);\n    throw error;\n  }\n}\n\n/**\n * Load template and return as data URL for use with BrowserWindow.loadURL.\n * @param templateName Name of the template file (without extension)\n * @param variables Object containing variables to substitute in template\n * @returns Data URL string\n */\nexport function loadTemplateAsDataUrl(templateName: string, variables: TemplateVariables = {}): string {\n  const templateContent = loadTemplate(templateName, variables);\n  return `data:text/html;charset=utf-8,${encodeURIComponent(templateContent)}`;\n}\n\n/**\n * Get the file path to a template for direct loading (with relative path support).\n * @param templateName Name of the template file (without extension)\n * @returns File URL string\n */\nexport function getTemplateFilePath(templateName: string): string {\n  try {\n    // Handle both development and packaged app paths\n    let templatePath: string;\n\n    try {\n      if (app.isPackaged) {\n        // In packaged app, use the app resources path\n        templatePath = path.join(process.resourcesPath, 'app', 'ui', 'templates', `${templateName}.html`);\n      } else {\n        // In development, use __dirname\n        templatePath = path.join(__dirname, 'templates', `${templateName}.html`);\n      }\n    } catch (appError) {\n      // Fallback to __dirname if app module access fails\n      console.warn('Failed to access app module, falling back to __dirname:', appError);\n      templatePath = path.join(__dirname, 'templates', `${templateName}.html`);\n    }\n\n    if (!fs.existsSync(templatePath)) {\n      throw new Error(`Template file not found: ${templatePath}`);\n    }\n\n    // Convert to file URL\n    return `file://${templatePath}`;\n  } catch (error) {\n    console.error(`Failed to get template file path for ${templateName}:`, error);\n    throw error;\n  }\n}\n"],"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","ignoreList":[]}