{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ipc/website.test.ts","mappings":"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","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ipc/website.test.ts"],"sourcesContent":["/**\n * @file Tests for website IPC handlers\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { ipcMain, BrowserWindow, dialog, Menu, MenuItem, WebContentsView } from 'electron';\nimport * as fs from 'fs';\nimport { setupWebsiteHandlers, openWebsiteInNewWindow } from '../../app/ipc/website';\nimport { getNativeInput, openWebsiteSelectionWindow } from '../../app/ui/window-manager';\nimport {\n  createWebsiteWindow,\n  startWebsiteServerAndUpdateWindow,\n  getAllWebsiteWindows,\n} from '../../app/ui/multi-window-manager';\nimport {\n  createWebsiteWithName,\n  validateWebsiteName,\n  listWebsites,\n  getWebsitePath,\n  renameWebsite,\n  deleteWebsite,\n} from '../../app/utils/website-manager';\nimport { IStore } from '../../app/core/interfaces';\nimport { updateApplicationMenu } from '../../app/ui/menu';\n\n// Mock all dependencies\njest.mock('electron', () => ({\n  ipcMain: {\n    on: jest.fn(),\n    handle: jest.fn(),\n  },\n  BrowserWindow: {\n    fromWebContents: jest.fn(),\n  },\n  dialog: {\n    showMessageBox: jest.fn(),\n    showErrorBox: jest.fn(),\n  },\n  Menu: jest.fn().mockImplementation(() => ({\n    append: jest.fn(),\n    popup: jest.fn(),\n  })),\n  MenuItem: jest.fn().mockImplementation((options) => options),\n  nativeTheme: {\n    themeSource: 'system',\n    on: jest.fn(),\n    shouldUseDarkColors: false,\n  },\n}));\n\njest.mock('fs');\njest.mock('../../app/ui/window-manager');\njest.mock('../../app/ui/multi-window-manager');\njest.mock('../../app/utils/website-manager');\n// Store class removed - now using DI with StoreService\njest.mock('../../app/ui/menu');\n\n// Create typed mocks\nconst mockIpcMain = ipcMain as jest.Mocked<typeof ipcMain>;\nconst mockBrowserWindow = BrowserWindow as jest.Mocked<typeof BrowserWindow>;\nconst mockDialog = dialog as jest.Mocked<typeof dialog>;\nconst mockFs = fs as jest.Mocked<typeof fs>;\nconst mockGetNativeInput = getNativeInput as jest.MockedFunction<typeof getNativeInput>;\nconst mockOpenWebsiteSelectionWindow = openWebsiteSelectionWindow as jest.MockedFunction<\n  typeof openWebsiteSelectionWindow\n>;\nconst mockCreateWebsiteWindow = createWebsiteWindow as jest.MockedFunction<typeof createWebsiteWindow>;\nconst mockStartWebsiteServerAndUpdateWindow = startWebsiteServerAndUpdateWindow as jest.MockedFunction<\n  typeof startWebsiteServerAndUpdateWindow\n>;\nconst mockGetAllWebsiteWindows = getAllWebsiteWindows as jest.MockedFunction<typeof getAllWebsiteWindows>;\nconst mockCreateWebsiteWithName = createWebsiteWithName as jest.MockedFunction<typeof createWebsiteWithName>;\nconst mockValidateWebsiteName = validateWebsiteName as jest.MockedFunction<typeof validateWebsiteName>;\nconst mockListWebsites = listWebsites as jest.MockedFunction<typeof listWebsites>;\nconst mockGetWebsitePath = getWebsitePath as jest.MockedFunction<typeof getWebsitePath>;\nconst mockRenameWebsite = renameWebsite as jest.MockedFunction<typeof renameWebsite>;\nconst mockDeleteWebsite = deleteWebsite as jest.MockedFunction<typeof deleteWebsite>;\nconst mockUpdateApplicationMenu = updateApplicationMenu as jest.MockedFunction<typeof updateApplicationMenu>;\n\ndescribe.skip('Website IPC Handlers (disabled due to DI timeout issues)', () => {\n  let mockWindow: jest.Mocked<BrowserWindow>;\n  let mockWebContents: { send: jest.Mock };\n  let mockStore: jest.Mocked<IStore>;\n  let consoleErrorSpy: jest.SpyInstance;\n  let ipcHandlers: Map<string, any>;\n  let ipcInvokeHandlers: Map<string, any>;\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Setup IPC handler tracking\n    ipcHandlers = new Map();\n    ipcInvokeHandlers = new Map();\n\n    mockIpcMain.on.mockImplementation((channel: string, handler: any) => {\n      ipcHandlers.set(channel, handler);\n      return mockIpcMain;\n    });\n\n    mockIpcMain.handle.mockImplementation((channel: string, handler: any) => {\n      ipcInvokeHandlers.set(channel, handler);\n      return mockIpcMain;\n    });\n\n    // Setup mock window and web contents\n    mockWebContents = {\n      send: jest.fn(),\n    };\n\n    mockWindow = {\n      webContents: mockWebContents,\n    } as unknown as jest.Mocked<BrowserWindow>;\n\n    mockBrowserWindow.fromWebContents.mockReturnValue(mockWindow);\n\n    // Setup mock store with all required methods\n    mockStore = {\n      get: jest.fn(),\n      set: jest.fn(),\n      getAll: jest.fn(),\n      setAll: jest.fn(),\n      saveWindowStates: jest.fn(),\n      getWindowStates: jest.fn(() => []),\n      clearWindowStates: jest.fn(),\n      addRecentWebsite: jest.fn(),\n      getRecentWebsites: jest.fn(() => []),\n      clearRecentWebsites: jest.fn(),\n      removeRecentWebsite: jest.fn(),\n      forceSave: jest.fn().mockResolvedValue(undefined),\n      dispose: jest.fn().mockResolvedValue(undefined),\n    } as jest.Mocked<IStore>;\n\n    // Store class removed - now using DI with StoreService\n    // The actual Store calls will be handled by the DI system\n\n    // Setup console spy\n    consoleErrorSpy = jest.spyOn(console, 'error').mockImplementation();\n\n    // Setup default mock implementations\n    mockValidateWebsiteName.mockReturnValue({ valid: true });\n    mockCreateWebsiteWithName.mockResolvedValue('/path/to/website');\n    mockGetWebsitePath.mockReturnValue('/path/to/website');\n    mockFs.existsSync.mockReturnValue(true);\n    mockGetAllWebsiteWindows.mockReturnValue(new Map());\n    mockListWebsites.mockResolvedValue(['site1', 'site2', 'site3']);\n\n    // Mock WebsiteWindow interface - unused variable\n    // const mockWebsiteWindow = {\n    //   window: mockWindow,\n    //   webContentsView: {} as WebContentsView,\n    //   websiteName: 'site1',\n    // };\n  });\n\n  afterEach(() => {\n    consoleErrorSpy.mockRestore();\n  });\n\n  describe('setupWebsiteHandlers', () => {\n    it('should register all IPC handlers', () => {\n      setupWebsiteHandlers();\n\n      expect(mockIpcMain.on).toHaveBeenCalledWith('new-website', expect.any(Function));\n      expect(mockIpcMain.handle).toHaveBeenCalledWith('list-websites', expect.any(Function));\n      expect(mockIpcMain.on).toHaveBeenCalledWith('open-website', expect.any(Function));\n      expect(mockIpcMain.on).toHaveBeenCalledWith('show-website-context-menu', expect.any(Function));\n      expect(mockIpcMain.handle).toHaveBeenCalledWith('validate-website-name', expect.any(Function));\n      expect(mockIpcMain.handle).toHaveBeenCalledWith('rename-website', expect.any(Function));\n      expect(mockIpcMain.on).toHaveBeenCalledWith('delete-website', expect.any(Function));\n      expect(mockIpcMain.on).toHaveBeenCalledWith('open-website-selection', expect.any(Function));\n    });\n  });\n\n  describe('new-website handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should create a new website successfully', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('test-website');\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockGetNativeInput).toHaveBeenCalledWith('New Website', 'Enter a name for your new website:');\n      expect(mockValidateWebsiteName).toHaveBeenCalledWith('test-website');\n      expect(mockCreateWebsiteWithName).toHaveBeenCalledWith('test-website');\n      expect(mockStore.addRecentWebsite).toHaveBeenCalledWith('test-website');\n      expect(mockUpdateApplicationMenu).toHaveBeenCalled();\n    });\n\n    it('should handle validation errors and retry', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValueOnce('invalid-name').mockResolvedValueOnce('valid-name');\n\n      mockValidateWebsiteName\n        .mockReturnValueOnce({ valid: false, error: 'Invalid name' })\n        .mockReturnValueOnce({ valid: true });\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockGetNativeInput).toHaveBeenCalledTimes(2);\n      expect(mockGetNativeInput).toHaveBeenNthCalledWith(1, 'New Website', 'Enter a name for your new website:');\n      expect(mockGetNativeInput).toHaveBeenNthCalledWith(\n        2,\n        'New Website',\n        'Invalid name\\n\\nPlease enter a valid website name:'\n      );\n      expect(mockCreateWebsiteWithName).toHaveBeenCalledWith('valid-name');\n    });\n\n    it('should handle user cancellation', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue(null);\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockCreateWebsiteWithName).not.toHaveBeenCalled();\n    });\n\n    it('should handle missing window', async () => {\n      const event = { sender: mockWebContents };\n      mockBrowserWindow.fromWebContents.mockReturnValue(null);\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('No window found for new-website IPC message');\n    });\n\n    it('should handle creation errors', async () => {\n      const event = { sender: mockWebContents };\n      const error = new Error('Creation failed');\n      mockGetNativeInput.mockResolvedValue('test-website');\n      mockCreateWebsiteWithName.mockRejectedValue(error);\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to create new website:', error);\n      expect(mockDialog.showMessageBox).toHaveBeenCalledWith(mockWindow, {\n        type: 'error',\n        title: 'Creation Failed',\n        message: 'Failed to create website',\n        detail: 'Creation failed',\n        buttons: ['OK'],\n      });\n    });\n\n    it('should handle non-Error exceptions', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('test-website');\n      mockCreateWebsiteWithName.mockRejectedValue('String error');\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockDialog.showMessageBox).toHaveBeenCalledWith(mockWindow, {\n        type: 'error',\n        title: 'Creation Failed',\n        message: 'Failed to create website',\n        detail: 'String error',\n        buttons: ['OK'],\n      });\n    });\n  });\n\n  describe('list-websites handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should return available websites', async () => {\n      mockListWebsites.mockResolvedValue(['site1', 'site2', 'site3']);\n      const mockWebsiteWindow = {\n        window: mockWindow,\n        webContentsView: {\n          webContents: mockWebContents,\n          setBounds: jest.fn(),\n          setVisible: jest.fn(),\n        } as unknown as WebContentsView,\n        websiteName: 'site1',\n      };\n      mockGetAllWebsiteWindows.mockReturnValue(new Map([['site1', mockWebsiteWindow]]));\n\n      const handler = ipcInvokeHandlers.get('list-websites')!;\n      const result = await handler();\n\n      expect(result).toEqual(['site2', 'site3']);\n    });\n\n    it('should handle listing errors', async () => {\n      const error = new Error('Listing failed');\n      mockListWebsites.mockImplementation(() => {\n        throw error;\n      });\n\n      const handler = ipcInvokeHandlers.get('list-websites')!;\n\n      await expect(handler()).rejects.toThrow('Listing failed');\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to list websites:', error);\n    });\n  });\n\n  describe('open-website handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should open website successfully', async () => {\n      const event = { sender: mockWebContents };\n\n      const handler = ipcHandlers.get('open-website')!;\n      await handler(event, 'test-website');\n\n      expect(mockCreateWebsiteWindow).toHaveBeenCalledWith('test-website', '/path/to/website');\n      expect(mockStartWebsiteServerAndUpdateWindow).toHaveBeenCalledWith('test-website', '/path/to/website');\n    });\n\n    it('should handle opening errors', async () => {\n      const event = { sender: mockWebContents };\n      const error = new Error('Opening failed');\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw error;\n      });\n\n      const handler = ipcHandlers.get('open-website')!;\n      await handler(event, 'test-website');\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to open website:', expect.any(Error));\n      expect(mockDialog.showErrorBox).toHaveBeenCalledWith(\n        'Open Failed',\n        'Failed to open website \"test-website\": Failed to open website \"test-website\": Opening failed'\n      );\n    });\n\n    it('should handle non-Error exceptions', async () => {\n      const event = { sender: mockWebContents };\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw 'String error';\n      });\n\n      const handler = ipcHandlers.get('open-website')!;\n      await handler(event, 'test-website');\n\n      expect(mockDialog.showErrorBox).toHaveBeenCalledWith(\n        'Open Failed',\n        'Failed to open website \"test-website\": Failed to open website \"test-website\": String error'\n      );\n    });\n  });\n\n  describe('show-website-context-menu handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should show context menu with window', () => {\n      const event = { sender: mockWebContents };\n      const position = { x: 100, y: 200 };\n      const mockMenu = { append: jest.fn(), popup: jest.fn() };\n      (Menu as jest.MockedClass<typeof Menu>).mockReturnValue(mockMenu as unknown as Menu);\n\n      const handler = ipcHandlers.get('show-website-context-menu')!;\n      handler(event, 'test-website', position);\n\n      expect(Menu).toHaveBeenCalled();\n      expect(mockMenu.append).toHaveBeenCalledTimes(2);\n      expect(mockMenu.popup).toHaveBeenCalledWith({ window: mockWindow });\n    });\n\n    it('should show context menu without window', () => {\n      const event = { sender: mockWebContents };\n      const position = { x: 100, y: 200 };\n      const mockMenu = { append: jest.fn(), popup: jest.fn() };\n      (Menu as jest.MockedClass<typeof Menu>).mockReturnValue(mockMenu as unknown as Menu);\n      mockBrowserWindow.fromWebContents.mockReturnValue(null);\n\n      const handler = ipcHandlers.get('show-website-context-menu')!;\n      handler(event, 'test-website', position);\n\n      expect(mockMenu.popup).toHaveBeenCalledWith({ x: 100, y: 200 });\n    });\n\n    it('should create menu items with correct callbacks', () => {\n      const event = { sender: mockWebContents };\n      const position = { x: 100, y: 200 };\n      const mockMenu = { append: jest.fn(), popup: jest.fn() };\n      (Menu as jest.MockedClass<typeof Menu>).mockReturnValue(mockMenu as unknown as Menu);\n\n      const handler = ipcHandlers.get('show-website-context-menu')!;\n      handler(event, 'test-website', position);\n\n      // Verify rename menu item\n      expect(MenuItem).toHaveBeenCalledWith({\n        label: 'Rename',\n        click: expect.any(Function),\n      });\n\n      // Verify delete menu item\n      expect(MenuItem).toHaveBeenCalledWith({\n        label: 'Delete',\n        click: expect.any(Function),\n      });\n\n      // Test rename callback\n      const renameItem = (MenuItem as jest.MockedClass<typeof MenuItem>).mock.calls[0][0];\n      if (renameItem.click) {\n        renameItem.click(renameItem as any, undefined, {} as KeyboardEvent);\n      }\n      expect(mockWebContents.send).toHaveBeenCalledWith('website-context-menu-action', 'rename', 'test-website');\n\n      // Test delete callback\n      const deleteItem = (MenuItem as jest.MockedClass<typeof MenuItem>).mock.calls[1][0];\n      if (deleteItem.click) {\n        deleteItem.click(deleteItem as any, undefined, {} as KeyboardEvent);\n      }\n      expect(mockWebContents.send).toHaveBeenCalledWith('website-context-menu-action', 'delete', 'test-website');\n    });\n  });\n\n  describe('validate-website-name handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should validate website name', async () => {\n      const validationResult = { valid: true };\n      mockValidateWebsiteName.mockReturnValue(validationResult);\n\n      const handler = ipcInvokeHandlers.get('validate-website-name')!;\n      const result = await handler({}, 'test-name');\n\n      expect(mockValidateWebsiteName).toHaveBeenCalledWith('test-name');\n      expect(result).toBe(validationResult);\n    });\n  });\n\n  describe('rename-website handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should rename website successfully', async () => {\n      const event = { sender: mockWebContents };\n      mockRenameWebsite.mockResolvedValue(true);\n\n      const handler = ipcInvokeHandlers.get('rename-website')!;\n      const result = await handler(event, 'old-name', 'new-name');\n\n      expect(mockRenameWebsite).toHaveBeenCalledWith('old-name', 'new-name');\n      expect(mockWebContents.send).toHaveBeenCalledWith('website-operation-completed');\n      expect(result).toBe(true);\n    });\n\n    it('should handle rename errors', async () => {\n      const event = { sender: mockWebContents };\n      const error = new Error('Rename failed');\n      mockRenameWebsite.mockRejectedValue(error);\n\n      const handler = ipcInvokeHandlers.get('rename-website')!;\n\n      await expect(handler(event, 'old-name', 'new-name')).rejects.toThrow('Rename failed');\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to rename website:', error);\n      expect(mockWebContents.send).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('delete-website handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should delete website successfully', async () => {\n      const event = { sender: mockWebContents };\n      mockDeleteWebsite.mockResolvedValue(true);\n\n      const handler = ipcHandlers.get('delete-website')!;\n      await handler(event, 'test-website');\n\n      expect(mockDeleteWebsite).toHaveBeenCalledWith('test-website', mockWindow);\n      expect(mockWebContents.send).toHaveBeenCalledWith('website-operation-completed');\n    });\n\n    it('should handle deletion failure', async () => {\n      const event = { sender: mockWebContents };\n      mockDeleteWebsite.mockResolvedValue(false);\n\n      const handler = ipcHandlers.get('delete-website')!;\n      await handler(event, 'test-website');\n\n      expect(mockWebContents.send).not.toHaveBeenCalled();\n    });\n\n    it('should handle deletion errors', async () => {\n      const event = { sender: mockWebContents };\n      const error = new Error('Delete failed');\n      mockDeleteWebsite.mockRejectedValue(error);\n\n      const handler = ipcHandlers.get('delete-website')!;\n      await handler(event, 'test-website');\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to delete website:', error);\n      expect(mockDialog.showMessageBox).toHaveBeenCalledWith(mockWindow, {\n        type: 'error',\n        title: 'Delete Failed',\n        message: 'Failed to delete website',\n        detail: 'Delete failed',\n        buttons: ['OK'],\n      });\n    });\n\n    it('should handle missing window during error', async () => {\n      const event = { sender: mockWebContents };\n      const error = new Error('Delete failed');\n      mockBrowserWindow.fromWebContents.mockReturnValue(null);\n      mockDeleteWebsite.mockRejectedValue(error);\n\n      const handler = ipcHandlers.get('delete-website')!;\n      await handler(event, 'test-website');\n\n      expect(mockDialog.showMessageBox).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('open-website-selection handler', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should open website selection window', () => {\n      const handler = ipcHandlers.get('open-website-selection')!;\n      handler();\n\n      expect(mockOpenWebsiteSelectionWindow).toHaveBeenCalled();\n    });\n\n    it('should handle selection window errors', () => {\n      const error = new Error('Window failed');\n      mockOpenWebsiteSelectionWindow.mockImplementation(() => {\n        throw error;\n      });\n\n      const handler = ipcHandlers.get('open-website-selection')!;\n      handler();\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to open website selection window:', error);\n    });\n  });\n\n  describe('openWebsiteInNewWindow', () => {\n    it('should open website with provided path', async () => {\n      // Reset mocks for this test\n      mockCreateWebsiteWindow.mockReset();\n      mockStartWebsiteServerAndUpdateWindow.mockReset();\n\n      await openWebsiteInNewWindow('test-website', '/custom/path', false);\n\n      expect(mockCreateWebsiteWindow).toHaveBeenCalledWith('test-website', '/custom/path');\n      expect(mockStartWebsiteServerAndUpdateWindow).toHaveBeenCalledWith('test-website', '/custom/path');\n      expect(mockStore.addRecentWebsite).toHaveBeenCalledWith('test-website');\n      expect(mockUpdateApplicationMenu).toHaveBeenCalled();\n    });\n\n    it('should open website without provided path', async () => {\n      // Reset mocks for this test\n      mockCreateWebsiteWindow.mockReset();\n      mockStartWebsiteServerAndUpdateWindow.mockReset();\n\n      await openWebsiteInNewWindow('test-website');\n\n      expect(mockGetWebsitePath).toHaveBeenCalledWith('test-website');\n      expect(mockCreateWebsiteWindow).toHaveBeenCalledWith('test-website', '/path/to/website');\n      expect(mockStartWebsiteServerAndUpdateWindow).toHaveBeenCalledWith('test-website', '/path/to/website');\n    });\n\n    it('should skip adding to recent websites for new websites', async () => {\n      // Reset mocks for this test\n      mockCreateWebsiteWindow.mockReset();\n      mockStartWebsiteServerAndUpdateWindow.mockReset();\n      mockStore.addRecentWebsite.mockReset();\n      mockUpdateApplicationMenu.mockReset();\n\n      await openWebsiteInNewWindow('test-website', '/custom/path', true);\n\n      expect(mockStore.addRecentWebsite).not.toHaveBeenCalled();\n      expect(mockUpdateApplicationMenu).not.toHaveBeenCalled();\n    });\n\n    it('should handle missing website directory', async () => {\n      mockFs.existsSync.mockReturnValue(false);\n\n      await expect(openWebsiteInNewWindow('test-website')).rejects.toThrow(\n        'Website directory does not exist: /path/to/website'\n      );\n\n      expect(mockCreateWebsiteWindow).not.toHaveBeenCalled();\n    });\n\n    it('should handle window creation errors', async () => {\n      const error = new Error('Window creation failed');\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw error;\n      });\n\n      await expect(openWebsiteInNewWindow('test-website')).rejects.toThrow(\n        'Failed to open website \"test-website\": Window creation failed'\n      );\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to open website \"test-website\" in website window:', error);\n    });\n\n    it('should handle server startup errors', async () => {\n      // Reset mocks for this test\n      mockCreateWebsiteWindow.mockReset();\n      mockStartWebsiteServerAndUpdateWindow.mockReset();\n\n      const error = new Error('Server startup failed');\n      mockStartWebsiteServerAndUpdateWindow.mockRejectedValue(error);\n\n      await expect(openWebsiteInNewWindow('test-website')).rejects.toThrow(\n        'Failed to open website \"test-website\": Server startup failed'\n      );\n    });\n\n    it('should handle non-Error exceptions', async () => {\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw 'String error';\n      });\n\n      await expect(openWebsiteInNewWindow('test-website')).rejects.toThrow(\n        'Failed to open website \"test-website\": String error'\n      );\n    });\n  });\n\n  describe('createNewWebsite integration', () => {\n    beforeEach(() => {\n      setupWebsiteHandlers();\n    });\n\n    it('should handle website already exists error and open existing', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('existing-website');\n\n      // First call fails with \"already exists\"\n      mockCreateWebsiteWithName.mockRejectedValueOnce(new Error('Website already exists'));\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      // Should try to open the existing website\n      expect(mockCreateWebsiteWindow).toHaveBeenCalledWith('existing-website', '/path/to/website');\n    });\n\n    it('should clean up on failure after creation', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('test-website');\n      mockCreateWebsiteWithName.mockResolvedValue('/created/path');\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw new Error('Window failed');\n      });\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockFs.rmSync).toHaveBeenCalledWith('/created/path', { recursive: true, force: true });\n    });\n\n    it('should handle cleanup errors gracefully', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('test-website');\n      mockCreateWebsiteWithName.mockResolvedValue('/created/path');\n      mockCreateWebsiteWindow.mockImplementation(() => {\n        throw new Error('Window failed');\n      });\n      mockFs.rmSync.mockImplementation(() => {\n        throw new Error('Cleanup failed');\n      });\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(consoleErrorSpy).toHaveBeenCalledWith('Failed to clean up website directory:', expect.any(Error));\n    });\n\n    it('should handle missing existing website path', async () => {\n      const event = { sender: mockWebContents };\n      mockGetNativeInput.mockResolvedValue('existing-website');\n      mockCreateWebsiteWithName.mockRejectedValue(new Error('Website already exists'));\n      mockFs.existsSync.mockReturnValue(false);\n\n      const handler = ipcHandlers.get('new-website')!;\n      await handler(event);\n\n      expect(mockDialog.showMessageBox).toHaveBeenCalledWith(mockWindow, {\n        type: 'error',\n        title: 'Creation Failed',\n        message: 'Failed to create website',\n        detail: 'Website already exists',\n        buttons: ['OK'],\n      });\n    });\n  });\n});\n"],"version":3}