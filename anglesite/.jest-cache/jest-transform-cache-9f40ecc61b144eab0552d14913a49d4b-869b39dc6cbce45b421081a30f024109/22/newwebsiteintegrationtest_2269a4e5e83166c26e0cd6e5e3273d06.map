{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/new-website-integration.test.ts","mappings":";AAAA;;GAEG;AAkBH,qDAAqD;AACrD,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9C,cAAc,EAAE,kBAAkB;CACnC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE,CAAC,CAAC;IAClD,qBAAqB,EAAE,yBAAyB;IAChD,mBAAmB,EAAE,uBAAuB;CAC7C,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE,CAAC,CAAC;IACpD,mBAAmB,EAAE,0BAA0B;IAC/C,kBAAkB,EAAE,yBAAyB;IAC7C,oBAAoB,EAAE,wBAAwB;IAC9C,aAAa,EAAE,iBAAiB;IAChC,sBAAsB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC;CAC7C,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE,CAAC,CAAC;IAC9C,qBAAqB,EAAE,yBAAyB;CACjD,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,CAAC;IAC/C,iBAAiB,EAAE,qBAAqB;CACzC,CAAC,CAAC,CAAC;AAEJ,uDAAuD;AAEvD,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,CAAC;IACxC,sBAAsB,EAAE,IAAI,CAAC,EAAE,EAAE;IACjC,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;CAChC,CAAC,CAAC,CAAC;AAmBJ,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC;IAC3B,IAAI,EAAE,QAAQ;IACd,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAE,aAAa;CACtB,CAAC,CAAC,CAAC;AAtEJ,wEAAwE;AACxE,MAAM,kBAAkB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AACrC,MAAM,yBAAyB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC5C,MAAM,uBAAuB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC1C,MAAM,0BAA0B,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC7C,MAAM,yBAAyB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC5C,MAAM,wBAAwB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC3C,MAAM,iBAAiB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AACpC,MAAM,yBAAyB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAC5C,MAAM,qBAAqB,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AACxC,MAAM,YAAY,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;AAE/B,MAAM,aAAa,GAAG;IACpB,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE;CACxB,CAAC;AAmCF,gBAAgB;AAChB,MAAM,eAAe,GAAG;IACtB,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;CAChB,CAAC;AAEF,MAAM,iBAAiB,GAAG;IACxB,WAAW,EAAE,eAAe;CAC7B,CAAC;AAEF,MAAM,QAAQ,GAAG;IACf,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7B,CAAC;AAEF,MAAM,iBAAiB,GAAG;IACxB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC5B,CAAC;AAQF,QAAQ,CAAC,yBAAyB,EAAE,GAAG,EAAE;IACvC,IAAI,qBAAiC,CAAC;IAEtC,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAChD,qBAAqB,GAAG,UAAU,CAAC,qBAAqB,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,UAAU,CAAC,GAAG,EAAE;QACd,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,sCAAsC;QACtC,kBAAkB,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QACrD,yBAAyB,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAChE,uBAAuB,CAAC,eAAe,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;QACzD,gEAAgE;QAChE,yBAAyB,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACvD,qBAAqB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAC9C,YAAY,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACtC,wBAAwB,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;QACpD,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;QACxC,iBAAiB,CAAC,gBAAgB,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;IACxE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE,KAAK,IAAI,EAAE;QACvF,uDAAuD;QACvD,qBAAqB,EAAE,CAAC;QAExB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,CAAC,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAErD,wCAAwC;QACxC,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,qDAAqD;QACrD,MAAM,CAAC,yBAAyB,CAAC,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAEvE,8DAA8D;QAC9D,MAAM,UAAU,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;QACpD,MAAM,CAAC,UAAU,CAAC,sBAAsB,CAAC,CAAC,oBAAoB,CAAC,cAAc,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAC3G,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,4CAA4C;QAC5C,kBAAkB,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;QAE3C,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,gEAAgE;QAChE,MAAM,CAAC,yBAAyB,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IAC3D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,+CAA+C;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,KAAK,IAAI,EAAE;QAC5C,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,+CAA+C;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,+CAA+C;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC5D,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,+CAA+C;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;QACzD,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,+CAA+C;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;QAC1D,iBAAiB,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,oBAAoB;QAE9E,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,cAAc,CAAC,KAAK,EAAE,CAAC;QAE7B,4DAA4D;QAC5D,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC5C,qBAAqB,EAAE,CAAC;QACxB,MAAM,QAAQ,GAAG,QAAQ,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,CAAC;QACvG,MAAM,cAAc,GAAG,QAAQ,EAAE,OAAO,EAAE,IAAI,CAC5C,CAAC,IAA2C,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,cAAc,CAC/E,CAAC;QAEF,MAAM,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAClD,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvD,MAAM,CAAC,OAAO,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/ui/new-website-integration.test.ts"],"sourcesContent":["/**\n * @file Integration test for New Website functionality\n */\n\n// Mock all the dependencies that the New Website functionality requires\nconst mockGetNativeInput = jest.fn();\nconst mockCreateWebsiteWithName = jest.fn();\nconst mockValidateWebsiteName = jest.fn();\nconst mockCreateWebsiteWindowNWI = jest.fn();\nconst mockLoadWebsiteContentNWI = jest.fn();\nconst mockGetAllWebsiteWindows = jest.fn();\nconst mockGetHelpWindow = jest.fn();\nconst mockAddLocalDnsResolution = jest.fn();\nconst mockRestartHttpsProxy = jest.fn();\nconst mockStoreGet = jest.fn();\n\nconst mockDialogNWI = {\n  showErrorBox: jest.fn(),\n};\n\n// Mock all the modules that are dynamically imported\njest.mock('../../app/ui/window-manager', () => ({\n  getNativeInput: mockGetNativeInput,\n}));\n\njest.mock('../../app/utils/website-manager', () => ({\n  createWebsiteWithName: mockCreateWebsiteWithName,\n  validateWebsiteName: mockValidateWebsiteName,\n}));\n\njest.mock('../../app/ui/multi-window-manager', () => ({\n  createWebsiteWindow: mockCreateWebsiteWindowNWI,\n  loadWebsiteContent: mockLoadWebsiteContentNWI,\n  getAllWebsiteWindows: mockGetAllWebsiteWindows,\n  getHelpWindow: mockGetHelpWindow,\n  isWebsiteEditorFocused: jest.fn(() => false),\n}));\n\njest.mock('../../app/dns/hosts-manager', () => ({\n  addLocalDnsResolution: mockAddLocalDnsResolution,\n}));\n\njest.mock('../../app/server/https-proxy', () => ({\n  restartHttpsProxy: mockRestartHttpsProxy,\n}));\n\n// Store class removed - now using DI with StoreService\n\njest.mock('../../app/ipc/website', () => ({\n  openWebsiteInNewWindow: jest.fn(),\n  setupWebsiteHandlers: jest.fn(),\n}));\n\n// Mock electron\nconst mockWebContents = {\n  send: jest.fn(),\n};\n\nconst mockFocusedWindow = {\n  webContents: mockWebContents,\n};\n\nconst mockMenu = {\n  buildFromTemplate: jest.fn(),\n};\n\nconst mockBrowserWindow = {\n  getFocusedWindow: jest.fn(),\n};\n\njest.mock('electron', () => ({\n  Menu: mockMenu,\n  BrowserWindow: mockBrowserWindow,\n  dialog: mockDialogNWI,\n}));\n\ndescribe('New Website Integration', () => {\n  let createApplicationMenu: () => void;\n\n  beforeAll(() => {\n    const menuModule = require('../../app/ui/menu');\n    createApplicationMenu = menuModule.createApplicationMenu;\n  });\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n\n    // Set up default mock implementations\n    mockGetNativeInput.mockResolvedValue('My Test Site');\n    mockCreateWebsiteWithName.mockResolvedValue('/path/to/website');\n    mockValidateWebsiteName.mockReturnValue({ valid: true });\n    // Server startup now handled internally by multi-window-manager\n    mockAddLocalDnsResolution.mockResolvedValue(undefined);\n    mockRestartHttpsProxy.mockResolvedValue(true);\n    mockStoreGet.mockReturnValue('https');\n    mockGetAllWebsiteWindows.mockReturnValue(new Map());\n    mockGetHelpWindow.mockReturnValue(null);\n    mockBrowserWindow.getFocusedWindow.mockReturnValue(mockFocusedWindow);\n  });\n\n  it('should successfully create a new website when user provides valid input', async () => {\n    // Create the menu to get the New Website click handler\n    createApplicationMenu();\n\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    expect(newWebsiteItem).toBeDefined();\n    expect(typeof newWebsiteItem.click).toBe('function');\n\n    // Execute the New Website click handler\n    await newWebsiteItem.click();\n\n    // Verify that website creation functions were called\n    expect(mockCreateWebsiteWithName).toHaveBeenCalledWith('My Test Site');\n\n    // Get the openWebsiteInNewWindow mock from the correct module\n    const ipcWebsite = require('../../app/ipc/website');\n    expect(ipcWebsite.openWebsiteInNewWindow).toHaveBeenCalledWith('My Test Site', '/path/to/website', true);\n  });\n\n  it('should handle user cancellation gracefully', async () => {\n    // Set up mock to simulate user cancellation\n    mockGetNativeInput.mockResolvedValue(null);\n\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Verify that website creation was not called when user cancels\n    expect(mockCreateWebsiteWithName).not.toHaveBeenCalled();\n  });\n\n  it('should handle empty website name gracefully', async () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Mock behavior depends on specific test setup\n  });\n\n  it('should handle HTTP-only mode', async () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Mock behavior depends on specific test setup\n  });\n\n  it('should handle HTTPS proxy failure gracefully', async () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Mock behavior depends on specific test setup\n  });\n\n  it('should handle errors during website creation', async () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Mock behavior depends on specific test setup\n  });\n\n  it('should trim whitespace from website names', async () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Mock behavior depends on specific test setup\n  });\n\n  it('should handle no focused window gracefully', async () => {\n    mockBrowserWindow.getFocusedWindow.mockReturnValue(null); // No focused window\n\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    await newWebsiteItem.click();\n\n    // Should not send any IPC message when no window is focused\n    expect(mockWebContents.send).not.toHaveBeenCalled();\n  });\n\n  it('should have correct menu structure', () => {\n    createApplicationMenu();\n    const template = mockMenu.buildFromTemplate.mock.calls[0][0];\n    const fileMenu = template.find((item: { label?: string; submenu?: unknown }) => item.label === 'File');\n    const newWebsiteItem = fileMenu?.submenu?.find(\n      (item: { label?: string; submenu?: unknown }) => item.label === 'New Website…'\n    );\n\n    expect(newWebsiteItem).toBeDefined();\n    expect(newWebsiteItem.label).toBe('New Website…');\n    expect(newWebsiteItem.accelerator).toBe('CmdOrCtrl+N');\n    expect(typeof newWebsiteItem.click).toBe('function');\n  });\n});\n"],"version":3}