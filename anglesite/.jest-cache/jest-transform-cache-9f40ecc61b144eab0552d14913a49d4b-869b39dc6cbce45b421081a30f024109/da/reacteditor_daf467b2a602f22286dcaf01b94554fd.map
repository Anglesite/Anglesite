{"version":3,"names":["exports","setupReactEditorHandlers","electron_1","cov_2qmet4i4re","s","require","fs","__importStar","path","website_manager_1","f","ipcMain","handle","event","websiteName","console","log","b","Error","websitePath","getWebsitePath","srcPath","join","access","files","getFilesRecursively","length","error","relativePath","fullPath","resolvedPath","resolve","resolvedWebsitePath","startsWith","content","readFile","code","undefined","dirPath","dirname","mkdir","recursive","writeFile","basePath","entries","readdir","withFileTypes","entry","name","relative","fileInfo","filePath","isDirectory","ext","extname","toLowerCase","url","replace","endsWith","push","subFiles"],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/ipc/react-editor.ts"],"sourcesContent":["/**\n * @file IPC handlers for React website editor\n */\nimport { ipcMain, IpcMainInvokeEvent } from 'electron';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport { getWebsitePath } from '../utils/website-manager';\n\n/**\n * Setup React website editor IPC handlers.\n */\nexport function setupReactEditorHandlers(): void {\n  /**\n   * Get website files for file explorer.\n   */\n  ipcMain.handle('get-website-files', async (event: IpcMainInvokeEvent, websiteName: string) => {\n    try {\n      console.log('Getting website files for:', websiteName);\n\n      if (!websiteName) {\n        throw new Error('Website name is required');\n      }\n\n      const websitePath = getWebsitePath(websiteName);\n      const srcPath = path.join(websitePath, 'src');\n\n      // Check if src directory exists\n      try {\n        await fs.access(srcPath);\n      } catch {\n        console.log('No src directory found for website:', websiteName);\n        return [];\n      }\n\n      const files = await getFilesRecursively(srcPath, srcPath);\n      console.log(`Found ${files.length} files for website:`, websiteName);\n\n      return files;\n    } catch (error) {\n      console.error('Error getting website files:', error);\n      throw error;\n    }\n  });\n\n  /**\n   * Get file content.\n   */\n  ipcMain.handle('get-file-content', async (event: IpcMainInvokeEvent, websiteName: string, relativePath: string) => {\n    try {\n      console.log('Getting file content:', websiteName, relativePath);\n\n      if (!websiteName || !relativePath) {\n        throw new Error('Website name and file path are required');\n      }\n\n      const websitePath = getWebsitePath(websiteName);\n      const fullPath = path.join(websitePath, relativePath);\n\n      // Security check: ensure the path is within the website directory\n      const resolvedPath = path.resolve(fullPath);\n      const resolvedWebsitePath = path.resolve(websitePath);\n\n      if (!resolvedPath.startsWith(resolvedWebsitePath)) {\n        throw new Error('Access denied: path is outside website directory');\n      }\n\n      try {\n        const content = await fs.readFile(resolvedPath, 'utf-8');\n        console.log(`Read ${content.length} characters from:`, relativePath);\n        return content;\n      } catch (error) {\n        if ((error as any).code === 'ENOENT') {\n          console.log('File not found:', relativePath);\n          return null; // File doesn't exist\n        }\n        throw error;\n      }\n    } catch (error) {\n      console.error('Error getting file content:', error);\n      throw error;\n    }\n  });\n\n  /**\n   * Save file content.\n   */\n  ipcMain.handle(\n    'save-file-content',\n    async (event: IpcMainInvokeEvent, websiteName: string, relativePath: string, content: string) => {\n      try {\n        console.log('Saving file content:', websiteName, relativePath);\n\n        if (!websiteName || !relativePath || content === undefined) {\n          throw new Error('Website name, file path, and content are required');\n        }\n\n        const websitePath = getWebsitePath(websiteName);\n        const fullPath = path.join(websitePath, relativePath);\n\n        // Security check: ensure the path is within the website directory\n        const resolvedPath = path.resolve(fullPath);\n        const resolvedWebsitePath = path.resolve(websitePath);\n\n        if (!resolvedPath.startsWith(resolvedWebsitePath)) {\n          throw new Error('Access denied: path is outside website directory');\n        }\n\n        // Ensure directory exists\n        const dirPath = path.dirname(resolvedPath);\n        await fs.mkdir(dirPath, { recursive: true });\n\n        // Write the file\n        await fs.writeFile(resolvedPath, content, 'utf-8');\n        console.log(`Saved ${content.length} characters to:`, relativePath);\n\n        return true;\n      } catch (error) {\n        console.error('Error saving file content:', error);\n        throw error;\n      }\n    }\n  );\n}\n\n/**\n * Recursively get all files in a directory.\n */\nasync function getFilesRecursively(dirPath: string, basePath: string): Promise<any[]> {\n  const files: any[] = [];\n\n  try {\n    const entries = await fs.readdir(dirPath, { withFileTypes: true });\n\n    for (const entry of entries) {\n      const fullPath = path.join(dirPath, entry.name);\n      const relativePath = path.relative(basePath, fullPath);\n\n      // Skip hidden files, underscore files, and node_modules\n      if (entry.name.startsWith('.') || entry.name.startsWith('_') || entry.name === 'node_modules') {\n        continue;\n      }\n\n      const fileInfo: any = {\n        name: entry.name,\n        filePath: fullPath,\n        isDirectory: entry.isDirectory(),\n        relativePath,\n      };\n\n      // For files, try to determine if they have a URL (for HTML/MD files)\n      if (!entry.isDirectory()) {\n        const ext = path.extname(entry.name).toLowerCase();\n        if (ext === '.html' || ext === '.md') {\n          // Generate URL based on file path\n          let url = '/' + relativePath.replace(/\\\\/g, '/');\n          if (ext === '.md') {\n            url = url.replace(/\\.md$/, '.html');\n          }\n          if (url.endsWith('/index.html')) {\n            url = url.replace('/index.html', '/');\n          }\n          fileInfo.url = url;\n        }\n      }\n\n      files.push(fileInfo);\n\n      // If it's a directory, recursively get its contents\n      if (entry.isDirectory()) {\n        const subFiles = await getFilesRecursively(fullPath, basePath);\n        files.push(...subFiles);\n      }\n    }\n  } catch (error) {\n    console.error('Error reading directory:', dirPath, error);\n  }\n\n  return files;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}