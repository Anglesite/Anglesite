57ab96dacb0704a045a0f35a250e795f
"use strict";

/* istanbul ignore next */
function cov_mhnpo1ng8() {
  var path = "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/utils/website-manager.ts";
  var hash = "488adbaa6fd35b309293b78ca08659d8de49e18f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/utils/website-manager.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "2": {
        start: {
          line: 3,
          column: 26
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 15
        },
        end: {
          line: 4,
          column: 52
        }
      },
      "4": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 7,
          column: 5
        }
      },
      "5": {
        start: {
          line: 6,
          column: 6
        },
        end: {
          line: 6,
          column: 68
        }
      },
      "6": {
        start: {
          line: 6,
          column: 51
        },
        end: {
          line: 6,
          column: 63
        }
      },
      "7": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 39
        }
      },
      "8": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "9": {
        start: {
          line: 10,
          column: 26
        },
        end: {
          line: 10,
          column: 33
        }
      },
      "10": {
        start: {
          line: 11,
          column: 4
        },
        end: {
          line: 11,
          column: 17
        }
      },
      "11": {
        start: {
          line: 13,
          column: 25
        },
        end: {
          line: 17,
          column: 2
        }
      },
      "12": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "13": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 16,
          column: 21
        }
      },
      "14": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "15": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "16": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 24,
          column: 10
        }
      },
      "17": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "18": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "19": {
        start: {
          line: 22,
          column: 29
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "20": {
        start: {
          line: 22,
          column: 77
        },
        end: {
          line: 22,
          column: 95
        }
      },
      "21": {
        start: {
          line: 23,
          column: 12
        },
        end: {
          line: 23,
          column: 22
        }
      },
      "22": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 26
        }
      },
      "23": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "24": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "25": {
        start: {
          line: 28,
          column: 35
        },
        end: {
          line: 28,
          column: 46
        }
      },
      "26": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 23
        }
      },
      "27": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "28": {
        start: {
          line: 30,
          column: 25
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "29": {
        start: {
          line: 30,
          column: 38
        },
        end: {
          line: 30,
          column: 50
        }
      },
      "30": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 57
        }
      },
      "31": {
        start: {
          line: 30,
          column: 78
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "32": {
        start: {
          line: 30,
          column: 102
        },
        end: {
          line: 30,
          column: 137
        }
      },
      "33": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 40
        }
      },
      "34": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 22
        }
      },
      "35": {
        start: {
          line: 35,
          column: 0
        },
        end: {
          line: 35,
          column: 62
        }
      },
      "36": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 32
        }
      },
      "37": {
        start: {
          line: 37,
          column: 0
        },
        end: {
          line: 37,
          column: 52
        }
      },
      "38": {
        start: {
          line: 38,
          column: 0
        },
        end: {
          line: 38,
          column: 44
        }
      },
      "39": {
        start: {
          line: 39,
          column: 0
        },
        end: {
          line: 39,
          column: 54
        }
      },
      "40": {
        start: {
          line: 40,
          column: 0
        },
        end: {
          line: 40,
          column: 50
        }
      },
      "41": {
        start: {
          line: 41,
          column: 0
        },
        end: {
          line: 41,
          column: 60
        }
      },
      "42": {
        start: {
          line: 42,
          column: 0
        },
        end: {
          line: 42,
          column: 36
        }
      },
      "43": {
        start: {
          line: 43,
          column: 0
        },
        end: {
          line: 43,
          column: 40
        }
      },
      "44": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 38
        }
      },
      "45": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 38
        }
      },
      "46": {
        start: {
          line: 52,
          column: 11
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "47": {
        start: {
          line: 53,
          column: 13
        },
        end: {
          line: 53,
          column: 42
        }
      },
      "48": {
        start: {
          line: 54,
          column: 11
        },
        end: {
          line: 54,
          column: 38
        }
      },
      "49": {
        start: {
          line: 55,
          column: 24
        },
        end: {
          line: 55,
          column: 48
        }
      },
      "50": {
        start: {
          line: 56,
          column: 19
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "51": {
        start: {
          line: 57,
          column: 28
        },
        end: {
          line: 57,
          column: 58
        }
      },
      "52": {
        start: {
          line: 58,
          column: 17
        },
        end: {
          line: 58,
          column: 42
        }
      },
      "53": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "54": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 63,
          column: 41
        }
      },
      "55": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "56": {
        start: {
          line: 67,
          column: 12
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "57": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 71,
          column: 52
        }
      },
      "58": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 59
        }
      },
      "59": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 77,
          column: 47
        }
      },
      "60": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 41
        }
      },
      "61": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 83
        }
      },
      "62": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 47
        }
      },
      "63": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 52
        }
      },
      "64": {
        start: {
          line: 92,
          column: 22
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "65": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 98,
          column: 10
        }
      },
      "66": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 94,
          column: 40
        }
      },
      "67": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 95,
          column: 50
        }
      },
      "68": {
        start: {
          line: 102,
          column: 4
        },
        end: {
          line: 139,
          column: 6
        }
      },
      "69": {
        start: {
          line: 104,
          column: 12
        },
        end: {
          line: 113,
          column: 16
        }
      },
      "70": {
        start: {
          line: 104,
          column: 76
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "71": {
        start: {
          line: 108,
          column: 28
        },
        end: {
          line: 113,
          column: 13
        }
      },
      "72": {
        start: {
          line: 116,
          column: 26
        },
        end: {
          line: 116,
          column: 144
        }
      },
      "73": {
        start: {
          line: 117,
          column: 12
        },
        end: {
          line: 122,
          column: 15
        }
      },
      "74": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 134,
          column: 16
        }
      },
      "75": {
        start: {
          line: 125,
          column: 67
        },
        end: {
          line: 129,
          column: 13
        }
      },
      "76": {
        start: {
          line: 129,
          column: 28
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "77": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 133
        }
      },
      "78": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 37
        }
      },
      "79": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 49
        }
      },
      "80": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 148,
          column: 66
        }
      },
      "81": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 72
        }
      },
      "82": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 171,
          column: 9
        }
      },
      "83": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 77
        }
      },
      "84": {
        start: {
          line: 165,
          column: 32
        },
        end: {
          line: 169,
          column: 69
        }
      },
      "85": {
        start: {
          line: 170,
          column: 12
        },
        end: {
          line: 170,
          column: 54
        }
      },
      "86": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 54
        }
      },
      "87": {
        start: {
          line: 192,
          column: 8
        },
        end: {
          line: 192,
          column: 66
        }
      },
      "88": {
        start: {
          line: 193,
          column: 28
        },
        end: {
          line: 193,
          column: 55
        }
      },
      "89": {
        start: {
          line: 194,
          column: 31
        },
        end: {
          line: 194,
          column: 66
        }
      },
      "90": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 198,
          column: 9
        }
      },
      "91": {
        start: {
          line: 197,
          column: 12
        },
        end: {
          line: 197,
          column: 71
        }
      },
      "92": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 202,
          column: 9
        }
      },
      "93": {
        start: {
          line: 201,
          column: 12
        },
        end: {
          line: 201,
          column: 74
        }
      },
      "94": {
        start: {
          line: 204,
          column: 35
        },
        end: {
          line: 204,
          column: 70
        }
      },
      "95": {
        start: {
          line: 205,
          column: 8
        },
        end: {
          line: 207,
          column: 9
        }
      },
      "96": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 206,
          column: 86
        }
      },
      "97": {
        start: {
          line: 209,
          column: 28
        },
        end: {
          line: 209,
          column: 78
        }
      },
      "98": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 331,
          column: 9
        }
      },
      "99": {
        start: {
          line: 212,
          column: 31
        },
        end: {
          line: 219,
          column: 14
        }
      },
      "100": {
        start: {
          line: 216,
          column: 42
        },
        end: {
          line: 216,
          column: 65
        }
      },
      "101": {
        start: {
          line: 217,
          column: 20
        },
        end: {
          line: 217,
          column: 82
        }
      },
      "102": {
        start: {
          line: 217,
          column: 57
        },
        end: {
          line: 217,
          column: 80
        }
      },
      "103": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 222,
          column: 13
        }
      },
      "104": {
        start: {
          line: 221,
          column: 16
        },
        end: {
          line: 221,
          column: 89
        }
      },
      "105": {
        start: {
          line: 224,
          column: 30
        },
        end: {
          line: 224,
          column: 74
        }
      },
      "106": {
        start: {
          line: 225,
          column: 12
        },
        end: {
          line: 252,
          column: 13
        }
      },
      "107": {
        start: {
          line: 226,
          column: 16
        },
        end: {
          line: 251,
          column: 19
        }
      },
      "108": {
        start: {
          line: 227,
          column: 41
        },
        end: {
          line: 227,
          column: 97
        }
      },
      "109": {
        start: {
          line: 228,
          column: 40
        },
        end: {
          line: 241,
          column: 22
        }
      },
      "110": {
        start: {
          line: 231,
          column: 47
        },
        end: {
          line: 231,
          column: 93
        }
      },
      "111": {
        start: {
          line: 232,
          column: 45
        },
        end: {
          line: 232,
          column: 85
        }
      },
      "112": {
        start: {
          line: 233,
          column: 44
        },
        end: {
          line: 233,
          column: 66
        }
      },
      "113": {
        start: {
          line: 234,
          column: 28
        },
        end: {
          line: 237,
          column: 29
        }
      },
      "114": {
        start: {
          line: 235,
          column: 32
        },
        end: {
          line: 235,
          column: 130
        }
      },
      "115": {
        start: {
          line: 236,
          column: 32
        },
        end: {
          line: 236,
          column: 109
        }
      },
      "116": {
        start: {
          line: 238,
          column: 28
        },
        end: {
          line: 238,
          column: 43
        }
      },
      "117": {
        start: {
          line: 242,
          column: 20
        },
        end: {
          line: 244,
          column: 21
        }
      },
      "118": {
        start: {
          line: 243,
          column: 24
        },
        end: {
          line: 243,
          column: 93
        }
      },
      "119": {
        start: {
          line: 247,
          column: 39
        },
        end: {
          line: 247,
          column: 74
        }
      },
      "120": {
        start: {
          line: 248,
          column: 20
        },
        end: {
          line: 250,
          column: 21
        }
      },
      "121": {
        start: {
          line: 249,
          column: 24
        },
        end: {
          line: 249,
          column: 76
        }
      },
      "122": {
        start: {
          line: 254,
          column: 36
        },
        end: {
          line: 254,
          column: 77
        }
      },
      "123": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 293,
          column: 13
        }
      },
      "124": {
        start: {
          line: 256,
          column: 16
        },
        end: {
          line: 292,
          column: 19
        }
      },
      "125": {
        start: {
          line: 257,
          column: 47
        },
        end: {
          line: 257,
          column: 108
        }
      },
      "126": {
        start: {
          line: 258,
          column: 40
        },
        end: {
          line: 282,
          column: 22
        }
      },
      "127": {
        start: {
          line: 260,
          column: 28
        },
        end: {
          line: 279,
          column: 29
        }
      },
      "128": {
        start: {
          line: 261,
          column: 47
        },
        end: {
          line: 261,
          column: 66
        }
      },
      "129": {
        start: {
          line: 263,
          column: 62
        },
        end: {
          line: 263,
          column: 99
        }
      },
      "130": {
        start: {
          line: 264,
          column: 48
        },
        end: {
          line: 264,
          column: 85
        }
      },
      "131": {
        start: {
          line: 265,
          column: 32
        },
        end: {
          line: 271,
          column: 33
        }
      },
      "132": {
        start: {
          line: 266,
          column: 36
        },
        end: {
          line: 270,
          column: 39
        }
      },
      "133": {
        start: {
          line: 272,
          column: 32
        },
        end: {
          line: 272,
          column: 47
        }
      },
      "134": {
        start: {
          line: 275,
          column: 32
        },
        end: {
          line: 277,
          column: 35
        }
      },
      "135": {
        start: {
          line: 278,
          column: 32
        },
        end: {
          line: 278,
          column: 45
        }
      },
      "136": {
        start: {
          line: 283,
          column: 20
        },
        end: {
          line: 285,
          column: 21
        }
      },
      "137": {
        start: {
          line: 284,
          column: 24
        },
        end: {
          line: 284,
          column: 97
        }
      },
      "138": {
        start: {
          line: 288,
          column: 39
        },
        end: {
          line: 288,
          column: 80
        }
      },
      "139": {
        start: {
          line: 289,
          column: 20
        },
        end: {
          line: 291,
          column: 21
        }
      },
      "140": {
        start: {
          line: 290,
          column: 24
        },
        end: {
          line: 290,
          column: 82
        }
      },
      "141": {
        start: {
          line: 295,
          column: 12
        },
        end: {
          line: 310,
          column: 13
        }
      },
      "142": {
        start: {
          line: 296,
          column: 16
        },
        end: {
          line: 309,
          column: 19
        }
      },
      "143": {
        start: {
          line: 297,
          column: 20
        },
        end: {
          line: 297,
          column: 61
        }
      },
      "144": {
        start: {
          line: 300,
          column: 44
        },
        end: {
          line: 300,
          column: 85
        }
      },
      "145": {
        start: {
          line: 301,
          column: 20
        },
        end: {
          line: 308,
          column: 21
        }
      },
      "146": {
        start: {
          line: 302,
          column: 24
        },
        end: {
          line: 307,
          column: 25
        }
      },
      "147": {
        start: {
          line: 303,
          column: 28
        },
        end: {
          line: 303,
          column: 94
        }
      },
      "148": {
        start: {
          line: 306,
          column: 28
        },
        end: {
          line: 306,
          column: 105
        }
      },
      "149": {
        start: {
          line: 312,
          column: 27
        },
        end: {
          line: 312,
          column: 54
        }
      },
      "150": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 315,
          column: 13
        }
      },
      "151": {
        start: {
          line: 314,
          column: 16
        },
        end: {
          line: 314,
          column: 87
        }
      },
      "152": {
        start: {
          line: 316,
          column: 12
        },
        end: {
          line: 316,
          column: 100
        }
      },
      "153": {
        start: {
          line: 317,
          column: 12
        },
        end: {
          line: 317,
          column: 34
        }
      },
      "154": {
        start: {
          line: 320,
          column: 12
        },
        end: {
          line: 320,
          column: 81
        }
      },
      "155": {
        start: {
          line: 322,
          column: 12
        },
        end: {
          line: 329,
          column: 13
        }
      },
      "156": {
        start: {
          line: 323,
          column: 16
        },
        end: {
          line: 328,
          column: 17
        }
      },
      "157": {
        start: {
          line: 324,
          column: 20
        },
        end: {
          line: 324,
          column: 85
        }
      },
      "158": {
        start: {
          line: 327,
          column: 20
        },
        end: {
          line: 327,
          column: 103
        }
      },
      "159": {
        start: {
          line: 330,
          column: 12
        },
        end: {
          line: 330,
          column: 24
        }
      },
      "160": {
        start: {
          line: 337,
          column: 30
        },
        end: {
          line: 342,
          column: 9
        }
      },
      "161": {
        start: {
          line: 343,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "162": {
        start: {
          line: 344,
          column: 12
        },
        end: {
          line: 347,
          column: 13
        }
      },
      "163": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 82
        }
      },
      "164": {
        start: {
          line: 346,
          column: 16
        },
        end: {
          line: 346,
          column: 35
        }
      },
      "165": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 84
        }
      },
      "166": {
        start: {
          line: 350,
          column: 8
        },
        end: {
          line: 350,
          column: 20
        }
      },
      "167": {
        start: {
          line: 356,
          column: 28
        },
        end: {
          line: 356,
          column: 77
        }
      },
      "168": {
        start: {
          line: 358,
          column: 8
        },
        end: {
          line: 358,
          column: 104
        }
      },
      "169": {
        start: {
          line: 360,
          column: 8
        },
        end: {
          line: 360,
          column: 178
        }
      },
      "170": {
        start: {
          line: 362,
          column: 31
        },
        end: {
          line: 382,
          column: 19
        }
      },
      "171": {
        start: {
          line: 384,
          column: 8
        },
        end: {
          line: 384,
          column: 114
        }
      },
      "172": {
        start: {
          line: 385,
          column: 8
        },
        end: {
          line: 385,
          column: 28
        }
      },
      "173": {
        start: {
          line: 391,
          column: 8
        },
        end: {
          line: 395,
          column: 33
        }
      },
      "174": {
        start: {
          line: 401,
          column: 36
        },
        end: {
          line: 401,
          column: 91
        }
      },
      "175": {
        start: {
          line: 402,
          column: 28
        },
        end: {
          line: 402,
          column: 58
        }
      },
      "176": {
        start: {
          line: 404,
          column: 30
        },
        end: {
          line: 404,
          column: 67
        }
      },
      "177": {
        start: {
          line: 405,
          column: 8
        },
        end: {
          line: 405,
          column: 41
        }
      },
      "178": {
        start: {
          line: 407,
          column: 8
        },
        end: {
          line: 423,
          column: 9
        }
      },
      "179": {
        start: {
          line: 409,
          column: 12
        },
        end: {
          line: 415,
          column: 13
        }
      },
      "180": {
        start: {
          line: 412,
          column: 38
        },
        end: {
          line: 412,
          column: 77
        }
      },
      "181": {
        start: {
          line: 413,
          column: 45
        },
        end: {
          line: 413,
          column: 87
        }
      },
      "182": {
        start: {
          line: 414,
          column: 16
        },
        end: {
          line: 414,
          column: 97
        }
      },
      "183": {
        start: {
          line: 416,
          column: 12
        },
        end: {
          line: 422,
          column: 13
        }
      },
      "184": {
        start: {
          line: 419,
          column: 38
        },
        end: {
          line: 419,
          column: 77
        }
      },
      "185": {
        start: {
          line: 420,
          column: 49
        },
        end: {
          line: 420,
          column: 91
        }
      },
      "186": {
        start: {
          line: 421,
          column: 16
        },
        end: {
          line: 421,
          column: 101
        }
      },
      "187": {
        start: {
          line: 424,
          column: 8
        },
        end: {
          line: 424,
          column: 52
        }
      },
      "188": {
        start: {
          line: 430,
          column: 8
        },
        end: {
          line: 430,
          column: 65
        }
      },
      "189": {
        start: {
          line: 431,
          column: 8
        },
        end: {
          line: 451,
          column: 11
        }
      },
      "190": {
        start: {
          line: 432,
          column: 31
        },
        end: {
          line: 435,
          column: 14
        }
      },
      "191": {
        start: {
          line: 436,
          column: 12
        },
        end: {
          line: 446,
          column: 15
        }
      },
      "192": {
        start: {
          line: 437,
          column: 16
        },
        end: {
          line: 445,
          column: 17
        }
      },
      "193": {
        start: {
          line: 438,
          column: 20
        },
        end: {
          line: 438,
          column: 76
        }
      },
      "194": {
        start: {
          line: 439,
          column: 20
        },
        end: {
          line: 439,
          column: 30
        }
      },
      "195": {
        start: {
          line: 442,
          column: 34
        },
        end: {
          line: 442,
          column: 83
        }
      },
      "196": {
        start: {
          line: 443,
          column: 20
        },
        end: {
          line: 443,
          column: 67
        }
      },
      "197": {
        start: {
          line: 444,
          column: 20
        },
        end: {
          line: 444,
          column: 34
        }
      },
      "198": {
        start: {
          line: 447,
          column: 12
        },
        end: {
          line: 450,
          column: 15
        }
      },
      "199": {
        start: {
          line: 448,
          column: 16
        },
        end: {
          line: 448,
          column: 70
        }
      },
      "200": {
        start: {
          line: 449,
          column: 16
        },
        end: {
          line: 449,
          column: 30
        }
      },
      "201": {
        start: {
          line: 457,
          column: 8
        },
        end: {
          line: 459,
          column: 9
        }
      },
      "202": {
        start: {
          line: 458,
          column: 12
        },
        end: {
          line: 458,
          column: 75
        }
      },
      "203": {
        start: {
          line: 462,
          column: 8
        },
        end: {
          line: 467,
          column: 9
        }
      },
      "204": {
        start: {
          line: 463,
          column: 12
        },
        end: {
          line: 466,
          column: 14
        }
      },
      "205": {
        start: {
          line: 469,
          column: 28
        },
        end: {
          line: 469,
          column: 55
        }
      },
      "206": {
        start: {
          line: 470,
          column: 29
        },
        end: {
          line: 470,
          column: 60
        }
      },
      "207": {
        start: {
          line: 471,
          column: 29
        },
        end: {
          line: 471,
          column: 57
        }
      },
      "208": {
        start: {
          line: 473,
          column: 8
        },
        end: {
          line: 478,
          column: 9
        }
      },
      "209": {
        start: {
          line: 474,
          column: 12
        },
        end: {
          line: 477,
          column: 14
        }
      },
      "210": {
        start: {
          line: 480,
          column: 8
        },
        end: {
          line: 485,
          column: 9
        }
      },
      "211": {
        start: {
          line: 481,
          column: 12
        },
        end: {
          line: 484,
          column: 14
        }
      },
      "212": {
        start: {
          line: 491,
          column: 31
        },
        end: {
          line: 491,
          column: 49
        }
      },
      "213": {
        start: {
          line: 492,
          column: 8
        },
        end: {
          line: 497,
          column: 9
        }
      },
      "214": {
        start: {
          line: 493,
          column: 12
        },
        end: {
          line: 496,
          column: 14
        }
      },
      "215": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 504,
          column: 9
        }
      },
      "216": {
        start: {
          line: 500,
          column: 12
        },
        end: {
          line: 503,
          column: 14
        }
      },
      "217": {
        start: {
          line: 505,
          column: 8
        },
        end: {
          line: 510,
          column: 9
        }
      },
      "218": {
        start: {
          line: 506,
          column: 12
        },
        end: {
          line: 509,
          column: 14
        }
      },
      "219": {
        start: {
          line: 512,
          column: 30
        },
        end: {
          line: 512,
          column: 70
        }
      },
      "220": {
        start: {
          line: 513,
          column: 8
        },
        end: {
          line: 518,
          column: 9
        }
      },
      "221": {
        start: {
          line: 514,
          column: 12
        },
        end: {
          line: 517,
          column: 14
        }
      },
      "222": {
        start: {
          line: 520,
          column: 8
        },
        end: {
          line: 525,
          column: 9
        }
      },
      "223": {
        start: {
          line: 521,
          column: 12
        },
        end: {
          line: 524,
          column: 14
        }
      },
      "224": {
        start: {
          line: 526,
          column: 8
        },
        end: {
          line: 526,
          column: 31
        }
      },
      "225": {
        start: {
          line: 534,
          column: 32
        },
        end: {
          line: 534,
          column: 62
        }
      },
      "226": {
        start: {
          line: 535,
          column: 8
        },
        end: {
          line: 537,
          column: 9
        }
      },
      "227": {
        start: {
          line: 536,
          column: 12
        },
        end: {
          line: 536,
          column: 35
        }
      },
      "228": {
        start: {
          line: 539,
          column: 28
        },
        end: {
          line: 539,
          column: 55
        }
      },
      "229": {
        start: {
          line: 540,
          column: 28
        },
        end: {
          line: 540,
          column: 56
        }
      },
      "230": {
        start: {
          line: 541,
          column: 8
        },
        end: {
          line: 546,
          column: 9
        }
      },
      "231": {
        start: {
          line: 542,
          column: 12
        },
        end: {
          line: 545,
          column: 14
        }
      },
      "232": {
        start: {
          line: 547,
          column: 8
        },
        end: {
          line: 547,
          column: 31
        }
      },
      "233": {
        start: {
          line: 553,
          column: 28
        },
        end: {
          line: 553,
          column: 55
        }
      },
      "234": {
        start: {
          line: 554,
          column: 8
        },
        end: {
          line: 556,
          column: 9
        }
      },
      "235": {
        start: {
          line: 555,
          column: 12
        },
        end: {
          line: 555,
          column: 22
        }
      },
      "236": {
        start: {
          line: 557,
          column: 8
        },
        end: {
          line: 579,
          column: 9
        }
      },
      "237": {
        start: {
          line: 558,
          column: 28
        },
        end: {
          line: 558,
          column: 70
        }
      },
      "238": {
        start: {
          line: 559,
          column: 32
        },
        end: {
          line: 559,
          column: 34
        }
      },
      "239": {
        start: {
          line: 561,
          column: 12
        },
        end: {
          line: 573,
          column: 13
        }
      },
      "240": {
        start: {
          line: 562,
          column: 16
        },
        end: {
          line: 572,
          column: 17
        }
      },
      "241": {
        start: {
          line: 563,
          column: 38
        },
        end: {
          line: 563,
          column: 67
        }
      },
      "242": {
        start: {
          line: 564,
          column: 34
        },
        end: {
          line: 564,
          column: 71
        }
      },
      "243": {
        start: {
          line: 565,
          column: 20
        },
        end: {
          line: 567,
          column: 21
        }
      },
      "244": {
        start: {
          line: 566,
          column: 24
        },
        end: {
          line: 566,
          column: 48
        }
      },
      "245": {
        start: {
          line: 571,
          column: 20
        },
        end: {
          line: 571,
          column: 89
        }
      },
      "246": {
        start: {
          line: 574,
          column: 12
        },
        end: {
          line: 574,
          column: 31
        }
      },
      "247": {
        start: {
          line: 577,
          column: 12
        },
        end: {
          line: 577,
          column: 64
        }
      },
      "248": {
        start: {
          line: 578,
          column: 12
        },
        end: {
          line: 578,
          column: 22
        }
      },
      "249": {
        start: {
          line: 585,
          column: 8
        },
        end: {
          line: 585,
          column: 74
        }
      },
      "250": {
        start: {
          line: 586,
          column: 28
        },
        end: {
          line: 586,
          column: 55
        }
      },
      "251": {
        start: {
          line: 587,
          column: 28
        },
        end: {
          line: 587,
          column: 63
        }
      },
      "252": {
        start: {
          line: 588,
          column: 8
        },
        end: {
          line: 590,
          column: 9
        }
      },
      "253": {
        start: {
          line: 589,
          column: 12
        },
        end: {
          line: 589,
          column: 71
        }
      },
      "254": {
        start: {
          line: 591,
          column: 30
        },
        end: {
          line: 599,
          column: 9
        }
      },
      "255": {
        start: {
          line: 601,
          column: 23
        },
        end: {
          line: 603,
          column: 65
        }
      },
      "256": {
        start: {
          line: 604,
          column: 8
        },
        end: {
          line: 614,
          column: 9
        }
      },
      "257": {
        start: {
          line: 605,
          column: 12
        },
        end: {
          line: 613,
          column: 13
        }
      },
      "258": {
        start: {
          line: 606,
          column: 16
        },
        end: {
          line: 606,
          column: 78
        }
      },
      "259": {
        start: {
          line: 607,
          column: 16
        },
        end: {
          line: 607,
          column: 82
        }
      },
      "260": {
        start: {
          line: 608,
          column: 16
        },
        end: {
          line: 608,
          column: 28
        }
      },
      "261": {
        start: {
          line: 611,
          column: 16
        },
        end: {
          line: 611,
          column: 86
        }
      },
      "262": {
        start: {
          line: 612,
          column: 16
        },
        end: {
          line: 612,
          column: 28
        }
      },
      "263": {
        start: {
          line: 615,
          column: 8
        },
        end: {
          line: 615,
          column: 81
        }
      },
      "264": {
        start: {
          line: 616,
          column: 8
        },
        end: {
          line: 616,
          column: 21
        }
      },
      "265": {
        start: {
          line: 622,
          column: 8
        },
        end: {
          line: 622,
          column: 67
        }
      },
      "266": {
        start: {
          line: 635,
          column: 8
        },
        end: {
          line: 635,
          column: 67
        }
      },
      "267": {
        start: {
          line: 637,
          column: 27
        },
        end: {
          line: 637,
          column: 60
        }
      },
      "268": {
        start: {
          line: 638,
          column: 8
        },
        end: {
          line: 640,
          column: 9
        }
      },
      "269": {
        start: {
          line: 639,
          column: 12
        },
        end: {
          line: 639,
          column: 72
        }
      },
      "270": {
        start: {
          line: 641,
          column: 28
        },
        end: {
          line: 641,
          column: 55
        }
      },
      "271": {
        start: {
          line: 642,
          column: 24
        },
        end: {
          line: 642,
          column: 55
        }
      },
      "272": {
        start: {
          line: 643,
          column: 24
        },
        end: {
          line: 643,
          column: 55
        }
      },
      "273": {
        start: {
          line: 645,
          column: 8
        },
        end: {
          line: 647,
          column: 9
        }
      },
      "274": {
        start: {
          line: 646,
          column: 12
        },
        end: {
          line: 646,
          column: 67
        }
      },
      "275": {
        start: {
          line: 648,
          column: 8
        },
        end: {
          line: 650,
          column: 9
        }
      },
      "276": {
        start: {
          line: 649,
          column: 12
        },
        end: {
          line: 649,
          column: 67
        }
      },
      "277": {
        start: {
          line: 652,
          column: 28
        },
        end: {
          line: 652,
          column: 78
        }
      },
      "278": {
        start: {
          line: 653,
          column: 8
        },
        end: {
          line: 736,
          column: 9
        }
      },
      "279": {
        start: {
          line: 655,
          column: 12
        },
        end: {
          line: 677,
          column: 15
        }
      },
      "280": {
        start: {
          line: 656,
          column: 37
        },
        end: {
          line: 663,
          column: 18
        }
      },
      "281": {
        start: {
          line: 659,
          column: 40
        },
        end: {
          line: 659,
          column: 65
        }
      },
      "282": {
        start: {
          line: 660,
          column: 48
        },
        end: {
          line: 660,
          column: 82
        }
      },
      "283": {
        start: {
          line: 661,
          column: 24
        },
        end: {
          line: 661,
          column: 100
        }
      },
      "284": {
        start: {
          line: 664,
          column: 16
        },
        end: {
          line: 666,
          column: 17
        }
      },
      "285": {
        start: {
          line: 665,
          column: 20
        },
        end: {
          line: 665,
          column: 96
        }
      },
      "286": {
        start: {
          line: 669,
          column: 16
        },
        end: {
          line: 676,
          column: 17
        }
      },
      "287": {
        start: {
          line: 670,
          column: 20
        },
        end: {
          line: 675,
          column: 21
        }
      },
      "288": {
        start: {
          line: 671,
          column: 24
        },
        end: {
          line: 671,
          column: 71
        }
      },
      "289": {
        start: {
          line: 674,
          column: 24
        },
        end: {
          line: 674,
          column: 88
        }
      },
      "290": {
        start: {
          line: 679,
          column: 36
        },
        end: {
          line: 679,
          column: 70
        }
      },
      "291": {
        start: {
          line: 680,
          column: 12
        },
        end: {
          line: 712,
          column: 13
        }
      },
      "292": {
        start: {
          line: 681,
          column: 16
        },
        end: {
          line: 711,
          column: 19
        }
      },
      "293": {
        start: {
          line: 682,
          column: 48
        },
        end: {
          line: 682,
          column: 103
        }
      },
      "294": {
        start: {
          line: 683,
          column: 40
        },
        end: {
          line: 683,
          column: 70
        }
      },
      "295": {
        start: {
          line: 684,
          column: 20
        },
        end: {
          line: 684,
          column: 73
        }
      },
      "296": {
        start: {
          line: 685,
          column: 40
        },
        end: {
          line: 696,
          column: 22
        }
      },
      "297": {
        start: {
          line: 687,
          column: 28
        },
        end: {
          line: 693,
          column: 29
        }
      },
      "298": {
        start: {
          line: 688,
          column: 47
        },
        end: {
          line: 688,
          column: 66
        }
      },
      "299": {
        start: {
          line: 689,
          column: 32
        },
        end: {
          line: 689,
          column: 89
        }
      },
      "300": {
        start: {
          line: 692,
          column: 32
        },
        end: {
          line: 692,
          column: 45
        }
      },
      "301": {
        start: {
          line: 697,
          column: 20
        },
        end: {
          line: 699,
          column: 21
        }
      },
      "302": {
        start: {
          line: 698,
          column: 24
        },
        end: {
          line: 698,
          column: 108
        }
      },
      "303": {
        start: {
          line: 702,
          column: 39
        },
        end: {
          line: 702,
          column: 80
        }
      },
      "304": {
        start: {
          line: 703,
          column: 20
        },
        end: {
          line: 710,
          column: 21
        }
      },
      "305": {
        start: {
          line: 704,
          column: 24
        },
        end: {
          line: 709,
          column: 25
        }
      },
      "306": {
        start: {
          line: 705,
          column: 28
        },
        end: {
          line: 705,
          column: 86
        }
      },
      "307": {
        start: {
          line: 708,
          column: 28
        },
        end: {
          line: 708,
          column: 94
        }
      },
      "308": {
        start: {
          line: 714,
          column: 12
        },
        end: {
          line: 724,
          column: 15
        }
      },
      "309": {
        start: {
          line: 715,
          column: 16
        },
        end: {
          line: 715,
          column: 79
        }
      },
      "310": {
        start: {
          line: 718,
          column: 16
        },
        end: {
          line: 723,
          column: 17
        }
      },
      "311": {
        start: {
          line: 719,
          column: 20
        },
        end: {
          line: 719,
          column: 83
        }
      },
      "312": {
        start: {
          line: 722,
          column: 20
        },
        end: {
          line: 722,
          column: 87
        }
      },
      "313": {
        start: {
          line: 726,
          column: 27
        },
        end: {
          line: 726,
          column: 54
        }
      },
      "314": {
        start: {
          line: 727,
          column: 12
        },
        end: {
          line: 729,
          column: 13
        }
      },
      "315": {
        start: {
          line: 728,
          column: 16
        },
        end: {
          line: 728,
          column: 85
        }
      },
      "316": {
        start: {
          line: 730,
          column: 12
        },
        end: {
          line: 730,
          column: 83
        }
      },
      "317": {
        start: {
          line: 731,
          column: 12
        },
        end: {
          line: 731,
          column: 24
        }
      },
      "318": {
        start: {
          line: 734,
          column: 12
        },
        end: {
          line: 734,
          column: 87
        }
      },
      "319": {
        start: {
          line: 735,
          column: 12
        },
        end: {
          line: 735,
          column: 24
        }
      },
      "320": {
        start: {
          line: 743,
          column: 26
        },
        end: {
          line: 743,
          column: 67
        }
      },
      "321": {
        start: {
          line: 744,
          column: 8
        },
        end: {
          line: 758,
          column: 9
        }
      },
      "322": {
        start: {
          line: 745,
          column: 29
        },
        end: {
          line: 745,
          column: 78
        }
      },
      "323": {
        start: {
          line: 746,
          column: 12
        },
        end: {
          line: 757,
          column: 13
        }
      },
      "324": {
        start: {
          line: 747,
          column: 39
        },
        end: {
          line: 750,
          column: 101
        }
      },
      "325": {
        start: {
          line: 751,
          column: 16
        },
        end: {
          line: 756,
          column: 17
        }
      },
      "326": {
        start: {
          line: 752,
          column: 40
        },
        end: {
          line: 752,
          column: 131
        }
      },
      "327": {
        start: {
          line: 753,
          column: 20
        },
        end: {
          line: 755,
          column: 21
        }
      },
      "328": {
        start: {
          line: 754,
          column: 24
        },
        end: {
          line: 754,
          column: 101
        }
      },
      "329": {
        start: {
          line: 764,
          column: 28
        },
        end: {
          line: 764,
          column: 60
        }
      },
      "330": {
        start: {
          line: 765,
          column: 8
        },
        end: {
          line: 765,
          column: 46
        }
      },
      "331": {
        start: {
          line: 771,
          column: 8
        },
        end: {
          line: 771,
          column: 62
        }
      },
      "332": {
        start: {
          line: 775,
          column: 0
        },
        end: {
          line: 775,
          column: 40
        }
      },
      "333": {
        start: {
          line: 780,
          column: 4
        },
        end: {
          line: 780,
          column: 71
        }
      },
      "334": {
        start: {
          line: 786,
          column: 4
        },
        end: {
          line: 792,
          column: 43
        }
      },
      "335": {
        start: {
          line: 801,
          column: 4
        },
        end: {
          line: 801,
          column: 78
        }
      },
      "336": {
        start: {
          line: 803,
          column: 19
        },
        end: {
          line: 809,
          column: 5
        }
      },
      "337": {
        start: {
          line: 808,
          column: 21
        },
        end: {
          line: 808,
          column: 27
        }
      },
      "338": {
        start: {
          line: 810,
          column: 23
        },
        end: {
          line: 810,
          column: 46
        }
      },
      "339": {
        start: {
          line: 811,
          column: 22
        },
        end: {
          line: 811,
          column: 60
        }
      },
      "340": {
        start: {
          line: 812,
          column: 20
        },
        end: {
          line: 812,
          column: 69
        }
      },
      "341": {
        start: {
          line: 813,
          column: 4
        },
        end: {
          line: 813,
          column: 46
        }
      },
      "342": {
        start: {
          line: 820,
          column: 4
        },
        end: {
          line: 820,
          column: 76
        }
      },
      "343": {
        start: {
          line: 822,
          column: 19
        },
        end: {
          line: 828,
          column: 5
        }
      },
      "344": {
        start: {
          line: 827,
          column: 21
        },
        end: {
          line: 827,
          column: 27
        }
      },
      "345": {
        start: {
          line: 829,
          column: 23
        },
        end: {
          line: 829,
          column: 46
        }
      },
      "346": {
        start: {
          line: 830,
          column: 22
        },
        end: {
          line: 830,
          column: 60
        }
      },
      "347": {
        start: {
          line: 831,
          column: 20
        },
        end: {
          line: 831,
          column: 69
        }
      },
      "348": {
        start: {
          line: 832,
          column: 4
        },
        end: {
          line: 832,
          column: 45
        }
      },
      "349": {
        start: {
          line: 839,
          column: 4
        },
        end: {
          line: 839,
          column: 81
        }
      },
      "350": {
        start: {
          line: 841,
          column: 19
        },
        end: {
          line: 847,
          column: 5
        }
      },
      "351": {
        start: {
          line: 846,
          column: 21
        },
        end: {
          line: 846,
          column: 27
        }
      },
      "352": {
        start: {
          line: 848,
          column: 23
        },
        end: {
          line: 848,
          column: 46
        }
      },
      "353": {
        start: {
          line: 849,
          column: 22
        },
        end: {
          line: 849,
          column: 60
        }
      },
      "354": {
        start: {
          line: 850,
          column: 20
        },
        end: {
          line: 850,
          column: 69
        }
      },
      "355": {
        start: {
          line: 851,
          column: 4
        },
        end: {
          line: 851,
          column: 50
        }
      },
      "356": {
        start: {
          line: 858,
          column: 4
        },
        end: {
          line: 858,
          column: 69
        }
      },
      "357": {
        start: {
          line: 860,
          column: 19
        },
        end: {
          line: 866,
          column: 5
        }
      },
      "358": {
        start: {
          line: 865,
          column: 21
        },
        end: {
          line: 865,
          column: 27
        }
      },
      "359": {
        start: {
          line: 867,
          column: 23
        },
        end: {
          line: 867,
          column: 46
        }
      },
      "360": {
        start: {
          line: 868,
          column: 22
        },
        end: {
          line: 868,
          column: 60
        }
      },
      "361": {
        start: {
          line: 869,
          column: 20
        },
        end: {
          line: 869,
          column: 69
        }
      },
      "362": {
        start: {
          line: 870,
          column: 4
        },
        end: {
          line: 870,
          column: 34
        }
      },
      "363": {
        start: {
          line: 877,
          column: 4
        },
        end: {
          line: 877,
          column: 71
        }
      },
      "364": {
        start: {
          line: 879,
          column: 19
        },
        end: {
          line: 885,
          column: 5
        }
      },
      "365": {
        start: {
          line: 884,
          column: 21
        },
        end: {
          line: 884,
          column: 27
        }
      },
      "366": {
        start: {
          line: 886,
          column: 23
        },
        end: {
          line: 886,
          column: 46
        }
      },
      "367": {
        start: {
          line: 887,
          column: 22
        },
        end: {
          line: 887,
          column: 60
        }
      },
      "368": {
        start: {
          line: 888,
          column: 20
        },
        end: {
          line: 888,
          column: 69
        }
      },
      "369": {
        start: {
          line: 889,
          column: 4
        },
        end: {
          line: 889,
          column: 47
        }
      },
      "370": {
        start: {
          line: 896,
          column: 4
        },
        end: {
          line: 896,
          column: 70
        }
      },
      "371": {
        start: {
          line: 898,
          column: 19
        },
        end: {
          line: 904,
          column: 5
        }
      },
      "372": {
        start: {
          line: 903,
          column: 21
        },
        end: {
          line: 903,
          column: 27
        }
      },
      "373": {
        start: {
          line: 905,
          column: 23
        },
        end: {
          line: 905,
          column: 46
        }
      },
      "374": {
        start: {
          line: 906,
          column: 22
        },
        end: {
          line: 906,
          column: 60
        }
      },
      "375": {
        start: {
          line: 907,
          column: 20
        },
        end: {
          line: 907,
          column: 69
        }
      },
      "376": {
        start: {
          line: 908,
          column: 4
        },
        end: {
          line: 908,
          column: 51
        }
      },
      "377": {
        start: {
          line: 915,
          column: 4
        },
        end: {
          line: 915,
          column: 70
        }
      },
      "378": {
        start: {
          line: 917,
          column: 19
        },
        end: {
          line: 923,
          column: 5
        }
      },
      "379": {
        start: {
          line: 922,
          column: 21
        },
        end: {
          line: 922,
          column: 27
        }
      },
      "380": {
        start: {
          line: 924,
          column: 23
        },
        end: {
          line: 924,
          column: 46
        }
      },
      "381": {
        start: {
          line: 925,
          column: 22
        },
        end: {
          line: 925,
          column: 60
        }
      },
      "382": {
        start: {
          line: 926,
          column: 20
        },
        end: {
          line: 926,
          column: 69
        }
      },
      "383": {
        start: {
          line: 927,
          column: 4
        },
        end: {
          line: 927,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 2,
            column: 75
          }
        },
        loc: {
          start: {
            line: 2,
            column: 96
          },
          end: {
            line: 9,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 6,
            column: 38
          },
          end: {
            line: 6,
            column: 39
          }
        },
        loc: {
          start: {
            line: 6,
            column: 49
          },
          end: {
            line: 6,
            column: 65
          }
        },
        line: 6
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 9,
            column: 7
          }
        },
        loc: {
          start: {
            line: 9,
            column: 28
          },
          end: {
            line: 12,
            column: 1
          }
        },
        line: 9
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 13,
            column: 81
          }
        },
        loc: {
          start: {
            line: 13,
            column: 95
          },
          end: {
            line: 15,
            column: 1
          }
        },
        line: 13
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 15,
            column: 6
          }
        },
        loc: {
          start: {
            line: 15,
            column: 20
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 15
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 18,
            column: 51
          },
          end: {
            line: 18,
            column: 52
          }
        },
        loc: {
          start: {
            line: 18,
            column: 63
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 18
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 19,
            column: 18
          },
          end: {
            line: 19,
            column: 19
          }
        },
        loc: {
          start: {
            line: 19,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 19
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 20,
            column: 49
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 24,
            column: 9
          }
        },
        line: 20
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 27,
            column: 11
          },
          end: {
            line: 27,
            column: 12
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 27
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        loc: {
          start: {
            line: 61,
            column: 23
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 61
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        loc: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 70
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 5
          }
        },
        loc: {
          start: {
            line: 73,
            column: 42
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 5
          }
        },
        loc: {
          start: {
            line: 76,
            column: 31
          },
          end: {
            line: 78,
            column: 5
          }
        },
        line: 76
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 5
          }
        },
        loc: {
          start: {
            line: 79,
            column: 24
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 79
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        loc: {
          start: {
            line: 82,
            column: 31
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 82
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 30
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 5
          }
        },
        loc: {
          start: {
            line: 88,
            column: 35
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 88
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 21
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 91
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 94,
            column: 20
          },
          end: {
            line: 94,
            column: 21
          }
        },
        loc: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 40
          }
        },
        line: 94
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 95,
            column: 25
          },
          end: {
            line: 95,
            column: 26
          }
        },
        loc: {
          start: {
            line: 95,
            column: 31
          },
          end: {
            line: 95,
            column: 50
          }
        },
        line: 95
      },
      "20": {
        name: "createStubAtomicOperations",
        decl: {
          start: {
            line: 101,
            column: 9
          },
          end: {
            line: 101,
            column: 35
          }
        },
        loc: {
          start: {
            line: 101,
            column: 48
          },
          end: {
            line: 140,
            column: 1
          }
        },
        line: 101
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 103,
            column: 25
          },
          end: {
            line: 103,
            column: 26
          }
        },
        loc: {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 103
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 104,
            column: 69
          },
          end: {
            line: 104,
            column: 70
          }
        },
        loc: {
          start: {
            line: 104,
            column: 76
          },
          end: {
            line: 108,
            column: 13
          }
        },
        line: 104
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 108,
            column: 16
          },
          end: {
            line: 108,
            column: 17
          }
        },
        loc: {
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 113,
            column: 13
          }
        },
        line: 108
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 115,
            column: 29
          },
          end: {
            line: 115,
            column: 30
          }
        },
        loc: {
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 123,
            column: 9
          }
        },
        line: 115
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 124,
            column: 22
          },
          end: {
            line: 124,
            column: 23
          }
        },
        loc: {
          start: {
            line: 124,
            column: 44
          },
          end: {
            line: 135,
            column: 9
          }
        },
        line: 124
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 125,
            column: 60
          },
          end: {
            line: 125,
            column: 61
          }
        },
        loc: {
          start: {
            line: 125,
            column: 67
          },
          end: {
            line: 129,
            column: 13
          }
        },
        line: 125
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 129,
            column: 16
          },
          end: {
            line: 129,
            column: 17
          }
        },
        loc: {
          start: {
            line: 129,
            column: 28
          },
          end: {
            line: 134,
            column: 13
          }
        },
        line: 129
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 136,
            column: 27
          },
          end: {
            line: 136,
            column: 28
          }
        },
        loc: {
          start: {
            line: 136,
            column: 33
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 136
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        loc: {
          start: {
            line: 145,
            column: 54
          },
          end: {
            line: 149,
            column: 5
          }
        },
        line: 145
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 5
          }
        },
        loc: {
          start: {
            line: 153,
            column: 56
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 153
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 5
          }
        },
        loc: {
          start: {
            line: 159,
            column: 27
          },
          end: {
            line: 172,
            column: 5
          }
        },
        line: 159
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        loc: {
          start: {
            line: 176,
            column: 27
          },
          end: {
            line: 178,
            column: 5
          }
        },
        line: 176
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 191,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        loc: {
          start: {
            line: 191,
            column: 37
          },
          end: {
            line: 332,
            column: 5
          }
        },
        line: 191
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 214,
            column: 26
          },
          end: {
            line: 214,
            column: 27
          }
        },
        loc: {
          start: {
            line: 214,
            column: 46
          },
          end: {
            line: 218,
            column: 17
          }
        },
        line: 214
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 217,
            column: 47
          },
          end: {
            line: 217,
            column: 48
          }
        },
        loc: {
          start: {
            line: 217,
            column: 57
          },
          end: {
            line: 217,
            column: 80
          }
        },
        line: 217
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 226,
            column: 41
          },
          end: {
            line: 226,
            column: 42
          }
        },
        loc: {
          start: {
            line: 226,
            column: 53
          },
          end: {
            line: 245,
            column: 17
          }
        },
        line: 226
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 229,
            column: 34
          },
          end: {
            line: 229,
            column: 35
          }
        },
        loc: {
          start: {
            line: 229,
            column: 47
          },
          end: {
            line: 239,
            column: 25
          }
        },
        line: 229
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 245,
            column: 19
          },
          end: {
            line: 245,
            column: 20
          }
        },
        loc: {
          start: {
            line: 245,
            column: 31
          },
          end: {
            line: 251,
            column: 17
          }
        },
        line: 245
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 42
          }
        },
        loc: {
          start: {
            line: 256,
            column: 53
          },
          end: {
            line: 286,
            column: 17
          }
        },
        line: 256
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 259,
            column: 34
          },
          end: {
            line: 259,
            column: 35
          }
        },
        loc: {
          start: {
            line: 259,
            column: 47
          },
          end: {
            line: 280,
            column: 25
          }
        },
        line: 259
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 286,
            column: 19
          },
          end: {
            line: 286,
            column: 20
          }
        },
        loc: {
          start: {
            line: 286,
            column: 31
          },
          end: {
            line: 292,
            column: 17
          }
        },
        line: 286
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 296,
            column: 41
          },
          end: {
            line: 296,
            column: 42
          }
        },
        loc: {
          start: {
            line: 296,
            column: 53
          },
          end: {
            line: 298,
            column: 17
          }
        },
        line: 296
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 298,
            column: 19
          },
          end: {
            line: 298,
            column: 20
          }
        },
        loc: {
          start: {
            line: 298,
            column: 31
          },
          end: {
            line: 309,
            column: 17
          }
        },
        line: 298
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 336,
            column: 4
          },
          end: {
            line: 336,
            column: 5
          }
        },
        loc: {
          start: {
            line: 336,
            column: 35
          },
          end: {
            line: 351,
            column: 5
          }
        },
        line: 336
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 355,
            column: 5
          }
        },
        loc: {
          start: {
            line: 355,
            column: 56
          },
          end: {
            line: 386,
            column: 5
          }
        },
        line: 355
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 390,
            column: 5
          }
        },
        loc: {
          start: {
            line: 390,
            column: 37
          },
          end: {
            line: 396,
            column: 5
          }
        },
        line: 390
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 400,
            column: 4
          },
          end: {
            line: 400,
            column: 5
          }
        },
        loc: {
          start: {
            line: 400,
            column: 61
          },
          end: {
            line: 425,
            column: 5
          }
        },
        line: 400
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 429,
            column: 4
          },
          end: {
            line: 429,
            column: 5
          }
        },
        loc: {
          start: {
            line: 429,
            column: 37
          },
          end: {
            line: 452,
            column: 5
          }
        },
        line: 429
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 431,
            column: 27
          },
          end: {
            line: 431,
            column: 28
          }
        },
        loc: {
          start: {
            line: 431,
            column: 48
          },
          end: {
            line: 451,
            column: 9
          }
        },
        line: 431
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 436,
            column: 35
          },
          end: {
            line: 436,
            column: 36
          }
        },
        loc: {
          start: {
            line: 436,
            column: 45
          },
          end: {
            line: 446,
            column: 13
          }
        },
        line: 436
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 447,
            column: 35
          },
          end: {
            line: 447,
            column: 36
          }
        },
        loc: {
          start: {
            line: 447,
            column: 46
          },
          end: {
            line: 450,
            column: 13
          }
        },
        line: 447
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 456,
            column: 4
          },
          end: {
            line: 456,
            column: 5
          }
        },
        loc: {
          start: {
            line: 456,
            column: 30
          },
          end: {
            line: 527,
            column: 5
          }
        },
        line: 456
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 532,
            column: 4
          },
          end: {
            line: 532,
            column: 5
          }
        },
        loc: {
          start: {
            line: 532,
            column: 41
          },
          end: {
            line: 548,
            column: 5
          }
        },
        line: 532
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 552,
            column: 4
          },
          end: {
            line: 552,
            column: 5
          }
        },
        loc: {
          start: {
            line: 552,
            column: 25
          },
          end: {
            line: 580,
            column: 5
          }
        },
        line: 552
      },
      "55": {
        name: "(anonymous_55)",
        decl: {
          start: {
            line: 584,
            column: 4
          },
          end: {
            line: 584,
            column: 5
          }
        },
        loc: {
          start: {
            line: 584,
            column: 51
          },
          end: {
            line: 617,
            column: 5
          }
        },
        line: 584
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 621,
            column: 4
          },
          end: {
            line: 621,
            column: 5
          }
        },
        loc: {
          start: {
            line: 621,
            column: 32
          },
          end: {
            line: 623,
            column: 5
          }
        },
        line: 621
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 634,
            column: 4
          },
          end: {
            line: 634,
            column: 5
          }
        },
        loc: {
          start: {
            line: 634,
            column: 42
          },
          end: {
            line: 737,
            column: 5
          }
        },
        line: 634
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 655,
            column: 37
          },
          end: {
            line: 655,
            column: 38
          }
        },
        loc: {
          start: {
            line: 655,
            column: 49
          },
          end: {
            line: 667,
            column: 13
          }
        },
        line: 655
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 657,
            column: 30
          },
          end: {
            line: 657,
            column: 31
          }
        },
        loc: {
          start: {
            line: 657,
            column: 49
          },
          end: {
            line: 662,
            column: 21
          }
        },
        line: 657
      },
      "60": {
        name: "(anonymous_60)",
        decl: {
          start: {
            line: 667,
            column: 15
          },
          end: {
            line: 667,
            column: 16
          }
        },
        loc: {
          start: {
            line: 667,
            column: 27
          },
          end: {
            line: 677,
            column: 13
          }
        },
        line: 667
      },
      "61": {
        name: "(anonymous_61)",
        decl: {
          start: {
            line: 681,
            column: 41
          },
          end: {
            line: 681,
            column: 42
          }
        },
        loc: {
          start: {
            line: 681,
            column: 53
          },
          end: {
            line: 700,
            column: 17
          }
        },
        line: 681
      },
      "62": {
        name: "(anonymous_62)",
        decl: {
          start: {
            line: 686,
            column: 34
          },
          end: {
            line: 686,
            column: 35
          }
        },
        loc: {
          start: {
            line: 686,
            column: 47
          },
          end: {
            line: 694,
            column: 25
          }
        },
        line: 686
      },
      "63": {
        name: "(anonymous_63)",
        decl: {
          start: {
            line: 700,
            column: 19
          },
          end: {
            line: 700,
            column: 20
          }
        },
        loc: {
          start: {
            line: 700,
            column: 31
          },
          end: {
            line: 711,
            column: 17
          }
        },
        line: 700
      },
      "64": {
        name: "(anonymous_64)",
        decl: {
          start: {
            line: 714,
            column: 37
          },
          end: {
            line: 714,
            column: 38
          }
        },
        loc: {
          start: {
            line: 714,
            column: 49
          },
          end: {
            line: 716,
            column: 13
          }
        },
        line: 714
      },
      "65": {
        name: "(anonymous_65)",
        decl: {
          start: {
            line: 716,
            column: 15
          },
          end: {
            line: 716,
            column: 16
          }
        },
        loc: {
          start: {
            line: 716,
            column: 27
          },
          end: {
            line: 724,
            column: 13
          }
        },
        line: 716
      },
      "66": {
        name: "(anonymous_66)",
        decl: {
          start: {
            line: 741,
            column: 4
          },
          end: {
            line: 741,
            column: 5
          }
        },
        loc: {
          start: {
            line: 741,
            column: 66
          },
          end: {
            line: 759,
            column: 5
          }
        },
        line: 741
      },
      "67": {
        name: "(anonymous_67)",
        decl: {
          start: {
            line: 763,
            column: 4
          },
          end: {
            line: 763,
            column: 5
          }
        },
        loc: {
          start: {
            line: 763,
            column: 37
          },
          end: {
            line: 766,
            column: 5
          }
        },
        line: 763
      },
      "68": {
        name: "(anonymous_68)",
        decl: {
          start: {
            line: 770,
            column: 4
          },
          end: {
            line: 770,
            column: 5
          }
        },
        loc: {
          start: {
            line: 770,
            column: 20
          },
          end: {
            line: 773,
            column: 5
          }
        },
        line: 770
      },
      "69": {
        name: "createWebsiteManager",
        decl: {
          start: {
            line: 779,
            column: 9
          },
          end: {
            line: 779,
            column: 29
          }
        },
        loc: {
          start: {
            line: 779,
            column: 68
          },
          end: {
            line: 781,
            column: 1
          }
        },
        line: 779
      },
      "70": {
        name: "isWebsiteManager",
        decl: {
          start: {
            line: 785,
            column: 9
          },
          end: {
            line: 785,
            column: 25
          }
        },
        loc: {
          start: {
            line: 785,
            column: 31
          },
          end: {
            line: 793,
            column: 1
          }
        },
        line: 785
      },
      "71": {
        name: "createWebsiteWithName",
        decl: {
          start: {
            line: 800,
            column: 15
          },
          end: {
            line: 800,
            column: 36
          }
        },
        loc: {
          start: {
            line: 800,
            column: 50
          },
          end: {
            line: 814,
            column: 1
          }
        },
        line: 800
      },
      "72": {
        name: "(anonymous_72)",
        decl: {
          start: {
            line: 804,
            column: 15
          },
          end: {
            line: 804,
            column: 16
          }
        },
        loc: {
          start: {
            line: 804,
            column: 21
          },
          end: {
            line: 804,
            column: 24
          }
        },
        line: 804
      },
      "73": {
        name: "(anonymous_73)",
        decl: {
          start: {
            line: 805,
            column: 14
          },
          end: {
            line: 805,
            column: 15
          }
        },
        loc: {
          start: {
            line: 805,
            column: 20
          },
          end: {
            line: 805,
            column: 23
          }
        },
        line: 805
      },
      "74": {
        name: "(anonymous_74)",
        decl: {
          start: {
            line: 808,
            column: 15
          },
          end: {
            line: 808,
            column: 16
          }
        },
        loc: {
          start: {
            line: 808,
            column: 21
          },
          end: {
            line: 808,
            column: 27
          }
        },
        line: 808
      },
      "75": {
        name: "validateWebsiteName",
        decl: {
          start: {
            line: 819,
            column: 9
          },
          end: {
            line: 819,
            column: 28
          }
        },
        loc: {
          start: {
            line: 819,
            column: 35
          },
          end: {
            line: 833,
            column: 1
          }
        },
        line: 819
      },
      "76": {
        name: "(anonymous_76)",
        decl: {
          start: {
            line: 823,
            column: 15
          },
          end: {
            line: 823,
            column: 16
          }
        },
        loc: {
          start: {
            line: 823,
            column: 21
          },
          end: {
            line: 823,
            column: 24
          }
        },
        line: 823
      },
      "77": {
        name: "(anonymous_77)",
        decl: {
          start: {
            line: 824,
            column: 14
          },
          end: {
            line: 824,
            column: 15
          }
        },
        loc: {
          start: {
            line: 824,
            column: 20
          },
          end: {
            line: 824,
            column: 23
          }
        },
        line: 824
      },
      "78": {
        name: "(anonymous_78)",
        decl: {
          start: {
            line: 827,
            column: 15
          },
          end: {
            line: 827,
            column: 16
          }
        },
        loc: {
          start: {
            line: 827,
            column: 21
          },
          end: {
            line: 827,
            column: 27
          }
        },
        line: 827
      },
      "79": {
        name: "validateWebsiteNameAsync",
        decl: {
          start: {
            line: 838,
            column: 15
          },
          end: {
            line: 838,
            column: 39
          }
        },
        loc: {
          start: {
            line: 838,
            column: 46
          },
          end: {
            line: 852,
            column: 1
          }
        },
        line: 838
      },
      "80": {
        name: "(anonymous_80)",
        decl: {
          start: {
            line: 842,
            column: 15
          },
          end: {
            line: 842,
            column: 16
          }
        },
        loc: {
          start: {
            line: 842,
            column: 21
          },
          end: {
            line: 842,
            column: 24
          }
        },
        line: 842
      },
      "81": {
        name: "(anonymous_81)",
        decl: {
          start: {
            line: 843,
            column: 14
          },
          end: {
            line: 843,
            column: 15
          }
        },
        loc: {
          start: {
            line: 843,
            column: 20
          },
          end: {
            line: 843,
            column: 23
          }
        },
        line: 843
      },
      "82": {
        name: "(anonymous_82)",
        decl: {
          start: {
            line: 846,
            column: 15
          },
          end: {
            line: 846,
            column: 16
          }
        },
        loc: {
          start: {
            line: 846,
            column: 21
          },
          end: {
            line: 846,
            column: 27
          }
        },
        line: 846
      },
      "83": {
        name: "listWebsites",
        decl: {
          start: {
            line: 857,
            column: 15
          },
          end: {
            line: 857,
            column: 27
          }
        },
        loc: {
          start: {
            line: 857,
            column: 30
          },
          end: {
            line: 871,
            column: 1
          }
        },
        line: 857
      },
      "84": {
        name: "(anonymous_84)",
        decl: {
          start: {
            line: 861,
            column: 15
          },
          end: {
            line: 861,
            column: 16
          }
        },
        loc: {
          start: {
            line: 861,
            column: 21
          },
          end: {
            line: 861,
            column: 24
          }
        },
        line: 861
      },
      "85": {
        name: "(anonymous_85)",
        decl: {
          start: {
            line: 862,
            column: 14
          },
          end: {
            line: 862,
            column: 15
          }
        },
        loc: {
          start: {
            line: 862,
            column: 20
          },
          end: {
            line: 862,
            column: 23
          }
        },
        line: 862
      },
      "86": {
        name: "(anonymous_86)",
        decl: {
          start: {
            line: 865,
            column: 15
          },
          end: {
            line: 865,
            column: 16
          }
        },
        loc: {
          start: {
            line: 865,
            column: 21
          },
          end: {
            line: 865,
            column: 27
          }
        },
        line: 865
      },
      "87": {
        name: "getWebsitePath",
        decl: {
          start: {
            line: 876,
            column: 9
          },
          end: {
            line: 876,
            column: 23
          }
        },
        loc: {
          start: {
            line: 876,
            column: 37
          },
          end: {
            line: 890,
            column: 1
          }
        },
        line: 876
      },
      "88": {
        name: "(anonymous_88)",
        decl: {
          start: {
            line: 880,
            column: 15
          },
          end: {
            line: 880,
            column: 16
          }
        },
        loc: {
          start: {
            line: 880,
            column: 21
          },
          end: {
            line: 880,
            column: 24
          }
        },
        line: 880
      },
      "89": {
        name: "(anonymous_89)",
        decl: {
          start: {
            line: 881,
            column: 14
          },
          end: {
            line: 881,
            column: 15
          }
        },
        loc: {
          start: {
            line: 881,
            column: 20
          },
          end: {
            line: 881,
            column: 23
          }
        },
        line: 881
      },
      "90": {
        name: "(anonymous_90)",
        decl: {
          start: {
            line: 884,
            column: 15
          },
          end: {
            line: 884,
            column: 16
          }
        },
        loc: {
          start: {
            line: 884,
            column: 21
          },
          end: {
            line: 884,
            column: 27
          }
        },
        line: 884
      },
      "91": {
        name: "renameWebsite",
        decl: {
          start: {
            line: 895,
            column: 15
          },
          end: {
            line: 895,
            column: 28
          }
        },
        loc: {
          start: {
            line: 895,
            column: 47
          },
          end: {
            line: 909,
            column: 1
          }
        },
        line: 895
      },
      "92": {
        name: "(anonymous_92)",
        decl: {
          start: {
            line: 899,
            column: 15
          },
          end: {
            line: 899,
            column: 16
          }
        },
        loc: {
          start: {
            line: 899,
            column: 21
          },
          end: {
            line: 899,
            column: 24
          }
        },
        line: 899
      },
      "93": {
        name: "(anonymous_93)",
        decl: {
          start: {
            line: 900,
            column: 14
          },
          end: {
            line: 900,
            column: 15
          }
        },
        loc: {
          start: {
            line: 900,
            column: 20
          },
          end: {
            line: 900,
            column: 23
          }
        },
        line: 900
      },
      "94": {
        name: "(anonymous_94)",
        decl: {
          start: {
            line: 903,
            column: 15
          },
          end: {
            line: 903,
            column: 16
          }
        },
        loc: {
          start: {
            line: 903,
            column: 21
          },
          end: {
            line: 903,
            column: 27
          }
        },
        line: 903
      },
      "95": {
        name: "deleteWebsite",
        decl: {
          start: {
            line: 914,
            column: 15
          },
          end: {
            line: 914,
            column: 28
          }
        },
        loc: {
          start: {
            line: 914,
            column: 42
          },
          end: {
            line: 928,
            column: 1
          }
        },
        line: 914
      },
      "96": {
        name: "(anonymous_96)",
        decl: {
          start: {
            line: 918,
            column: 15
          },
          end: {
            line: 918,
            column: 16
          }
        },
        loc: {
          start: {
            line: 918,
            column: 21
          },
          end: {
            line: 918,
            column: 24
          }
        },
        line: 918
      },
      "97": {
        name: "(anonymous_97)",
        decl: {
          start: {
            line: 919,
            column: 14
          },
          end: {
            line: 919,
            column: 15
          }
        },
        loc: {
          start: {
            line: 919,
            column: 20
          },
          end: {
            line: 919,
            column: 23
          }
        },
        line: 919
      },
      "98": {
        name: "(anonymous_98)",
        decl: {
          start: {
            line: 922,
            column: 15
          },
          end: {
            line: 922,
            column: 16
          }
        },
        loc: {
          start: {
            line: 922,
            column: 21
          },
          end: {
            line: 922,
            column: 27
          }
        },
        line: 922
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 12,
            column: 3
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 2,
            column: 57
          },
          end: {
            line: 12,
            column: 2
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 2,
            column: 74
          },
          end: {
            line: 9,
            column: 1
          }
        }, {
          start: {
            line: 9,
            column: 6
          },
          end: {
            line: 12,
            column: 1
          }
        }],
        line: 2
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 3,
            column: 4
          },
          end: {
            line: 3,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 5,
            column: 4
          },
          end: {
            line: 7,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 5
      },
      "4": {
        loc: {
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 85
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 8
          },
          end: {
            line: 5,
            column: 13
          }
        }, {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "5": {
        loc: {
          start: {
            line: 5,
            column: 18
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 5,
            column: 34
          },
          end: {
            line: 5,
            column: 47
          }
        }, {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "6": {
        loc: {
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 5,
            column: 50
          },
          end: {
            line: 5,
            column: 63
          }
        }, {
          start: {
            line: 5,
            column: 67
          },
          end: {
            line: 5,
            column: 84
          }
        }],
        line: 5
      },
      "7": {
        loc: {
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 10,
            column: 4
          },
          end: {
            line: 10,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 10
      },
      "8": {
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 17,
            column: 2
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 13,
            column: 30
          }
        }, {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 13,
            column: 57
          }
        }, {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "9": {
        loc: {
          start: {
            line: 13,
            column: 63
          },
          end: {
            line: 17,
            column: 1
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 13,
            column: 80
          },
          end: {
            line: 15,
            column: 1
          }
        }, {
          start: {
            line: 15,
            column: 5
          },
          end: {
            line: 17,
            column: 1
          }
        }],
        line: 13
      },
      "10": {
        loc: {
          start: {
            line: 18,
            column: 19
          },
          end: {
            line: 34,
            column: 4
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 20
          },
          end: {
            line: 18,
            column: 24
          }
        }, {
          start: {
            line: 18,
            column: 28
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 50
          },
          end: {
            line: 34,
            column: 4
          }
        }],
        line: 18
      },
      "11": {
        loc: {
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 24,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 20,
            column: 18
          },
          end: {
            line: 20,
            column: 44
          }
        }, {
          start: {
            line: 20,
            column: 48
          },
          end: {
            line: 24,
            column: 9
          }
        }],
        line: 20
      },
      "12": {
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 95
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "13": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 46
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "14": {
        loc: {
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 12
          },
          end: {
            line: 28,
            column: 15
          }
        }, {
          start: {
            line: 28,
            column: 19
          },
          end: {
            line: 28,
            column: 33
          }
        }],
        line: 28
      },
      "15": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "16": {
        loc: {
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 78
          },
          end: {
            line: 30,
            column: 137
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "17": {
        loc: {
          start: {
            line: 165,
            column: 32
          },
          end: {
            line: 169,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 166,
            column: 18
          },
          end: {
            line: 166,
            column: 88
          }
        }, {
          start: {
            line: 167,
            column: 18
          },
          end: {
            line: 169,
            column: 69
          }
        }],
        line: 165
      },
      "18": {
        loc: {
          start: {
            line: 167,
            column: 18
          },
          end: {
            line: 169,
            column: 69
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 22
          },
          end: {
            line: 168,
            column: 71
          }
        }, {
          start: {
            line: 169,
            column: 22
          },
          end: {
            line: 169,
            column: 69
          }
        }],
        line: 167
      },
      "19": {
        loc: {
          start: {
            line: 168,
            column: 32
          },
          end: {
            line: 168,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 168,
            column: 32
          },
          end: {
            line: 168,
            column: 51
          }
        }, {
          start: {
            line: 168,
            column: 55
          },
          end: {
            line: 168,
            column: 57
          }
        }],
        line: 168
      },
      "20": {
        loc: {
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 196,
            column: 8
          },
          end: {
            line: 198,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 196
      },
      "21": {
        loc: {
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 200,
            column: 8
          },
          end: {
            line: 202,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 200
      },
      "22": {
        loc: {
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 205,
            column: 8
          },
          end: {
            line: 207,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 205
      },
      "23": {
        loc: {
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 220,
            column: 12
          },
          end: {
            line: 222,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 220
      },
      "24": {
        loc: {
          start: {
            line: 221,
            column: 22
          },
          end: {
            line: 221,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 221,
            column: 22
          },
          end: {
            line: 221,
            column: 38
          }
        }, {
          start: {
            line: 221,
            column: 42
          },
          end: {
            line: 221,
            column: 88
          }
        }],
        line: 221
      },
      "25": {
        loc: {
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 225,
            column: 12
          },
          end: {
            line: 252,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 225
      },
      "26": {
        loc: {
          start: {
            line: 233,
            column: 44
          },
          end: {
            line: 233,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 233,
            column: 44
          },
          end: {
            line: 233,
            column: 54
          }
        }, {
          start: {
            line: 233,
            column: 58
          },
          end: {
            line: 233,
            column: 66
          }
        }],
        line: 233
      },
      "27": {
        loc: {
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 237,
            column: 29
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 234,
            column: 28
          },
          end: {
            line: 237,
            column: 29
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 234
      },
      "28": {
        loc: {
          start: {
            line: 242,
            column: 20
          },
          end: {
            line: 244,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 242,
            column: 20
          },
          end: {
            line: 244,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 242
      },
      "29": {
        loc: {
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 243,
            column: 30
          },
          end: {
            line: 243,
            column: 47
          }
        }, {
          start: {
            line: 243,
            column: 51
          },
          end: {
            line: 243,
            column: 92
          }
        }],
        line: 243
      },
      "30": {
        loc: {
          start: {
            line: 248,
            column: 20
          },
          end: {
            line: 250,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 248,
            column: 20
          },
          end: {
            line: 250,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 248
      },
      "31": {
        loc: {
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 255,
            column: 12
          },
          end: {
            line: 293,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 255
      },
      "32": {
        loc: {
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 271,
            column: 33
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 265,
            column: 32
          },
          end: {
            line: 271,
            column: 33
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 265
      },
      "33": {
        loc: {
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 285,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 283,
            column: 20
          },
          end: {
            line: 285,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 283
      },
      "34": {
        loc: {
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 96
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 284,
            column: 30
          },
          end: {
            line: 284,
            column: 47
          }
        }, {
          start: {
            line: 284,
            column: 51
          },
          end: {
            line: 284,
            column: 96
          }
        }],
        line: 284
      },
      "35": {
        loc: {
          start: {
            line: 289,
            column: 20
          },
          end: {
            line: 291,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 289,
            column: 20
          },
          end: {
            line: 291,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 289
      },
      "36": {
        loc: {
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 12
          },
          end: {
            line: 310,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "37": {
        loc: {
          start: {
            line: 301,
            column: 20
          },
          end: {
            line: 308,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 301,
            column: 20
          },
          end: {
            line: 308,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 301
      },
      "38": {
        loc: {
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 315,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 313,
            column: 12
          },
          end: {
            line: 315,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 313
      },
      "39": {
        loc: {
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 314,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 314,
            column: 22
          },
          end: {
            line: 314,
            column: 34
          }
        }, {
          start: {
            line: 314,
            column: 38
          },
          end: {
            line: 314,
            column: 86
          }
        }],
        line: 314
      },
      "40": {
        loc: {
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 322,
            column: 12
          },
          end: {
            line: 329,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 322
      },
      "41": {
        loc: {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 347,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 344
      },
      "42": {
        loc: {
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 407,
            column: 8
          },
          end: {
            line: 423,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 407
      },
      "43": {
        loc: {
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 409,
            column: 12
          },
          end: {
            line: 415,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 409
      },
      "44": {
        loc: {
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 416,
            column: 12
          },
          end: {
            line: 422,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 416
      },
      "45": {
        loc: {
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 437,
            column: 16
          },
          end: {
            line: 445,
            column: 17
          }
        }, {
          start: {
            line: 441,
            column: 21
          },
          end: {
            line: 445,
            column: 17
          }
        }],
        line: 437
      },
      "46": {
        loc: {
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 457,
            column: 8
          },
          end: {
            line: 459,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 457
      },
      "47": {
        loc: {
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 457,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 457,
            column: 12
          },
          end: {
            line: 457,
            column: 17
          }
        }, {
          start: {
            line: 457,
            column: 21
          },
          end: {
            line: 457,
            column: 45
          }
        }],
        line: 457
      },
      "48": {
        loc: {
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 462,
            column: 8
          },
          end: {
            line: 467,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 462
      },
      "49": {
        loc: {
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 473,
            column: 8
          },
          end: {
            line: 478,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 473
      },
      "50": {
        loc: {
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 480,
            column: 8
          },
          end: {
            line: 485,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 480
      },
      "51": {
        loc: {
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 480,
            column: 92
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 480,
            column: 12
          },
          end: {
            line: 480,
            column: 60
          }
        }, {
          start: {
            line: 480,
            column: 64
          },
          end: {
            line: 480,
            column: 92
          }
        }],
        line: 480
      },
      "52": {
        loc: {
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 492,
            column: 8
          },
          end: {
            line: 497,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 492
      },
      "53": {
        loc: {
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 504,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 504,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 499
      },
      "54": {
        loc: {
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 505,
            column: 8
          },
          end: {
            line: 510,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 505
      },
      "55": {
        loc: {
          start: {
            line: 505,
            column: 12
          },
          end: {
            line: 505,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 505,
            column: 12
          },
          end: {
            line: 505,
            column: 32
          }
        }, {
          start: {
            line: 505,
            column: 36
          },
          end: {
            line: 505,
            column: 54
          }
        }],
        line: 505
      },
      "56": {
        loc: {
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 513,
            column: 8
          },
          end: {
            line: 518,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 513
      },
      "57": {
        loc: {
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 520,
            column: 8
          },
          end: {
            line: 525,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 520
      },
      "58": {
        loc: {
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 535,
            column: 8
          },
          end: {
            line: 537,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 535
      },
      "59": {
        loc: {
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 541,
            column: 8
          },
          end: {
            line: 546,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 541
      },
      "60": {
        loc: {
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 554,
            column: 8
          },
          end: {
            line: 556,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 554
      },
      "61": {
        loc: {
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 567,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 565,
            column: 20
          },
          end: {
            line: 567,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 565
      },
      "62": {
        loc: {
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 590,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 588,
            column: 8
          },
          end: {
            line: 590,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 588
      },
      "63": {
        loc: {
          start: {
            line: 601,
            column: 23
          },
          end: {
            line: 603,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 602,
            column: 14
          },
          end: {
            line: 602,
            column: 79
          }
        }, {
          start: {
            line: 603,
            column: 14
          },
          end: {
            line: 603,
            column: 65
          }
        }],
        line: 601
      },
      "64": {
        loc: {
          start: {
            line: 604,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 604,
            column: 8
          },
          end: {
            line: 614,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 604
      },
      "65": {
        loc: {
          start: {
            line: 638,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 638,
            column: 8
          },
          end: {
            line: 640,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 638
      },
      "66": {
        loc: {
          start: {
            line: 639,
            column: 28
          },
          end: {
            line: 639,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 639,
            column: 28
          },
          end: {
            line: 639,
            column: 44
          }
        }, {
          start: {
            line: 639,
            column: 48
          },
          end: {
            line: 639,
            column: 70
          }
        }],
        line: 639
      },
      "67": {
        loc: {
          start: {
            line: 645,
            column: 8
          },
          end: {
            line: 647,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 645,
            column: 8
          },
          end: {
            line: 647,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 645
      },
      "68": {
        loc: {
          start: {
            line: 648,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 648,
            column: 8
          },
          end: {
            line: 650,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 648
      },
      "69": {
        loc: {
          start: {
            line: 661,
            column: 31
          },
          end: {
            line: 661,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 661,
            column: 32
          },
          end: {
            line: 661,
            column: 58
          }
        }, {
          start: {
            line: 661,
            column: 64
          },
          end: {
            line: 661,
            column: 98
          }
        }],
        line: 661
      },
      "70": {
        loc: {
          start: {
            line: 664,
            column: 16
          },
          end: {
            line: 666,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 664,
            column: 16
          },
          end: {
            line: 666,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 664
      },
      "71": {
        loc: {
          start: {
            line: 665,
            column: 26
          },
          end: {
            line: 665,
            column: 95
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 665,
            column: 26
          },
          end: {
            line: 665,
            column: 44
          }
        }, {
          start: {
            line: 665,
            column: 48
          },
          end: {
            line: 665,
            column: 95
          }
        }],
        line: 665
      },
      "72": {
        loc: {
          start: {
            line: 669,
            column: 16
          },
          end: {
            line: 676,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 669,
            column: 16
          },
          end: {
            line: 676,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 669
      },
      "73": {
        loc: {
          start: {
            line: 680,
            column: 12
          },
          end: {
            line: 712,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 680,
            column: 12
          },
          end: {
            line: 712,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 680
      },
      "74": {
        loc: {
          start: {
            line: 697,
            column: 20
          },
          end: {
            line: 699,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 697,
            column: 20
          },
          end: {
            line: 699,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 697
      },
      "75": {
        loc: {
          start: {
            line: 698,
            column: 30
          },
          end: {
            line: 698,
            column: 107
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 698,
            column: 30
          },
          end: {
            line: 698,
            column: 47
          }
        }, {
          start: {
            line: 698,
            column: 51
          },
          end: {
            line: 698,
            column: 107
          }
        }],
        line: 698
      },
      "76": {
        loc: {
          start: {
            line: 703,
            column: 20
          },
          end: {
            line: 710,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 703,
            column: 20
          },
          end: {
            line: 710,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 703
      },
      "77": {
        loc: {
          start: {
            line: 727,
            column: 12
          },
          end: {
            line: 729,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 727,
            column: 12
          },
          end: {
            line: 729,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 727
      },
      "78": {
        loc: {
          start: {
            line: 728,
            column: 22
          },
          end: {
            line: 728,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 728,
            column: 22
          },
          end: {
            line: 728,
            column: 34
          }
        }, {
          start: {
            line: 728,
            column: 38
          },
          end: {
            line: 728,
            column: 84
          }
        }],
        line: 728
      },
      "79": {
        loc: {
          start: {
            line: 744,
            column: 8
          },
          end: {
            line: 758,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 744,
            column: 8
          },
          end: {
            line: 758,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 744
      },
      "80": {
        loc: {
          start: {
            line: 746,
            column: 12
          },
          end: {
            line: 757,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 746,
            column: 12
          },
          end: {
            line: 757,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 746
      },
      "81": {
        loc: {
          start: {
            line: 751,
            column: 16
          },
          end: {
            line: 756,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 751,
            column: 16
          },
          end: {
            line: 756,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 751
      },
      "82": {
        loc: {
          start: {
            line: 753,
            column: 20
          },
          end: {
            line: 755,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 753,
            column: 20
          },
          end: {
            line: 755,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 753
      },
      "83": {
        loc: {
          start: {
            line: 754,
            column: 30
          },
          end: {
            line: 754,
            column: 100
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 754,
            column: 30
          },
          end: {
            line: 754,
            column: 47
          }
        }, {
          start: {
            line: 754,
            column: 51
          },
          end: {
            line: 754,
            column: 100
          }
        }],
        line: 754
      },
      "84": {
        loc: {
          start: {
            line: 786,
            column: 12
          },
          end: {
            line: 792,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 786,
            column: 12
          },
          end: {
            line: 786,
            column: 24
          }
        }, {
          start: {
            line: 787,
            column: 8
          },
          end: {
            line: 787,
            column: 31
          }
        }, {
          start: {
            line: 788,
            column: 8
          },
          end: {
            line: 788,
            column: 47
          }
        }, {
          start: {
            line: 789,
            column: 8
          },
          end: {
            line: 789,
            column: 47
          }
        }, {
          start: {
            line: 790,
            column: 8
          },
          end: {
            line: 790,
            column: 46
          }
        }, {
          start: {
            line: 791,
            column: 8
          },
          end: {
            line: 791,
            column: 53
          }
        }, {
          start: {
            line: 792,
            column: 8
          },
          end: {
            line: 792,
            column: 41
          }
        }],
        line: 786
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0,
      "212": 0,
      "213": 0,
      "214": 0,
      "215": 0,
      "216": 0,
      "217": 0,
      "218": 0,
      "219": 0,
      "220": 0,
      "221": 0,
      "222": 0,
      "223": 0,
      "224": 0,
      "225": 0,
      "226": 0,
      "227": 0,
      "228": 0,
      "229": 0,
      "230": 0,
      "231": 0,
      "232": 0,
      "233": 0,
      "234": 0,
      "235": 0,
      "236": 0,
      "237": 0,
      "238": 0,
      "239": 0,
      "240": 0,
      "241": 0,
      "242": 0,
      "243": 0,
      "244": 0,
      "245": 0,
      "246": 0,
      "247": 0,
      "248": 0,
      "249": 0,
      "250": 0,
      "251": 0,
      "252": 0,
      "253": 0,
      "254": 0,
      "255": 0,
      "256": 0,
      "257": 0,
      "258": 0,
      "259": 0,
      "260": 0,
      "261": 0,
      "262": 0,
      "263": 0,
      "264": 0,
      "265": 0,
      "266": 0,
      "267": 0,
      "268": 0,
      "269": 0,
      "270": 0,
      "271": 0,
      "272": 0,
      "273": 0,
      "274": 0,
      "275": 0,
      "276": 0,
      "277": 0,
      "278": 0,
      "279": 0,
      "280": 0,
      "281": 0,
      "282": 0,
      "283": 0,
      "284": 0,
      "285": 0,
      "286": 0,
      "287": 0,
      "288": 0,
      "289": 0,
      "290": 0,
      "291": 0,
      "292": 0,
      "293": 0,
      "294": 0,
      "295": 0,
      "296": 0,
      "297": 0,
      "298": 0,
      "299": 0,
      "300": 0,
      "301": 0,
      "302": 0,
      "303": 0,
      "304": 0,
      "305": 0,
      "306": 0,
      "307": 0,
      "308": 0,
      "309": 0,
      "310": 0,
      "311": 0,
      "312": 0,
      "313": 0,
      "314": 0,
      "315": 0,
      "316": 0,
      "317": 0,
      "318": 0,
      "319": 0,
      "320": 0,
      "321": 0,
      "322": 0,
      "323": 0,
      "324": 0,
      "325": 0,
      "326": 0,
      "327": 0,
      "328": 0,
      "329": 0,
      "330": 0,
      "331": 0,
      "332": 0,
      "333": 0,
      "334": 0,
      "335": 0,
      "336": 0,
      "337": 0,
      "338": 0,
      "339": 0,
      "340": 0,
      "341": 0,
      "342": 0,
      "343": 0,
      "344": 0,
      "345": 0,
      "346": 0,
      "347": 0,
      "348": 0,
      "349": 0,
      "350": 0,
      "351": 0,
      "352": 0,
      "353": 0,
      "354": 0,
      "355": 0,
      "356": 0,
      "357": 0,
      "358": 0,
      "359": 0,
      "360": 0,
      "361": 0,
      "362": 0,
      "363": 0,
      "364": 0,
      "365": 0,
      "366": 0,
      "367": 0,
      "368": 0,
      "369": 0,
      "370": 0,
      "371": 0,
      "372": 0,
      "373": 0,
      "374": 0,
      "375": 0,
      "376": 0,
      "377": 0,
      "378": 0,
      "379": 0,
      "380": 0,
      "381": 0,
      "382": 0,
      "383": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0, 0],
      "9": [0, 0],
      "10": [0, 0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0],
      "57": [0, 0],
      "58": [0, 0],
      "59": [0, 0],
      "60": [0, 0],
      "61": [0, 0],
      "62": [0, 0],
      "63": [0, 0],
      "64": [0, 0],
      "65": [0, 0],
      "66": [0, 0],
      "67": [0, 0],
      "68": [0, 0],
      "69": [0, 0],
      "70": [0, 0],
      "71": [0, 0],
      "72": [0, 0],
      "73": [0, 0],
      "74": [0, 0],
      "75": [0, 0],
      "76": [0, 0],
      "77": [0, 0],
      "78": [0, 0],
      "79": [0, 0],
      "80": [0, 0],
      "81": [0, 0],
      "82": [0, 0],
      "83": [0, 0],
      "84": [0, 0, 0, 0, 0, 0, 0]
    },
    inputSourceMap: {
      file: "/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/utils/website-manager.ts",
      mappings: "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",
      names: [],
      sources: ["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/app/utils/website-manager.ts"],
      sourcesContent: ["/**\n * @file DI-compatible Website Management Service\n *\n * Refactored version of website management utilities that implements IWebsiteManager.\n * interface and uses dependency injection for better testability and maintainability.\n */\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as os from 'os';\nimport { spawn } from 'child_process';\n// BufferEncoding is a built-in Node.js type alias\ntype BufferEncoding =\n  | 'ascii'\n  | 'utf8'\n  | 'utf-8'\n  | 'utf16le'\n  | 'ucs2'\n  | 'ucs-2'\n  | 'base64'\n  | 'base64url'\n  | 'latin1'\n  | 'binary'\n  | 'hex';\nimport { dialog, BrowserWindow, app } from 'electron';\nimport { createAtomicTransaction, atomicWriteFile, atomicCopyDirectory, atomicRename } from './atomic-operations';\nimport { IWebsiteManager, ILogger, IFileSystem, IAtomicOperations } from '../core/interfaces';\nimport { ErrorUtils, AtomicOperationError } from '../core/errors';\n\n// Helper classes for fallback functionality\nclass FileSystemService implements IFileSystem {\n  async exists(path: string): Promise<boolean> {\n    try {\n      await fs.promises.stat(path);\n      return true;\n    } catch {\n      return false;\n    }\n  }\n  async readFile(path: string, encoding?: BufferEncoding): Promise<string | Buffer> {\n    return fs.promises.readFile(path, encoding);\n  }\n  async writeFile(path: string, data: string | Buffer, encoding?: BufferEncoding): Promise<void> {\n    return fs.promises.writeFile(path, data, encoding);\n  }\n  async mkdir(path: string, options?: { recursive?: boolean }): Promise<void> {\n    await fs.promises.mkdir(path, options);\n  }\n  async readdir(path: string): Promise<string[]> {\n    return fs.promises.readdir(path);\n  }\n  async rmdir(path: string, options?: { recursive?: boolean }): Promise<void> {\n    await fs.promises.rm(path, { recursive: options?.recursive, force: true });\n  }\n  async copyFile(src: string, dest: string): Promise<void> {\n    return fs.promises.copyFile(src, dest);\n  }\n  async rename(oldPath: string, newPath: string): Promise<void> {\n    return fs.promises.rename(oldPath, newPath);\n  }\n  async stat(path: string) {\n    const stats = await fs.promises.stat(path);\n    return {\n      isFile: () => stats.isFile(),\n      isDirectory: () => stats.isDirectory(),\n      size: stats.size,\n      mtime: stats.mtime,\n    };\n  }\n}\n\nfunction createStubAtomicOperations(fileSystem: IFileSystem): IAtomicOperations {\n  return {\n    writeFileAtomic: (path: string, content: string | Buffer) => {\n      return fileSystem.writeFile(path, content, 'utf-8').then(\n        () => ({\n          success: true,\n          rollbackPerformed: false,\n          temporaryPaths: [],\n        }),\n        (error) => ({\n          success: false,\n          error: ErrorUtils.wrap(error) as AtomicOperationError,\n          rollbackPerformed: false,\n          temporaryPaths: [],\n        })\n      );\n    },\n    copyDirectoryAtomic: () => {\n      const error = new AtomicOperationError(\n        'copyDirectoryAtomic not implemented yet',\n        'NOT_IMPLEMENTED',\n        'copyDirectoryAtomic'\n      );\n      return Promise.resolve({\n        success: false,\n        error: error,\n        rollbackPerformed: false,\n        temporaryPaths: [],\n      });\n    },\n    renameAtomic: (oldPath: string, newPath: string) => {\n      return fileSystem.rename(oldPath, newPath).then(\n        () => ({\n          success: true,\n          rollbackPerformed: false,\n          temporaryPaths: [],\n        }),\n        (error) => ({\n          success: false,\n          error: ErrorUtils.wrap(error) as AtomicOperationError,\n          rollbackPerformed: false,\n          temporaryPaths: [],\n        })\n      );\n    },\n    createTransaction: () => {\n      throw new AtomicOperationError('createTransaction not implemented yet', 'NOT_IMPLEMENTED', 'createTransaction');\n    },\n  };\n}\n\n/**\n * DI-compatible WebsiteManager implementation.\n */\nexport class WebsiteManager implements IWebsiteManager {\n  private readonly logger: ILogger;\n\n  constructor(\n    logger: ILogger,\n    private readonly fileSystem: IFileSystem,\n    private readonly atomicOperations: IAtomicOperations\n  ) {\n    this.logger = logger.child({ service: 'WebsiteManager' });\n  }\n\n  /**\n   * Static factory method for DI container.\n   */\n  static create(logger: ILogger, fileSystem: IFileSystem, atomicOperations: IAtomicOperations): WebsiteManager {\n    return new WebsiteManager(logger, fileSystem, atomicOperations);\n  }\n\n  /**\n   * Get the platform-specific websites directory path.\n   */\n  private getWebsitesDirectory(): string {\n    try {\n      return path.join(app.getPath('userData'), 'websites');\n    } catch {\n      // Fallback for test environments\n      const appDataPath =\n        process.platform === 'darwin'\n          ? path.join(os.homedir(), 'Library', 'Application Support', 'Anglesite')\n          : process.platform === 'win32'\n            ? path.join(process.env.APPDATA || '', 'Anglesite')\n            : path.join(os.homedir(), '.config', 'anglesite');\n\n      return path.join(appDataPath, 'websites');\n    }\n  }\n\n  /**\n   * Helper to check if file exists using the injected file system.\n   */\n  private async exists(filePath: string): Promise<boolean> {\n    return await this.fileSystem.exists(filePath);\n  }\n\n  /**\n   * Create a new website with the specified name and basic structure.\n   *\n   * This function uses atomic operations to ensure data integrity:\n   * - Creates website in temporary location first\n   * - Validates all files are correctly generated\n   * - Atomically moves to final location\n   * - Automatic rollback on any failure.\n   * @param websiteName Unique name for the new website (used as directory name).\n   * @returns Promise resolving to the absolute path of the created website directory.\n   * @throws Error if a website with the same name already exists or creation fails.\n   */\n  async createWebsite(websiteName: string): Promise<string> {\n    this.logger.info('Creating new website', { websiteName });\n\n    const websitesDir = this.getWebsitesDirectory();\n    const newWebsitePath = path.join(websitesDir, websiteName);\n\n    // Pre-validation: Check if website already exists\n    if (await this.exists(newWebsitePath)) {\n      throw new Error(`Website \"${websiteName}\" already exists`);\n    }\n\n    // Ensure websites directory exists\n    if (!(await this.exists(websitesDir))) {\n      await this.fileSystem.mkdir(websitesDir, { recursive: true });\n    }\n\n    // Find template source path\n    const templateSourcePath = await this.findTemplateSourcePath();\n    if (!templateSourcePath) {\n      throw new Error('Could not find @dwk/anglesite-starter template package');\n    }\n\n    // Create atomic transaction for website creation\n    const transaction = createAtomicTransaction();\n\n    try {\n      // Step 1: Atomically copy template to target location\n      const copyResult = await atomicCopyDirectory(templateSourcePath, newWebsitePath, {\n        exclude: ['node_modules', '_site', '.git', 'dist'],\n        validate: async (contents) => {\n          // Validate that essential files are present\n          const requiredFiles = ['src', 'package.json'];\n          return requiredFiles.every((file) => contents.includes(file));\n        },\n      });\n\n      if (!copyResult.success) {\n        throw copyResult.error || new Error('Failed to copy template directory');\n      }\n\n      // Step 2: Atomically customize index.md with website name\n      const indexPath = path.join(newWebsitePath, 'src', 'index.md');\n      if (await this.exists(indexPath)) {\n        transaction.addOperation(\n          async () => {\n            const indexContent = await this.customizeIndexContent(websiteName, indexPath);\n            const writeResult = await atomicWriteFile(indexPath, indexContent, {\n              validate: (content) => {\n                // Validate that customization was applied\n                const hasWelcome = content.includes(`Welcome to ${websiteName}!`);\n                const hasAbout = content.includes(`About ${websiteName}`);\n                const isValid = hasWelcome && hasAbout;\n\n                if (!isValid) {\n                  this.logger.error('Index.md validation failed', undefined, { websiteName, hasWelcome, hasAbout });\n                  this.logger.debug('Content preview', { preview: content.substring(0, 300) });\n                }\n\n                return isValid;\n              },\n              backup: false, // No backup needed - this is a fresh template file\n            });\n\n            if (!writeResult.success) {\n              throw writeResult.error || new Error('Failed to customize index.md');\n            }\n          },\n          async () => {\n            // Rollback: restore original index.md if it exists\n            const backupPath = `${indexPath}.backup.${Date.now()}`;\n            if (await this.exists(backupPath)) {\n              await this.fileSystem.rename(backupPath, indexPath);\n            }\n          }\n        );\n      }\n\n      // Step 3: Atomically update package.json\n      const packageJsonPath = path.join(newWebsitePath, 'package.json');\n      if (await this.exists(packageJsonPath)) {\n        transaction.addOperation(\n          async () => {\n            const packageJsonContent = await this.customizePackageJson(websiteName, packageJsonPath);\n            const writeResult = await atomicWriteFile(packageJsonPath, packageJsonContent, {\n              validate: (content) => {\n                try {\n                  const parsed = JSON.parse(content);\n                  // Validate that name is sanitized correctly\n                  const expectedSanitizedName = this.sanitizePackageName(websiteName);\n                  const isValid = parsed.name === expectedSanitizedName;\n                  if (!isValid) {\n                    this.logger.error('Package.json validation failed', undefined, {\n                      expectedName: expectedSanitizedName,\n                      actualName: parsed.name,\n                      originalWebsiteName: websiteName,\n                    });\n                  }\n                  return isValid;\n                } catch (error) {\n                  this.logger.error('Package.json parse error', error as Error, {\n                    contentPreview: content.substring(0, 500),\n                  });\n                  return false;\n                }\n              },\n              backup: false, // No backup needed - this is a fresh template file\n            });\n\n            if (!writeResult.success) {\n              throw writeResult.error || new Error('Failed to customize package.json');\n            }\n          },\n          async () => {\n            // Rollback: restore original package.json if it exists\n            const backupPath = `${packageJsonPath}.backup.${Date.now()}`;\n            if (await this.exists(backupPath)) {\n              await this.fileSystem.rename(backupPath, packageJsonPath);\n            }\n          }\n        );\n      }\n\n      // Step 4: Run npm install if package.json exists\n      if (await this.exists(packageJsonPath)) {\n        transaction.addOperation(\n          async () => {\n            await this.runNpmInstall(newWebsitePath);\n          },\n          async () => {\n            // Rollback: remove node_modules if created\n            const nodeModulesPath = path.join(newWebsitePath, 'node_modules');\n            if (await this.exists(nodeModulesPath)) {\n              try {\n                await this.fileSystem.rmdir(nodeModulesPath, { recursive: true });\n              } catch (error) {\n                this.logger.warn('Failed to remove node_modules during rollback', { error });\n              }\n            }\n          }\n        );\n      }\n\n      // Execute the transaction\n      const result = await transaction.execute();\n\n      if (!result.success) {\n        throw result.error || new Error('Website creation transaction failed');\n      }\n\n      this.logger.info('Website created successfully', { websiteName, path: newWebsitePath });\n      return newWebsitePath;\n    } catch (error) {\n      this.logger.error('Website creation failed', error as Error, { websiteName });\n\n      // Clean up the entire website directory if it was created\n      if (await this.exists(newWebsitePath)) {\n        try {\n          await this.fileSystem.rmdir(newWebsitePath, { recursive: true });\n        } catch (cleanupError) {\n          this.logger.error('Failed to cleanup website directory after error', cleanupError as Error);\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * Find the template source path from possible locations.\n   */\n  private async findTemplateSourcePath(): Promise<string | null> {\n    const possiblePaths = [\n      path.join(__dirname, '..', '..', 'node_modules', '@dwk', 'anglesite-starter'),\n      path.join(process.cwd(), 'node_modules', '@dwk', 'anglesite-starter'),\n      // For development, also check the local path\n      path.join(__dirname, '..', '..', '..', '..', 'anglesite-starter'),\n    ];\n\n    for (const starterPath of possiblePaths) {\n      if (await this.exists(starterPath)) {\n        this.logger.debug('Found template source', { path: starterPath });\n        return starterPath;\n      }\n    }\n\n    this.logger.warn('Template source path not found in any expected location');\n    return null;\n  }\n\n  /**\n   * Customize the index.md content with website name.\n   */\n  private async customizeIndexContent(websiteName: string, indexPath: string): Promise<string> {\n    let indexContent = (await this.fileSystem.readFile(indexPath, 'utf8')) as string;\n\n    // Replace the title in frontmatter\n    indexContent = indexContent.replace(/title: Hello World!/, `title: Welcome to ${websiteName}!`);\n\n    // Replace the main content line\n    indexContent = indexContent.replace(\n      'This is your new website! Edit this file to get started.',\n      `Welcome to ${websiteName}! This is your new Anglesite-powered website.`\n    );\n\n    // Add a personalized welcome section\n    const welcomeSection = `\n\n## About ${websiteName}\n\nYour new website is ready to go! ${websiteName} is powered by Anglesite and uses Eleventy for static site generation.\n\n### Quick Tips\n\n- This site was created from the Anglesite starter template\n- All your content is stored locally on your computer  \n- Changes are automatically detected and rebuilt\n- You can preview your site instantly in the Anglesite app\n\n## Getting Started\n\n- Edit this markdown file to change the content\n- Add more pages by creating new .md files\n- Customize the layout in the _includes directory\n- Add styles to style.css\n\nHappy building! \uD83D\uDE80`;\n\n    // Replace the existing getting started section\n    indexContent = indexContent.replace(/## Getting Started[\\s\\S]*Happy building! \uD83D\uDE80/, welcomeSection.trim());\n\n    return indexContent;\n  }\n\n  /**\n   * Sanitize website name for package.json (follows npm naming conventions).\n   */\n  private sanitizePackageName(websiteName: string): string {\n    return websiteName\n      .toLowerCase()\n      .replace(/[^a-z0-9-]/g, '-') // Replace non-alphanumeric chars with dashes\n      .replace(/^-+|-+$/g, '') // Remove leading/trailing dashes\n      .replace(/-+/g, '-'); // Collapse multiple dashes\n  }\n\n  /**\n   * Customize the package.json content with website name and dependencies.\n   */\n  private async customizePackageJson(websiteName: string, packageJsonPath: string): Promise<string> {\n    const packageJsonContent = (await this.fileSystem.readFile(packageJsonPath, 'utf8')) as string;\n    const packageJson = JSON.parse(packageJsonContent);\n\n    // Sanitize website name for package.json (npm naming conventions)\n    const sanitizedName = this.sanitizePackageName(websiteName);\n\n    packageJson.name = sanitizedName;\n\n    // Set up local file path dependencies for development\n    if (packageJson.dependencies) {\n      // Use file paths to local packages since they're not published to npm yet\n      if (packageJson.dependencies['@dwk/anglesite-11ty']) {\n        // Use absolute path to anglesite-11ty package\n        // Navigate from dist/app/utils to the workspace root\n        const workspaceRoot = path.resolve(__dirname, '../../../../');\n        const anglesitePackagePath = path.join(workspaceRoot, 'anglesite-11ty');\n        packageJson.dependencies['@dwk/anglesite-11ty'] = `file:${anglesitePackagePath}`;\n      }\n      if (packageJson.dependencies['@dwk/web-components']) {\n        // Use absolute path to web-components package\n        // Navigate from dist/app/utils to the workspace root\n        const workspaceRoot = path.resolve(__dirname, '../../../../');\n        const webComponentsPackagePath = path.join(workspaceRoot, 'web-components');\n        packageJson.dependencies['@dwk/web-components'] = `file:${webComponentsPackagePath}`;\n      }\n    }\n\n    return JSON.stringify(packageJson, null, 2);\n  }\n\n  /**\n   * Run npm install in the website directory.\n   */\n  private async runNpmInstall(websitePath: string): Promise<void> {\n    this.logger.info('Running npm install', { websitePath });\n\n    return new Promise<void>((resolve, reject) => {\n      const npmInstall = spawn('npm', ['install'], {\n        cwd: websitePath,\n        stdio: 'pipe',\n      });\n\n      npmInstall.on('close', (code) => {\n        if (code === 0) {\n          this.logger.debug('npm install completed successfully');\n          resolve();\n        } else {\n          const error = new Error(`npm install failed with code ${code}`);\n          this.logger.error('npm install failed', error);\n          reject(error);\n        }\n      });\n\n      npmInstall.on('error', (error) => {\n        this.logger.error('npm install process error', error);\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Checks if a website name is valid according to naming rules and character restrictions.\n   */\n  validateWebsiteName(name: string): {\n    valid: boolean;\n    error?: string;\n  } {\n    if (!name || name.trim().length === 0) {\n      return { valid: false, error: 'Website name cannot be empty' };\n    }\n\n    // SECURITY: Prevent path traversal attacks\n    // Check for directory traversal patterns before other validation\n    if (name.includes('..')) {\n      return {\n        valid: false,\n        error: 'Website name cannot contain directory traversal patterns (..)',\n      };\n    }\n\n    // Additional path traversal security check using path resolution\n    const websitesDir = this.getWebsitesDirectory();\n    const resolvedPath = path.resolve(websitesDir, name);\n    const expectedPath = path.join(websitesDir, name);\n\n    // Ensure the resolved path is exactly what we expect (no traversal occurred)\n    if (resolvedPath !== expectedPath) {\n      return {\n        valid: false,\n        error: 'Website name contains invalid path characters that could access parent directories',\n      };\n    }\n\n    // Ensure the resolved path is within the websites directory\n    if (!resolvedPath.startsWith(websitesDir + path.sep) && resolvedPath !== websitesDir) {\n      return {\n        valid: false,\n        error: 'Website name would create a path outside the allowed directory',\n      };\n    }\n\n    // Forbidden characters that are invalid in filesystem folder names across platforms\n    // Windows: < > : \" | ? * \\ /\n    // Unix/macOS: / (and \\0 null character)\n    // Also avoid leading/trailing dots and spaces for consistency\n    // eslint-disable-next-line no-control-regex\n    const forbiddenChars = /[<>:\"|?*\\\\/\\x00]/;\n\n    if (forbiddenChars.test(name)) {\n      return {\n        valid: false,\n        error: 'Website name cannot contain: < > : \" | ? * \\\\ / or null characters',\n      };\n    }\n\n    // Check for leading/trailing spaces or dots (problematic on Windows)\n    if (name !== name.trim()) {\n      return {\n        valid: false,\n        error: 'Website name cannot start or end with spaces',\n      };\n    }\n\n    if (name.startsWith('.') || name.endsWith('.')) {\n      return {\n        valid: false,\n        error: 'Website name cannot start or end with dots',\n      };\n    }\n\n    // Check for reserved names on Windows (CON, PRN, AUX, NUL, COM1-9, LPT1-9)\n    const reservedNames = /^(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])$/i;\n    if (reservedNames.test(name)) {\n      return {\n        valid: false,\n        error: 'Website name cannot be a reserved system name (CON, PRN, AUX, NUL, COM1-9, LPT1-9)',\n      };\n    }\n\n    // Check reasonable length (filesystem dependent but 255 is common max)\n    if (name.length > 100) {\n      return {\n        valid: false,\n        error: 'Website name must be 100 characters or less',\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * Async version of validateWebsiteName that also checks for duplicates.\n   * This should be used for website creation validation.\n   */\n  async validateWebsiteNameAsync(name: string): Promise<{\n    valid: boolean;\n    error?: string;\n  }> {\n    // First run the basic validation\n    const basicValidation = this.validateWebsiteName(name);\n    if (!basicValidation.valid) {\n      return basicValidation;\n    }\n\n    // Check if website already exists\n    const websitesDir = this.getWebsitesDirectory();\n    const websitePath = path.join(websitesDir, name);\n\n    if (await this.exists(websitePath)) {\n      return {\n        valid: false,\n        error: `Website \"${name}\" already exists. Please choose a different name.`,\n      };\n    }\n\n    return { valid: true };\n  }\n\n  /**\n   * List all existing websites.\n   */\n  async listWebsites(): Promise<string[]> {\n    const websitesDir = this.getWebsitesDirectory();\n\n    if (!(await this.exists(websitesDir))) {\n      return [];\n    }\n\n    try {\n      const entries = await this.fileSystem.readdir(websitesDir);\n      const directories: string[] = [];\n\n      // Filter for directories using stat\n      for (const entry of entries) {\n        try {\n          const entryPath = path.join(websitesDir, entry);\n          const stats = await this.fileSystem.stat(entryPath);\n          if (stats.isDirectory()) {\n            directories.push(entry);\n          }\n        } catch (error) {\n          // Skip entries we can't stat\n          this.logger.warn('Failed to stat directory entry', { entry, error });\n        }\n      }\n\n      return directories;\n    } catch (error) {\n      this.logger.error('Failed to list websites', error as Error);\n      return [];\n    }\n  }\n\n  /**\n   * Delete a website with confirmation dialog.\n   */\n  async deleteWebsite(websiteName: string, parentWindow?: BrowserWindow): Promise<boolean> {\n    this.logger.info('Attempting to delete website', { websiteName });\n\n    const websitesDir = this.getWebsitesDirectory();\n    const websitePath = path.join(websitesDir, websiteName);\n\n    if (!(await this.exists(websitePath))) {\n      throw new Error(`Website \"${websiteName}\" does not exist`);\n    }\n\n    const dialogOptions = {\n      type: 'warning' as const,\n      title: 'Delete Website',\n      message: `Are you sure you want to delete \"${websiteName}\"?`,\n      detail: 'This action cannot be undone.',\n      buttons: ['Cancel', 'Delete'],\n      defaultId: 0,\n      cancelId: 0,\n    };\n\n    // Use the parent window if provided for proper modal behavior\n    const result = parentWindow\n      ? dialog.showMessageBoxSync(parentWindow, dialogOptions)\n      : dialog.showMessageBoxSync(dialogOptions);\n\n    if (result === 1) {\n      try {\n        await this.fileSystem.rmdir(websitePath, { recursive: true });\n        this.logger.info('Website deleted successfully', { websiteName });\n        return true;\n      } catch (error) {\n        this.logger.error('Failed to delete website', error as Error, { websiteName });\n        throw error;\n      }\n    }\n\n    this.logger.debug('Website deletion cancelled by user', { websiteName });\n    return false;\n  }\n\n  /**\n   * Constructs the full file system path for a website given its name.\n   */\n  getWebsitePath(websiteName: string): string {\n    return path.join(this.getWebsitesDirectory(), websiteName);\n  }\n\n  /**\n   * Rename a website using atomic operations.\n   *\n   * This function ensures data integrity during the rename operation:\n   * - Validates new name before any changes\n   * - Creates backup of target if it exists.\n   * - Validates successful rename\n   * - Automatic rollback on failure\n   * - Updates internal references (package.json name).\n   */\n  async renameWebsite(oldName: string, newName: string): Promise<boolean> {\n    this.logger.info('Renaming website', { oldName, newName });\n\n    // Validate the new name\n    const validation = this.validateWebsiteName(newName);\n    if (!validation.valid) {\n      throw new Error(validation.error || 'Invalid website name');\n    }\n\n    const websitesDir = this.getWebsitesDirectory();\n    const oldPath = path.join(websitesDir, oldName);\n    const newPath = path.join(websitesDir, newName);\n\n    // Pre-validation checks\n    if (!(await this.exists(oldPath))) {\n      throw new Error(`Website \"${oldName}\" does not exist`);\n    }\n\n    if (await this.exists(newPath)) {\n      throw new Error(`Website \"${newName}\" already exists`);\n    }\n\n    // Create atomic transaction for website rename\n    const transaction = createAtomicTransaction();\n\n    try {\n      // Step 1: Atomically rename the directory\n      transaction.addOperation(\n        async () => {\n          const renameResult = await atomicRename(oldPath, newPath, {\n            validate: async (dirPath) => {\n              // Validate that the renamed directory has expected structure\n              const srcPath = path.join(dirPath, 'src');\n              const packageJsonPath = path.join(dirPath, 'package.json');\n              return (await this.exists(srcPath)) && (await this.exists(packageJsonPath));\n            },\n          });\n\n          if (!renameResult.success) {\n            throw renameResult.error || new Error('Failed to rename website directory');\n          }\n        },\n        async () => {\n          // Rollback: rename back to original if it exists\n          if (await this.exists(newPath)) {\n            try {\n              await this.fileSystem.rename(newPath, oldPath);\n            } catch (error) {\n              this.logger.error('Failed to rollback directory rename', error as Error);\n            }\n          }\n        }\n      );\n\n      // Step 2: Update package.json with new website name\n      const packageJsonPath = path.join(newPath, 'package.json');\n      if (await this.exists(packageJsonPath)) {\n        transaction.addOperation(\n          async () => {\n            const packageJsonContent = (await this.fileSystem.readFile(packageJsonPath, 'utf8')) as string;\n            const packageJson = JSON.parse(packageJsonContent);\n            packageJson.name = this.sanitizePackageName(newName);\n\n            const writeResult = await atomicWriteFile(packageJsonPath, JSON.stringify(packageJson, null, 2), {\n              validate: (content) => {\n                try {\n                  const parsed = JSON.parse(content);\n                  return parsed.name === this.sanitizePackageName(newName);\n                } catch {\n                  return false;\n                }\n              },\n              backup: true,\n            });\n\n            if (!writeResult.success) {\n              throw writeResult.error || new Error('Failed to update package.json with new name');\n            }\n          },\n          async () => {\n            // Rollback: restore original package.json\n            const backupPath = `${packageJsonPath}.backup.${Date.now()}`;\n            if (await this.exists(backupPath)) {\n              try {\n                await this.fileSystem.rename(backupPath, packageJsonPath);\n              } catch (error) {\n                this.logger.error('Failed to restore package.json backup', error as Error);\n              }\n            }\n          }\n        );\n      }\n\n      // Step 3: Update any internal file references to the old website name\n      transaction.addOperation(\n        async () => {\n          await this.updateInternalReferences(newPath, oldName, newName);\n        },\n        async () => {\n          // Rollback: restore original references\n          try {\n            await this.updateInternalReferences(newPath, newName, oldName);\n          } catch (error) {\n            this.logger.error('Failed to rollback internal references', error as Error);\n          }\n        }\n      );\n\n      // Execute the transaction\n      const result = await transaction.execute();\n\n      if (!result.success) {\n        throw result.error || new Error('Website rename transaction failed');\n      }\n\n      this.logger.info('Website renamed successfully', { oldName, newName });\n      return true;\n    } catch (error) {\n      this.logger.error('Failed to rename website', error as Error, { oldName, newName });\n      throw error;\n    }\n  }\n\n  /**\n   * Update internal references to website name in files.\n   */\n  private async updateInternalReferences(websitePath: string, oldName: string, newName: string): Promise<void> {\n    // Update title in index.md if it contains the old name\n    const indexPath = path.join(websitePath, 'src', 'index.md');\n    if (await this.exists(indexPath)) {\n      const content = (await this.fileSystem.readFile(indexPath, 'utf8')) as string;\n      if (content.includes(oldName)) {\n        const updatedContent = content\n          .replace(new RegExp(`Welcome to ${oldName}!`, 'g'), `Welcome to ${newName}!`)\n          .replace(new RegExp(`About ${oldName}`, 'g'), `About ${newName}`)\n          .replace(new RegExp(`${oldName} is powered by`, 'g'), `${newName} is powered by`);\n\n        if (updatedContent !== content) {\n          const writeResult = await atomicWriteFile(indexPath, updatedContent, { backup: true });\n          if (!writeResult.success) {\n            throw writeResult.error || new Error('Failed to update index.md references');\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if a website exists.\n   */\n  async websiteExists(websiteName: string): Promise<boolean> {\n    const websitePath = this.getWebsitePath(websiteName);\n    return await this.exists(websitePath);\n  }\n\n  /**\n   * Dispose of the website manager service.\n   */\n  async dispose(): Promise<void> {\n    this.logger.debug('Disposing WebsiteManager service');\n    // No cleanup needed for this service currently\n  }\n}\n\n/**\n * Factory function for creating WebsiteManager with proper dependencies.\n */\nexport function createWebsiteManager(\n  logger: ILogger,\n  fileSystem: IFileSystem,\n  atomicOperations: IAtomicOperations\n): IWebsiteManager {\n  return WebsiteManager.create(logger, fileSystem, atomicOperations);\n}\n\n/**\n * Type guard to check if an object is a website manager.\n */\nexport function isWebsiteManager(obj: unknown): obj is WebsiteManager {\n  return (\n    obj !== null &&\n    typeof obj === 'object' &&\n    typeof (obj as WebsiteManager).createWebsite === 'function' &&\n    typeof (obj as WebsiteManager).deleteWebsite === 'function' &&\n    typeof (obj as WebsiteManager).listWebsites === 'function' &&\n    typeof (obj as WebsiteManager).validateWebsiteName === 'function' &&\n    typeof (obj as WebsiteManager).dispose === 'function'\n  );\n}\n\n// Legacy exports for backward compatibility during transition period\n// These should be removed once all consumers are updated to use DI\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport async function createWebsiteWithName(websiteName: string): Promise<string> {\n  console.warn('Using deprecated createWebsiteWithName - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.createWebsite(websiteName);\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport function validateWebsiteName(name: string): { valid: boolean; error?: string } {\n  console.warn('Using deprecated validateWebsiteName - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.validateWebsiteName(name);\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport async function validateWebsiteNameAsync(name: string): Promise<{ valid: boolean; error?: string }> {\n  console.warn('Using deprecated validateWebsiteNameAsync - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.validateWebsiteNameAsync(name);\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport async function listWebsites(): Promise<string[]> {\n  console.warn('Using deprecated listWebsites - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.listWebsites();\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport function getWebsitePath(websiteName: string): string {\n  console.warn('Using deprecated getWebsitePath - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.getWebsitePath(websiteName);\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport async function renameWebsite(oldName: string, newName: string): Promise<boolean> {\n  console.warn('Using deprecated renameWebsite - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.renameWebsite(oldName, newName);\n}\n\n/**\n * @deprecated Use WebsiteManager service through DI container instead\n * This is kept as a fallback for when DI is not yet initialized.\n */\nexport async function deleteWebsite(websiteName: string): Promise<boolean> {\n  console.warn('Using deprecated deleteWebsite - DI not available');\n  // Create a temporary instance for fallback\n  const logger = {\n    debug: () => {},\n    info: () => {},\n    warn: console.warn,\n    error: console.error,\n    child: () => logger,\n  } as any; // eslint-disable-line @typescript-eslint/no-explicit-any\n  const fileSystem = new FileSystemService();\n  const atomicOps = createStubAtomicOperations(fileSystem);\n  const manager = new WebsiteManager(logger, fileSystem, atomicOps);\n  return manager.deleteWebsite(websiteName);\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "488adbaa6fd35b309293b78ca08659d8de49e18f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_mhnpo1ng8 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_mhnpo1ng8();
var __createBinding =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[0]++,
/* istanbul ignore next */
(cov_mhnpo1ng8().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_mhnpo1ng8().b[0][1]++, this.__createBinding) ||
/* istanbul ignore next */
(cov_mhnpo1ng8().b[0][2]++, Object.create ?
/* istanbul ignore next */
(cov_mhnpo1ng8().b[1][0]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[0]++;
  cov_mhnpo1ng8().s[1]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().b[2][0]++;
    cov_mhnpo1ng8().s[2]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_mhnpo1ng8().b[2][1]++;
  }
  var desc =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[3]++, Object.getOwnPropertyDescriptor(m, k));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[4]++;
  if (
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[4][0]++, !desc) ||
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[4][1]++, "get" in desc ?
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[5][0]++, !m.__esModule) :
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[5][1]++,
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[6][0]++, desc.writable) ||
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[6][1]++, desc.configurable)))) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().b[3][0]++;
    cov_mhnpo1ng8().s[5]++;
    desc = {
      enumerable: true,
      get: function () {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[1]++;
        cov_mhnpo1ng8().s[6]++;
        return m[k];
      }
    };
  } else
  /* istanbul ignore next */
  {
    cov_mhnpo1ng8().b[3][1]++;
  }
  cov_mhnpo1ng8().s[7]++;
  Object.defineProperty(o, k2, desc);
}) :
/* istanbul ignore next */
(cov_mhnpo1ng8().b[1][1]++, function (o, m, k, k2) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[2]++;
  cov_mhnpo1ng8().s[8]++;
  if (k2 === undefined) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().b[7][0]++;
    cov_mhnpo1ng8().s[9]++;
    k2 = k;
  } else
  /* istanbul ignore next */
  {
    cov_mhnpo1ng8().b[7][1]++;
  }
  cov_mhnpo1ng8().s[10]++;
  o[k2] = m[k];
})));
var __setModuleDefault =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[11]++,
/* istanbul ignore next */
(cov_mhnpo1ng8().b[8][0]++, this) &&
/* istanbul ignore next */
(cov_mhnpo1ng8().b[8][1]++, this.__setModuleDefault) ||
/* istanbul ignore next */
(cov_mhnpo1ng8().b[8][2]++, Object.create ?
/* istanbul ignore next */
(cov_mhnpo1ng8().b[9][0]++, function (o, v) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[3]++;
  cov_mhnpo1ng8().s[12]++;
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
}) :
/* istanbul ignore next */
(cov_mhnpo1ng8().b[9][1]++, function (o, v) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[4]++;
  cov_mhnpo1ng8().s[13]++;
  o["default"] = v;
})));
var __importStar =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[14]++,
/* istanbul ignore next */
(cov_mhnpo1ng8().b[10][0]++, this) &&
/* istanbul ignore next */
(cov_mhnpo1ng8().b[10][1]++, this.__importStar) ||
/* istanbul ignore next */
(cov_mhnpo1ng8().b[10][2]++, function () {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[5]++;
  cov_mhnpo1ng8().s[15]++;
  var ownKeys = function (o) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[6]++;
    cov_mhnpo1ng8().s[16]++;
    ownKeys =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[11][0]++, Object.getOwnPropertyNames) ||
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[11][1]++, function (o) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[7]++;
      var ar =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[17]++, []);
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[18]++;
      for (var k in o) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[19]++;
        if (Object.prototype.hasOwnProperty.call(o, k)) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[12][0]++;
          cov_mhnpo1ng8().s[20]++;
          ar[ar.length] = k;
        } else
        /* istanbul ignore next */
        {
          cov_mhnpo1ng8().b[12][1]++;
        }
      }
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[21]++;
      return ar;
    });
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[22]++;
    return ownKeys(o);
  };
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[23]++;
  return function (mod) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[8]++;
    cov_mhnpo1ng8().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[14][0]++, mod) &&
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[14][1]++, mod.__esModule)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[13][0]++;
      cov_mhnpo1ng8().s[25]++;
      return mod;
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[13][1]++;
    }
    var result =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[26]++, {});
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[27]++;
    if (mod != null) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[15][0]++;
      cov_mhnpo1ng8().s[28]++;
      for (var k =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[29]++, ownKeys(mod)), i =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[30]++, 0); i < k.length; i++) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[31]++;
        if (k[i] !== "default") {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[16][0]++;
          cov_mhnpo1ng8().s[32]++;
          __createBinding(result, mod, k[i]);
        } else
        /* istanbul ignore next */
        {
          cov_mhnpo1ng8().b[16][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[15][1]++;
    }
    cov_mhnpo1ng8().s[33]++;
    __setModuleDefault(result, mod);
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[34]++;
    return result;
  };
}()));
/* istanbul ignore next */
cov_mhnpo1ng8().s[35]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_mhnpo1ng8().s[36]++;
exports.WebsiteManager = void 0;
/* istanbul ignore next */
cov_mhnpo1ng8().s[37]++;
exports.createWebsiteManager = createWebsiteManager;
/* istanbul ignore next */
cov_mhnpo1ng8().s[38]++;
exports.isWebsiteManager = isWebsiteManager;
/* istanbul ignore next */
cov_mhnpo1ng8().s[39]++;
exports.createWebsiteWithName = createWebsiteWithName;
/* istanbul ignore next */
cov_mhnpo1ng8().s[40]++;
exports.validateWebsiteName = validateWebsiteName;
/* istanbul ignore next */
cov_mhnpo1ng8().s[41]++;
exports.validateWebsiteNameAsync = validateWebsiteNameAsync;
/* istanbul ignore next */
cov_mhnpo1ng8().s[42]++;
exports.listWebsites = listWebsites;
/* istanbul ignore next */
cov_mhnpo1ng8().s[43]++;
exports.getWebsitePath = getWebsitePath;
/* istanbul ignore next */
cov_mhnpo1ng8().s[44]++;
exports.renameWebsite = renameWebsite;
/* istanbul ignore next */
cov_mhnpo1ng8().s[45]++;
exports.deleteWebsite = deleteWebsite;
/**
 * @file DI-compatible Website Management Service
 *
 * Refactored version of website management utilities that implements IWebsiteManager.
 * interface and uses dependency injection for better testability and maintainability.
 */
const fs =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[46]++, __importStar(require("fs")));
const path =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[47]++, __importStar(require("path")));
const os =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[48]++, __importStar(require("os")));
const child_process_1 =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[49]++, require("child_process"));
const electron_1 =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[50]++, require("electron"));
const atomic_operations_1 =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[51]++, require("./atomic-operations"));
const errors_1 =
/* istanbul ignore next */
(cov_mhnpo1ng8().s[52]++, require("../core/errors"));
// Helper classes for fallback functionality
class FileSystemService {
  async exists(path) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[9]++;
    cov_mhnpo1ng8().s[53]++;
    try {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[54]++;
      await fs.promises.stat(path);
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[55]++;
      return true;
    } catch {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[56]++;
      return false;
    }
  }
  async readFile(path, encoding) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[10]++;
    cov_mhnpo1ng8().s[57]++;
    return fs.promises.readFile(path, encoding);
  }
  async writeFile(path, data, encoding) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[11]++;
    cov_mhnpo1ng8().s[58]++;
    return fs.promises.writeFile(path, data, encoding);
  }
  async mkdir(path, options) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[12]++;
    cov_mhnpo1ng8().s[59]++;
    await fs.promises.mkdir(path, options);
  }
  async readdir(path) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[13]++;
    cov_mhnpo1ng8().s[60]++;
    return fs.promises.readdir(path);
  }
  async rmdir(path, options) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[14]++;
    cov_mhnpo1ng8().s[61]++;
    await fs.promises.rm(path, {
      recursive: options?.recursive,
      force: true
    });
  }
  async copyFile(src, dest) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[15]++;
    cov_mhnpo1ng8().s[62]++;
    return fs.promises.copyFile(src, dest);
  }
  async rename(oldPath, newPath) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[16]++;
    cov_mhnpo1ng8().s[63]++;
    return fs.promises.rename(oldPath, newPath);
  }
  async stat(path) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[17]++;
    const stats =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[64]++, await fs.promises.stat(path));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[65]++;
    return {
      isFile: () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[18]++;
        cov_mhnpo1ng8().s[66]++;
        return stats.isFile();
      },
      isDirectory: () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[19]++;
        cov_mhnpo1ng8().s[67]++;
        return stats.isDirectory();
      },
      size: stats.size,
      mtime: stats.mtime
    };
  }
}
function createStubAtomicOperations(fileSystem) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[20]++;
  cov_mhnpo1ng8().s[68]++;
  return {
    writeFileAtomic: (path, content) => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[21]++;
      cov_mhnpo1ng8().s[69]++;
      return fileSystem.writeFile(path, content, 'utf-8').then(() => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[22]++;
        cov_mhnpo1ng8().s[70]++;
        return {
          success: true,
          rollbackPerformed: false,
          temporaryPaths: []
        };
      }, error => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[23]++;
        cov_mhnpo1ng8().s[71]++;
        return {
          success: false,
          error: errors_1.ErrorUtils.wrap(error),
          rollbackPerformed: false,
          temporaryPaths: []
        };
      });
    },
    copyDirectoryAtomic: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[24]++;
      const error =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[72]++, new errors_1.AtomicOperationError('copyDirectoryAtomic not implemented yet', 'NOT_IMPLEMENTED', 'copyDirectoryAtomic'));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[73]++;
      return Promise.resolve({
        success: false,
        error: error,
        rollbackPerformed: false,
        temporaryPaths: []
      });
    },
    renameAtomic: (oldPath, newPath) => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[25]++;
      cov_mhnpo1ng8().s[74]++;
      return fileSystem.rename(oldPath, newPath).then(() => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[26]++;
        cov_mhnpo1ng8().s[75]++;
        return {
          success: true,
          rollbackPerformed: false,
          temporaryPaths: []
        };
      }, error => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[27]++;
        cov_mhnpo1ng8().s[76]++;
        return {
          success: false,
          error: errors_1.ErrorUtils.wrap(error),
          rollbackPerformed: false,
          temporaryPaths: []
        };
      });
    },
    createTransaction: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[28]++;
      cov_mhnpo1ng8().s[77]++;
      throw new errors_1.AtomicOperationError('createTransaction not implemented yet', 'NOT_IMPLEMENTED', 'createTransaction');
    }
  };
}
/**
 * DI-compatible WebsiteManager implementation.
 */
class WebsiteManager {
  constructor(logger, fileSystem, atomicOperations) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[29]++;
    cov_mhnpo1ng8().s[78]++;
    this.fileSystem = fileSystem;
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[79]++;
    this.atomicOperations = atomicOperations;
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[80]++;
    this.logger = logger.child({
      service: 'WebsiteManager'
    });
  }
  /**
   * Static factory method for DI container.
   */
  static create(logger, fileSystem, atomicOperations) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[30]++;
    cov_mhnpo1ng8().s[81]++;
    return new WebsiteManager(logger, fileSystem, atomicOperations);
  }
  /**
   * Get the platform-specific websites directory path.
   */
  getWebsitesDirectory() {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[31]++;
    cov_mhnpo1ng8().s[82]++;
    try {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[83]++;
      return path.join(electron_1.app.getPath('userData'), 'websites');
    } catch {
      // Fallback for test environments
      const appDataPath =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[84]++, process.platform === 'darwin' ?
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[17][0]++, path.join(os.homedir(), 'Library', 'Application Support', 'Anglesite')) :
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[17][1]++, process.platform === 'win32' ?
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[18][0]++, path.join(
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[19][0]++, process.env.APPDATA) ||
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[19][1]++, ''), 'Anglesite')) :
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[18][1]++, path.join(os.homedir(), '.config', 'anglesite'))));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[85]++;
      return path.join(appDataPath, 'websites');
    }
  }
  /**
   * Helper to check if file exists using the injected file system.
   */
  async exists(filePath) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[32]++;
    cov_mhnpo1ng8().s[86]++;
    return await this.fileSystem.exists(filePath);
  }
  /**
   * Create a new website with the specified name and basic structure.
   *
   * This function uses atomic operations to ensure data integrity:
   * - Creates website in temporary location first
   * - Validates all files are correctly generated
   * - Atomically moves to final location
   * - Automatic rollback on any failure.
   * @param websiteName Unique name for the new website (used as directory name).
   * @returns Promise resolving to the absolute path of the created website directory.
   * @throws Error if a website with the same name already exists or creation fails.
   */
  async createWebsite(websiteName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[33]++;
    cov_mhnpo1ng8().s[87]++;
    this.logger.info('Creating new website', {
      websiteName
    });
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[88]++, this.getWebsitesDirectory());
    const newWebsitePath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[89]++, path.join(websitesDir, websiteName));
    // Pre-validation: Check if website already exists
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[90]++;
    if (await this.exists(newWebsitePath)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[20][0]++;
      cov_mhnpo1ng8().s[91]++;
      throw new Error(`Website "${websiteName}" already exists`);
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[20][1]++;
    }
    // Ensure websites directory exists
    cov_mhnpo1ng8().s[92]++;
    if (!(await this.exists(websitesDir))) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[21][0]++;
      cov_mhnpo1ng8().s[93]++;
      await this.fileSystem.mkdir(websitesDir, {
        recursive: true
      });
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[21][1]++;
    }
    // Find template source path
    const templateSourcePath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[94]++, await this.findTemplateSourcePath());
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[95]++;
    if (!templateSourcePath) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[22][0]++;
      cov_mhnpo1ng8().s[96]++;
      throw new Error('Could not find @dwk/anglesite-starter template package');
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[22][1]++;
    }
    // Create atomic transaction for website creation
    const transaction =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[97]++, (0, atomic_operations_1.createAtomicTransaction)());
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[98]++;
    try {
      // Step 1: Atomically copy template to target location
      const copyResult =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[99]++, await (0, atomic_operations_1.atomicCopyDirectory)(templateSourcePath, newWebsitePath, {
        exclude: ['node_modules', '_site', '.git', 'dist'],
        validate: async contents => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[34]++;
          // Validate that essential files are present
          const requiredFiles =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[100]++, ['src', 'package.json']);
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[101]++;
          return requiredFiles.every(file => {
            /* istanbul ignore next */
            cov_mhnpo1ng8().f[35]++;
            cov_mhnpo1ng8().s[102]++;
            return contents.includes(file);
          });
        }
      }));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[103]++;
      if (!copyResult.success) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[23][0]++;
        cov_mhnpo1ng8().s[104]++;
        throw /* istanbul ignore next */(cov_mhnpo1ng8().b[24][0]++, copyResult.error) ||
        /* istanbul ignore next */
        (cov_mhnpo1ng8().b[24][1]++, new Error('Failed to copy template directory'));
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[23][1]++;
      }
      // Step 2: Atomically customize index.md with website name
      const indexPath =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[105]++, path.join(newWebsitePath, 'src', 'index.md'));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[106]++;
      if (await this.exists(indexPath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[25][0]++;
        cov_mhnpo1ng8().s[107]++;
        transaction.addOperation(async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[36]++;
          const indexContent =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[108]++, await this.customizeIndexContent(websiteName, indexPath));
          const writeResult =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[109]++, await (0, atomic_operations_1.atomicWriteFile)(indexPath, indexContent, {
            validate: content => {
              /* istanbul ignore next */
              cov_mhnpo1ng8().f[37]++;
              // Validate that customization was applied
              const hasWelcome =
              /* istanbul ignore next */
              (cov_mhnpo1ng8().s[110]++, content.includes(`Welcome to ${websiteName}!`));
              const hasAbout =
              /* istanbul ignore next */
              (cov_mhnpo1ng8().s[111]++, content.includes(`About ${websiteName}`));
              const isValid =
              /* istanbul ignore next */
              (cov_mhnpo1ng8().s[112]++,
              /* istanbul ignore next */
              (cov_mhnpo1ng8().b[26][0]++, hasWelcome) &&
              /* istanbul ignore next */
              (cov_mhnpo1ng8().b[26][1]++, hasAbout));
              /* istanbul ignore next */
              cov_mhnpo1ng8().s[113]++;
              if (!isValid) {
                /* istanbul ignore next */
                cov_mhnpo1ng8().b[27][0]++;
                cov_mhnpo1ng8().s[114]++;
                this.logger.error('Index.md validation failed', undefined, {
                  websiteName,
                  hasWelcome,
                  hasAbout
                });
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[115]++;
                this.logger.debug('Content preview', {
                  preview: content.substring(0, 300)
                });
              } else
              /* istanbul ignore next */
              {
                cov_mhnpo1ng8().b[27][1]++;
              }
              cov_mhnpo1ng8().s[116]++;
              return isValid;
            },
            backup: false // No backup needed - this is a fresh template file
          }));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[117]++;
          if (!writeResult.success) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[28][0]++;
            cov_mhnpo1ng8().s[118]++;
            throw /* istanbul ignore next */(cov_mhnpo1ng8().b[29][0]++, writeResult.error) ||
            /* istanbul ignore next */
            (cov_mhnpo1ng8().b[29][1]++, new Error('Failed to customize index.md'));
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[28][1]++;
          }
        }, async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[38]++;
          // Rollback: restore original index.md if it exists
          const backupPath =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[119]++, `${indexPath}.backup.${Date.now()}`);
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[120]++;
          if (await this.exists(backupPath)) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[30][0]++;
            cov_mhnpo1ng8().s[121]++;
            await this.fileSystem.rename(backupPath, indexPath);
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[30][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[25][1]++;
      }
      // Step 3: Atomically update package.json
      const packageJsonPath =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[122]++, path.join(newWebsitePath, 'package.json'));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[123]++;
      if (await this.exists(packageJsonPath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[31][0]++;
        cov_mhnpo1ng8().s[124]++;
        transaction.addOperation(async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[39]++;
          const packageJsonContent =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[125]++, await this.customizePackageJson(websiteName, packageJsonPath));
          const writeResult =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[126]++, await (0, atomic_operations_1.atomicWriteFile)(packageJsonPath, packageJsonContent, {
            validate: content => {
              /* istanbul ignore next */
              cov_mhnpo1ng8().f[40]++;
              cov_mhnpo1ng8().s[127]++;
              try {
                const parsed =
                /* istanbul ignore next */
                (cov_mhnpo1ng8().s[128]++, JSON.parse(content));
                // Validate that name is sanitized correctly
                const expectedSanitizedName =
                /* istanbul ignore next */
                (cov_mhnpo1ng8().s[129]++, this.sanitizePackageName(websiteName));
                const isValid =
                /* istanbul ignore next */
                (cov_mhnpo1ng8().s[130]++, parsed.name === expectedSanitizedName);
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[131]++;
                if (!isValid) {
                  /* istanbul ignore next */
                  cov_mhnpo1ng8().b[32][0]++;
                  cov_mhnpo1ng8().s[132]++;
                  this.logger.error('Package.json validation failed', undefined, {
                    expectedName: expectedSanitizedName,
                    actualName: parsed.name,
                    originalWebsiteName: websiteName
                  });
                } else
                /* istanbul ignore next */
                {
                  cov_mhnpo1ng8().b[32][1]++;
                }
                cov_mhnpo1ng8().s[133]++;
                return isValid;
              } catch (error) {
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[134]++;
                this.logger.error('Package.json parse error', error, {
                  contentPreview: content.substring(0, 500)
                });
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[135]++;
                return false;
              }
            },
            backup: false // No backup needed - this is a fresh template file
          }));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[136]++;
          if (!writeResult.success) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[33][0]++;
            cov_mhnpo1ng8().s[137]++;
            throw /* istanbul ignore next */(cov_mhnpo1ng8().b[34][0]++, writeResult.error) ||
            /* istanbul ignore next */
            (cov_mhnpo1ng8().b[34][1]++, new Error('Failed to customize package.json'));
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[33][1]++;
          }
        }, async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[41]++;
          // Rollback: restore original package.json if it exists
          const backupPath =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[138]++, `${packageJsonPath}.backup.${Date.now()}`);
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[139]++;
          if (await this.exists(backupPath)) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[35][0]++;
            cov_mhnpo1ng8().s[140]++;
            await this.fileSystem.rename(backupPath, packageJsonPath);
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[35][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[31][1]++;
      }
      // Step 4: Run npm install if package.json exists
      cov_mhnpo1ng8().s[141]++;
      if (await this.exists(packageJsonPath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[36][0]++;
        cov_mhnpo1ng8().s[142]++;
        transaction.addOperation(async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[42]++;
          cov_mhnpo1ng8().s[143]++;
          await this.runNpmInstall(newWebsitePath);
        }, async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[43]++;
          // Rollback: remove node_modules if created
          const nodeModulesPath =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[144]++, path.join(newWebsitePath, 'node_modules'));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[145]++;
          if (await this.exists(nodeModulesPath)) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[37][0]++;
            cov_mhnpo1ng8().s[146]++;
            try {
              /* istanbul ignore next */
              cov_mhnpo1ng8().s[147]++;
              await this.fileSystem.rmdir(nodeModulesPath, {
                recursive: true
              });
            } catch (error) {
              /* istanbul ignore next */
              cov_mhnpo1ng8().s[148]++;
              this.logger.warn('Failed to remove node_modules during rollback', {
                error
              });
            }
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[37][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[36][1]++;
      }
      // Execute the transaction
      const result =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[149]++, await transaction.execute());
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[150]++;
      if (!result.success) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[38][0]++;
        cov_mhnpo1ng8().s[151]++;
        throw /* istanbul ignore next */(cov_mhnpo1ng8().b[39][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_mhnpo1ng8().b[39][1]++, new Error('Website creation transaction failed'));
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[38][1]++;
      }
      cov_mhnpo1ng8().s[152]++;
      this.logger.info('Website created successfully', {
        websiteName,
        path: newWebsitePath
      });
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[153]++;
      return newWebsitePath;
    } catch (error) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[154]++;
      this.logger.error('Website creation failed', error, {
        websiteName
      });
      // Clean up the entire website directory if it was created
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[155]++;
      if (await this.exists(newWebsitePath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[40][0]++;
        cov_mhnpo1ng8().s[156]++;
        try {
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[157]++;
          await this.fileSystem.rmdir(newWebsitePath, {
            recursive: true
          });
        } catch (cleanupError) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[158]++;
          this.logger.error('Failed to cleanup website directory after error', cleanupError);
        }
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[40][1]++;
      }
      cov_mhnpo1ng8().s[159]++;
      throw error;
    }
  }
  /**
   * Find the template source path from possible locations.
   */
  async findTemplateSourcePath() {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[44]++;
    const possiblePaths =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[160]++, [path.join(__dirname, '..', '..', 'node_modules', '@dwk', 'anglesite-starter'), path.join(process.cwd(), 'node_modules', '@dwk', 'anglesite-starter'),
    // For development, also check the local path
    path.join(__dirname, '..', '..', '..', '..', 'anglesite-starter')]);
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[161]++;
    for (const starterPath of possiblePaths) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[162]++;
      if (await this.exists(starterPath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[41][0]++;
        cov_mhnpo1ng8().s[163]++;
        this.logger.debug('Found template source', {
          path: starterPath
        });
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[164]++;
        return starterPath;
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[41][1]++;
      }
    }
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[165]++;
    this.logger.warn('Template source path not found in any expected location');
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[166]++;
    return null;
  }
  /**
   * Customize the index.md content with website name.
   */
  async customizeIndexContent(websiteName, indexPath) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[45]++;
    let indexContent =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[167]++, await this.fileSystem.readFile(indexPath, 'utf8'));
    // Replace the title in frontmatter
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[168]++;
    indexContent = indexContent.replace(/title: Hello World!/, `title: Welcome to ${websiteName}!`);
    // Replace the main content line
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[169]++;
    indexContent = indexContent.replace('This is your new website! Edit this file to get started.', `Welcome to ${websiteName}! This is your new Anglesite-powered website.`);
    // Add a personalized welcome section
    const welcomeSection =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[170]++, `

## About ${websiteName}

Your new website is ready to go! ${websiteName} is powered by Anglesite and uses Eleventy for static site generation.

### Quick Tips

- This site was created from the Anglesite starter template
- All your content is stored locally on your computer  
- Changes are automatically detected and rebuilt
- You can preview your site instantly in the Anglesite app

## Getting Started

- Edit this markdown file to change the content
- Add more pages by creating new .md files
- Customize the layout in the _includes directory
- Add styles to style.css

Happy building! 🚀`);
    // Replace the existing getting started section
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[171]++;
    indexContent = indexContent.replace(/## Getting Started[\s\S]*Happy building! 🚀/, welcomeSection.trim());
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[172]++;
    return indexContent;
  }
  /**
   * Sanitize website name for package.json (follows npm naming conventions).
   */
  sanitizePackageName(websiteName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[46]++;
    cov_mhnpo1ng8().s[173]++;
    return websiteName.toLowerCase().replace(/[^a-z0-9-]/g, '-') // Replace non-alphanumeric chars with dashes
    .replace(/^-+|-+$/g, '') // Remove leading/trailing dashes
    .replace(/-+/g, '-'); // Collapse multiple dashes
  }
  /**
   * Customize the package.json content with website name and dependencies.
   */
  async customizePackageJson(websiteName, packageJsonPath) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[47]++;
    const packageJsonContent =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[174]++, await this.fileSystem.readFile(packageJsonPath, 'utf8'));
    const packageJson =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[175]++, JSON.parse(packageJsonContent));
    // Sanitize website name for package.json (npm naming conventions)
    const sanitizedName =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[176]++, this.sanitizePackageName(websiteName));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[177]++;
    packageJson.name = sanitizedName;
    // Set up local file path dependencies for development
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[178]++;
    if (packageJson.dependencies) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[42][0]++;
      cov_mhnpo1ng8().s[179]++;
      // Use file paths to local packages since they're not published to npm yet
      if (packageJson.dependencies['@dwk/anglesite-11ty']) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[43][0]++;
        // Use absolute path to anglesite-11ty package
        // Navigate from dist/app/utils to the workspace root
        const workspaceRoot =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[180]++, path.resolve(__dirname, '../../../../'));
        const anglesitePackagePath =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[181]++, path.join(workspaceRoot, 'anglesite-11ty'));
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[182]++;
        packageJson.dependencies['@dwk/anglesite-11ty'] = `file:${anglesitePackagePath}`;
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[43][1]++;
      }
      cov_mhnpo1ng8().s[183]++;
      if (packageJson.dependencies['@dwk/web-components']) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[44][0]++;
        // Use absolute path to web-components package
        // Navigate from dist/app/utils to the workspace root
        const workspaceRoot =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[184]++, path.resolve(__dirname, '../../../../'));
        const webComponentsPackagePath =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[185]++, path.join(workspaceRoot, 'web-components'));
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[186]++;
        packageJson.dependencies['@dwk/web-components'] = `file:${webComponentsPackagePath}`;
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[44][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[42][1]++;
    }
    cov_mhnpo1ng8().s[187]++;
    return JSON.stringify(packageJson, null, 2);
  }
  /**
   * Run npm install in the website directory.
   */
  async runNpmInstall(websitePath) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[48]++;
    cov_mhnpo1ng8().s[188]++;
    this.logger.info('Running npm install', {
      websitePath
    });
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[189]++;
    return new Promise((resolve, reject) => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[49]++;
      const npmInstall =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[190]++, (0, child_process_1.spawn)('npm', ['install'], {
        cwd: websitePath,
        stdio: 'pipe'
      }));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[191]++;
      npmInstall.on('close', code => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[50]++;
        cov_mhnpo1ng8().s[192]++;
        if (code === 0) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[45][0]++;
          cov_mhnpo1ng8().s[193]++;
          this.logger.debug('npm install completed successfully');
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[194]++;
          resolve();
        } else {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[45][1]++;
          const error =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[195]++, new Error(`npm install failed with code ${code}`));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[196]++;
          this.logger.error('npm install failed', error);
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[197]++;
          reject(error);
        }
      });
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[198]++;
      npmInstall.on('error', error => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[51]++;
        cov_mhnpo1ng8().s[199]++;
        this.logger.error('npm install process error', error);
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[200]++;
        reject(error);
      });
    });
  }
  /**
   * Checks if a website name is valid according to naming rules and character restrictions.
   */
  validateWebsiteName(name) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[52]++;
    cov_mhnpo1ng8().s[201]++;
    if (
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[47][0]++, !name) ||
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[47][1]++, name.trim().length === 0)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[46][0]++;
      cov_mhnpo1ng8().s[202]++;
      return {
        valid: false,
        error: 'Website name cannot be empty'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[46][1]++;
    }
    // SECURITY: Prevent path traversal attacks
    // Check for directory traversal patterns before other validation
    cov_mhnpo1ng8().s[203]++;
    if (name.includes('..')) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[48][0]++;
      cov_mhnpo1ng8().s[204]++;
      return {
        valid: false,
        error: 'Website name cannot contain directory traversal patterns (..)'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[48][1]++;
    }
    // Additional path traversal security check using path resolution
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[205]++, this.getWebsitesDirectory());
    const resolvedPath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[206]++, path.resolve(websitesDir, name));
    const expectedPath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[207]++, path.join(websitesDir, name));
    // Ensure the resolved path is exactly what we expect (no traversal occurred)
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[208]++;
    if (resolvedPath !== expectedPath) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[49][0]++;
      cov_mhnpo1ng8().s[209]++;
      return {
        valid: false,
        error: 'Website name contains invalid path characters that could access parent directories'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[49][1]++;
    }
    // Ensure the resolved path is within the websites directory
    cov_mhnpo1ng8().s[210]++;
    if (
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[51][0]++, !resolvedPath.startsWith(websitesDir + path.sep)) &&
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[51][1]++, resolvedPath !== websitesDir)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[50][0]++;
      cov_mhnpo1ng8().s[211]++;
      return {
        valid: false,
        error: 'Website name would create a path outside the allowed directory'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[50][1]++;
    }
    // Forbidden characters that are invalid in filesystem folder names across platforms
    // Windows: < > : " | ? * \ /
    // Unix/macOS: / (and \0 null character)
    // Also avoid leading/trailing dots and spaces for consistency
    // eslint-disable-next-line no-control-regex
    const forbiddenChars =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[212]++, /[<>:"|?*\\/\x00]/);
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[213]++;
    if (forbiddenChars.test(name)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[52][0]++;
      cov_mhnpo1ng8().s[214]++;
      return {
        valid: false,
        error: 'Website name cannot contain: < > : " | ? * \\ / or null characters'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[52][1]++;
    }
    // Check for leading/trailing spaces or dots (problematic on Windows)
    cov_mhnpo1ng8().s[215]++;
    if (name !== name.trim()) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[53][0]++;
      cov_mhnpo1ng8().s[216]++;
      return {
        valid: false,
        error: 'Website name cannot start or end with spaces'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[53][1]++;
    }
    cov_mhnpo1ng8().s[217]++;
    if (
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[55][0]++, name.startsWith('.')) ||
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[55][1]++, name.endsWith('.'))) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[54][0]++;
      cov_mhnpo1ng8().s[218]++;
      return {
        valid: false,
        error: 'Website name cannot start or end with dots'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[54][1]++;
    }
    // Check for reserved names on Windows (CON, PRN, AUX, NUL, COM1-9, LPT1-9)
    const reservedNames =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[219]++, /^(CON|PRN|AUX|NUL|COM[1-9]|LPT[1-9])$/i);
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[220]++;
    if (reservedNames.test(name)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[56][0]++;
      cov_mhnpo1ng8().s[221]++;
      return {
        valid: false,
        error: 'Website name cannot be a reserved system name (CON, PRN, AUX, NUL, COM1-9, LPT1-9)'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[56][1]++;
    }
    // Check reasonable length (filesystem dependent but 255 is common max)
    cov_mhnpo1ng8().s[222]++;
    if (name.length > 100) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[57][0]++;
      cov_mhnpo1ng8().s[223]++;
      return {
        valid: false,
        error: 'Website name must be 100 characters or less'
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[57][1]++;
    }
    cov_mhnpo1ng8().s[224]++;
    return {
      valid: true
    };
  }
  /**
   * Async version of validateWebsiteName that also checks for duplicates.
   * This should be used for website creation validation.
   */
  async validateWebsiteNameAsync(name) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[53]++;
    // First run the basic validation
    const basicValidation =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[225]++, this.validateWebsiteName(name));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[226]++;
    if (!basicValidation.valid) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[58][0]++;
      cov_mhnpo1ng8().s[227]++;
      return basicValidation;
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[58][1]++;
    }
    // Check if website already exists
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[228]++, this.getWebsitesDirectory());
    const websitePath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[229]++, path.join(websitesDir, name));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[230]++;
    if (await this.exists(websitePath)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[59][0]++;
      cov_mhnpo1ng8().s[231]++;
      return {
        valid: false,
        error: `Website "${name}" already exists. Please choose a different name.`
      };
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[59][1]++;
    }
    cov_mhnpo1ng8().s[232]++;
    return {
      valid: true
    };
  }
  /**
   * List all existing websites.
   */
  async listWebsites() {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[54]++;
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[233]++, this.getWebsitesDirectory());
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[234]++;
    if (!(await this.exists(websitesDir))) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[60][0]++;
      cov_mhnpo1ng8().s[235]++;
      return [];
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[60][1]++;
    }
    cov_mhnpo1ng8().s[236]++;
    try {
      const entries =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[237]++, await this.fileSystem.readdir(websitesDir));
      const directories =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[238]++, []);
      // Filter for directories using stat
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[239]++;
      for (const entry of entries) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[240]++;
        try {
          const entryPath =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[241]++, path.join(websitesDir, entry));
          const stats =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[242]++, await this.fileSystem.stat(entryPath));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[243]++;
          if (stats.isDirectory()) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[61][0]++;
            cov_mhnpo1ng8().s[244]++;
            directories.push(entry);
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[61][1]++;
          }
        } catch (error) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[245]++;
          // Skip entries we can't stat
          this.logger.warn('Failed to stat directory entry', {
            entry,
            error
          });
        }
      }
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[246]++;
      return directories;
    } catch (error) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[247]++;
      this.logger.error('Failed to list websites', error);
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[248]++;
      return [];
    }
  }
  /**
   * Delete a website with confirmation dialog.
   */
  async deleteWebsite(websiteName, parentWindow) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[55]++;
    cov_mhnpo1ng8().s[249]++;
    this.logger.info('Attempting to delete website', {
      websiteName
    });
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[250]++, this.getWebsitesDirectory());
    const websitePath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[251]++, path.join(websitesDir, websiteName));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[252]++;
    if (!(await this.exists(websitePath))) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[62][0]++;
      cov_mhnpo1ng8().s[253]++;
      throw new Error(`Website "${websiteName}" does not exist`);
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[62][1]++;
    }
    const dialogOptions =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[254]++, {
      type: 'warning',
      title: 'Delete Website',
      message: `Are you sure you want to delete "${websiteName}"?`,
      detail: 'This action cannot be undone.',
      buttons: ['Cancel', 'Delete'],
      defaultId: 0,
      cancelId: 0
    });
    // Use the parent window if provided for proper modal behavior
    const result =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[255]++, parentWindow ?
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[63][0]++, electron_1.dialog.showMessageBoxSync(parentWindow, dialogOptions)) :
    /* istanbul ignore next */
    (cov_mhnpo1ng8().b[63][1]++, electron_1.dialog.showMessageBoxSync(dialogOptions)));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[256]++;
    if (result === 1) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[64][0]++;
      cov_mhnpo1ng8().s[257]++;
      try {
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[258]++;
        await this.fileSystem.rmdir(websitePath, {
          recursive: true
        });
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[259]++;
        this.logger.info('Website deleted successfully', {
          websiteName
        });
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[260]++;
        return true;
      } catch (error) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[261]++;
        this.logger.error('Failed to delete website', error, {
          websiteName
        });
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[262]++;
        throw error;
      }
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[64][1]++;
    }
    cov_mhnpo1ng8().s[263]++;
    this.logger.debug('Website deletion cancelled by user', {
      websiteName
    });
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[264]++;
    return false;
  }
  /**
   * Constructs the full file system path for a website given its name.
   */
  getWebsitePath(websiteName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[56]++;
    cov_mhnpo1ng8().s[265]++;
    return path.join(this.getWebsitesDirectory(), websiteName);
  }
  /**
   * Rename a website using atomic operations.
   *
   * This function ensures data integrity during the rename operation:
   * - Validates new name before any changes
   * - Creates backup of target if it exists.
   * - Validates successful rename
   * - Automatic rollback on failure
   * - Updates internal references (package.json name).
   */
  async renameWebsite(oldName, newName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[57]++;
    cov_mhnpo1ng8().s[266]++;
    this.logger.info('Renaming website', {
      oldName,
      newName
    });
    // Validate the new name
    const validation =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[267]++, this.validateWebsiteName(newName));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[268]++;
    if (!validation.valid) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[65][0]++;
      cov_mhnpo1ng8().s[269]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[66][0]++, validation.error) ||
      /* istanbul ignore next */
      (cov_mhnpo1ng8().b[66][1]++, 'Invalid website name'));
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[65][1]++;
    }
    const websitesDir =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[270]++, this.getWebsitesDirectory());
    const oldPath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[271]++, path.join(websitesDir, oldName));
    const newPath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[272]++, path.join(websitesDir, newName));
    // Pre-validation checks
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[273]++;
    if (!(await this.exists(oldPath))) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[67][0]++;
      cov_mhnpo1ng8().s[274]++;
      throw new Error(`Website "${oldName}" does not exist`);
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[67][1]++;
    }
    cov_mhnpo1ng8().s[275]++;
    if (await this.exists(newPath)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[68][0]++;
      cov_mhnpo1ng8().s[276]++;
      throw new Error(`Website "${newName}" already exists`);
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[68][1]++;
    }
    // Create atomic transaction for website rename
    const transaction =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[277]++, (0, atomic_operations_1.createAtomicTransaction)());
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[278]++;
    try {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[279]++;
      // Step 1: Atomically rename the directory
      transaction.addOperation(async () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[58]++;
        const renameResult =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[280]++, await (0, atomic_operations_1.atomicRename)(oldPath, newPath, {
          validate: async dirPath => {
            /* istanbul ignore next */
            cov_mhnpo1ng8().f[59]++;
            // Validate that the renamed directory has expected structure
            const srcPath =
            /* istanbul ignore next */
            (cov_mhnpo1ng8().s[281]++, path.join(dirPath, 'src'));
            const packageJsonPath =
            /* istanbul ignore next */
            (cov_mhnpo1ng8().s[282]++, path.join(dirPath, 'package.json'));
            /* istanbul ignore next */
            cov_mhnpo1ng8().s[283]++;
            return /* istanbul ignore next */(cov_mhnpo1ng8().b[69][0]++, await this.exists(srcPath)) &&
            /* istanbul ignore next */
            (cov_mhnpo1ng8().b[69][1]++, await this.exists(packageJsonPath));
          }
        }));
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[284]++;
        if (!renameResult.success) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[70][0]++;
          cov_mhnpo1ng8().s[285]++;
          throw /* istanbul ignore next */(cov_mhnpo1ng8().b[71][0]++, renameResult.error) ||
          /* istanbul ignore next */
          (cov_mhnpo1ng8().b[71][1]++, new Error('Failed to rename website directory'));
        } else
        /* istanbul ignore next */
        {
          cov_mhnpo1ng8().b[70][1]++;
        }
      }, async () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[60]++;
        cov_mhnpo1ng8().s[286]++;
        // Rollback: rename back to original if it exists
        if (await this.exists(newPath)) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[72][0]++;
          cov_mhnpo1ng8().s[287]++;
          try {
            /* istanbul ignore next */
            cov_mhnpo1ng8().s[288]++;
            await this.fileSystem.rename(newPath, oldPath);
          } catch (error) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().s[289]++;
            this.logger.error('Failed to rollback directory rename', error);
          }
        } else
        /* istanbul ignore next */
        {
          cov_mhnpo1ng8().b[72][1]++;
        }
      });
      // Step 2: Update package.json with new website name
      const packageJsonPath =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[290]++, path.join(newPath, 'package.json'));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[291]++;
      if (await this.exists(packageJsonPath)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[73][0]++;
        cov_mhnpo1ng8().s[292]++;
        transaction.addOperation(async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[61]++;
          const packageJsonContent =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[293]++, await this.fileSystem.readFile(packageJsonPath, 'utf8'));
          const packageJson =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[294]++, JSON.parse(packageJsonContent));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[295]++;
          packageJson.name = this.sanitizePackageName(newName);
          const writeResult =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[296]++, await (0, atomic_operations_1.atomicWriteFile)(packageJsonPath, JSON.stringify(packageJson, null, 2), {
            validate: content => {
              /* istanbul ignore next */
              cov_mhnpo1ng8().f[62]++;
              cov_mhnpo1ng8().s[297]++;
              try {
                const parsed =
                /* istanbul ignore next */
                (cov_mhnpo1ng8().s[298]++, JSON.parse(content));
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[299]++;
                return parsed.name === this.sanitizePackageName(newName);
              } catch {
                /* istanbul ignore next */
                cov_mhnpo1ng8().s[300]++;
                return false;
              }
            },
            backup: true
          }));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[301]++;
          if (!writeResult.success) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[74][0]++;
            cov_mhnpo1ng8().s[302]++;
            throw /* istanbul ignore next */(cov_mhnpo1ng8().b[75][0]++, writeResult.error) ||
            /* istanbul ignore next */
            (cov_mhnpo1ng8().b[75][1]++, new Error('Failed to update package.json with new name'));
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[74][1]++;
          }
        }, async () => {
          /* istanbul ignore next */
          cov_mhnpo1ng8().f[63]++;
          // Rollback: restore original package.json
          const backupPath =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[303]++, `${packageJsonPath}.backup.${Date.now()}`);
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[304]++;
          if (await this.exists(backupPath)) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[76][0]++;
            cov_mhnpo1ng8().s[305]++;
            try {
              /* istanbul ignore next */
              cov_mhnpo1ng8().s[306]++;
              await this.fileSystem.rename(backupPath, packageJsonPath);
            } catch (error) {
              /* istanbul ignore next */
              cov_mhnpo1ng8().s[307]++;
              this.logger.error('Failed to restore package.json backup', error);
            }
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[76][1]++;
          }
        });
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[73][1]++;
      }
      // Step 3: Update any internal file references to the old website name
      cov_mhnpo1ng8().s[308]++;
      transaction.addOperation(async () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[64]++;
        cov_mhnpo1ng8().s[309]++;
        await this.updateInternalReferences(newPath, oldName, newName);
      }, async () => {
        /* istanbul ignore next */
        cov_mhnpo1ng8().f[65]++;
        cov_mhnpo1ng8().s[310]++;
        // Rollback: restore original references
        try {
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[311]++;
          await this.updateInternalReferences(newPath, newName, oldName);
        } catch (error) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[312]++;
          this.logger.error('Failed to rollback internal references', error);
        }
      });
      // Execute the transaction
      const result =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[313]++, await transaction.execute());
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[314]++;
      if (!result.success) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[77][0]++;
        cov_mhnpo1ng8().s[315]++;
        throw /* istanbul ignore next */(cov_mhnpo1ng8().b[78][0]++, result.error) ||
        /* istanbul ignore next */
        (cov_mhnpo1ng8().b[78][1]++, new Error('Website rename transaction failed'));
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[77][1]++;
      }
      cov_mhnpo1ng8().s[316]++;
      this.logger.info('Website renamed successfully', {
        oldName,
        newName
      });
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[317]++;
      return true;
    } catch (error) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[318]++;
      this.logger.error('Failed to rename website', error, {
        oldName,
        newName
      });
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[319]++;
      throw error;
    }
  }
  /**
   * Update internal references to website name in files.
   */
  async updateInternalReferences(websitePath, oldName, newName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[66]++;
    // Update title in index.md if it contains the old name
    const indexPath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[320]++, path.join(websitePath, 'src', 'index.md'));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[321]++;
    if (await this.exists(indexPath)) {
      /* istanbul ignore next */
      cov_mhnpo1ng8().b[79][0]++;
      const content =
      /* istanbul ignore next */
      (cov_mhnpo1ng8().s[322]++, await this.fileSystem.readFile(indexPath, 'utf8'));
      /* istanbul ignore next */
      cov_mhnpo1ng8().s[323]++;
      if (content.includes(oldName)) {
        /* istanbul ignore next */
        cov_mhnpo1ng8().b[80][0]++;
        const updatedContent =
        /* istanbul ignore next */
        (cov_mhnpo1ng8().s[324]++, content.replace(new RegExp(`Welcome to ${oldName}!`, 'g'), `Welcome to ${newName}!`).replace(new RegExp(`About ${oldName}`, 'g'), `About ${newName}`).replace(new RegExp(`${oldName} is powered by`, 'g'), `${newName} is powered by`));
        /* istanbul ignore next */
        cov_mhnpo1ng8().s[325]++;
        if (updatedContent !== content) {
          /* istanbul ignore next */
          cov_mhnpo1ng8().b[81][0]++;
          const writeResult =
          /* istanbul ignore next */
          (cov_mhnpo1ng8().s[326]++, await (0, atomic_operations_1.atomicWriteFile)(indexPath, updatedContent, {
            backup: true
          }));
          /* istanbul ignore next */
          cov_mhnpo1ng8().s[327]++;
          if (!writeResult.success) {
            /* istanbul ignore next */
            cov_mhnpo1ng8().b[82][0]++;
            cov_mhnpo1ng8().s[328]++;
            throw /* istanbul ignore next */(cov_mhnpo1ng8().b[83][0]++, writeResult.error) ||
            /* istanbul ignore next */
            (cov_mhnpo1ng8().b[83][1]++, new Error('Failed to update index.md references'));
          } else
          /* istanbul ignore next */
          {
            cov_mhnpo1ng8().b[82][1]++;
          }
        } else
        /* istanbul ignore next */
        {
          cov_mhnpo1ng8().b[81][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_mhnpo1ng8().b[80][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_mhnpo1ng8().b[79][1]++;
    }
  }
  /**
   * Check if a website exists.
   */
  async websiteExists(websiteName) {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[67]++;
    const websitePath =
    /* istanbul ignore next */
    (cov_mhnpo1ng8().s[329]++, this.getWebsitePath(websiteName));
    /* istanbul ignore next */
    cov_mhnpo1ng8().s[330]++;
    return await this.exists(websitePath);
  }
  /**
   * Dispose of the website manager service.
   */
  async dispose() {
    /* istanbul ignore next */
    cov_mhnpo1ng8().f[68]++;
    cov_mhnpo1ng8().s[331]++;
    this.logger.debug('Disposing WebsiteManager service');
    // No cleanup needed for this service currently
  }
}
/* istanbul ignore next */
cov_mhnpo1ng8().s[332]++;
exports.WebsiteManager = WebsiteManager;
/**
 * Factory function for creating WebsiteManager with proper dependencies.
 */
function createWebsiteManager(logger, fileSystem, atomicOperations) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[69]++;
  cov_mhnpo1ng8().s[333]++;
  return WebsiteManager.create(logger, fileSystem, atomicOperations);
}
/**
 * Type guard to check if an object is a website manager.
 */
function isWebsiteManager(obj) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[70]++;
  cov_mhnpo1ng8().s[334]++;
  return /* istanbul ignore next */(cov_mhnpo1ng8().b[84][0]++, obj !== null) &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][1]++, typeof obj === 'object') &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][2]++, typeof obj.createWebsite === 'function') &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][3]++, typeof obj.deleteWebsite === 'function') &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][4]++, typeof obj.listWebsites === 'function') &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][5]++, typeof obj.validateWebsiteName === 'function') &&
  /* istanbul ignore next */
  (cov_mhnpo1ng8().b[84][6]++, typeof obj.dispose === 'function');
}
// Legacy exports for backward compatibility during transition period
// These should be removed once all consumers are updated to use DI
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
async function createWebsiteWithName(websiteName) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[71]++;
  cov_mhnpo1ng8().s[335]++;
  console.warn('Using deprecated createWebsiteWithName - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[336]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[72]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[73]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[74]++;
      cov_mhnpo1ng8().s[337]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[338]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[339]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[340]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[341]++;
  return manager.createWebsite(websiteName);
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
function validateWebsiteName(name) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[75]++;
  cov_mhnpo1ng8().s[342]++;
  console.warn('Using deprecated validateWebsiteName - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[343]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[76]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[77]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[78]++;
      cov_mhnpo1ng8().s[344]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[345]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[346]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[347]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[348]++;
  return manager.validateWebsiteName(name);
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
async function validateWebsiteNameAsync(name) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[79]++;
  cov_mhnpo1ng8().s[349]++;
  console.warn('Using deprecated validateWebsiteNameAsync - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[350]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[80]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[81]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[82]++;
      cov_mhnpo1ng8().s[351]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[352]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[353]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[354]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[355]++;
  return manager.validateWebsiteNameAsync(name);
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
async function listWebsites() {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[83]++;
  cov_mhnpo1ng8().s[356]++;
  console.warn('Using deprecated listWebsites - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[357]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[84]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[85]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[86]++;
      cov_mhnpo1ng8().s[358]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[359]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[360]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[361]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[362]++;
  return manager.listWebsites();
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
function getWebsitePath(websiteName) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[87]++;
  cov_mhnpo1ng8().s[363]++;
  console.warn('Using deprecated getWebsitePath - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[364]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[88]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[89]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[90]++;
      cov_mhnpo1ng8().s[365]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[366]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[367]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[368]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[369]++;
  return manager.getWebsitePath(websiteName);
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
async function renameWebsite(oldName, newName) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[91]++;
  cov_mhnpo1ng8().s[370]++;
  console.warn('Using deprecated renameWebsite - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[371]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[92]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[93]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[94]++;
      cov_mhnpo1ng8().s[372]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[373]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[374]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[375]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[376]++;
  return manager.renameWebsite(oldName, newName);
}
/**
 * @deprecated Use WebsiteManager service through DI container instead
 * This is kept as a fallback for when DI is not yet initialized.
 */
async function deleteWebsite(websiteName) {
  /* istanbul ignore next */
  cov_mhnpo1ng8().f[95]++;
  cov_mhnpo1ng8().s[377]++;
  console.warn('Using deprecated deleteWebsite - DI not available');
  // Create a temporary instance for fallback
  const logger =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[378]++, {
    debug: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[96]++;
    },
    info: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[97]++;
    },
    warn: console.warn,
    error: console.error,
    child: () => {
      /* istanbul ignore next */
      cov_mhnpo1ng8().f[98]++;
      cov_mhnpo1ng8().s[379]++;
      return logger;
    }
  }); // eslint-disable-line @typescript-eslint/no-explicit-any
  const fileSystem =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[380]++, new FileSystemService());
  const atomicOps =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[381]++, createStubAtomicOperations(fileSystem));
  const manager =
  /* istanbul ignore next */
  (cov_mhnpo1ng8().s[382]++, new WebsiteManager(logger, fileSystem, atomicOps));
  /* istanbul ignore next */
  cov_mhnpo1ng8().s[383]++;
  return manager.deleteWebsite(websiteName);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,