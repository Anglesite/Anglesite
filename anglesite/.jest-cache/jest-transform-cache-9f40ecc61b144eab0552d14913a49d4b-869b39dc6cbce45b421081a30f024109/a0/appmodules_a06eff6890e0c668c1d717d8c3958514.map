{"file":"/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/mocks/app-modules.ts","mappings":";AAAA,4BAA4B;;;AAY5B,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE,CAAC,iBAAiB,CAAC,CAAC;AAalE,IAAI,CAAC,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE,CAAC,sBAAsB,CAAC,CAAC;AAO7E,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;AAElD,8BAA8B;AAC9B,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,CAAC;IACxC,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;CAChC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE,CAAC,CAAC;IACrC,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7B,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAAC,CAAC;IACxC,oBAAoB,EAAE,IAAI,CAAC,EAAE,EAAE;CAChC,CAAC,CAAC,CAAC;AAEJ,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAAC,CAAC;IACvC,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC/B,CAAC,CAAC,CAAC;AAOJ,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC;AAa3D,uDAAuD;AAEvD,uDAAuD;AACvD,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE,CAAC,CAAC;IAClD,uBAAuB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;IACzD,gBAAgB,EAAE,GAAG,EAAE,CAAC,CAAC;QACvB,UAAU,EAAE,CAAC,GAAW,EAAE,EAAE;YAC1B,IAAI,GAAG,KAAK,OAAO,EAAE,CAAC;gBACpB,OAAO,iBAAiB,CAAC;YAC3B,CAAC;YACD,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,EAAE,CAAC,CAAC;QAC7C,CAAC;KACF,CAAC;IACF,qBAAqB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;CACxD,CAAC,CAAC,CAAC;AAMJ,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,CAAC;AASjE,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE,CAAC,YAAY,CAAC,CAAC;AAO3D,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,CAAC;AAQhE,IAAI,CAAC,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE,CAAC,gBAAgB,CAAC,CAAC;AAOjE,IAAI,CAAC,IAAI,CAAC,4BAA4B,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC;AAWpF,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;AAQvE,IAAI,CAAC,IAAI,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,kBAAkB,CAAC,CAAC;AAzIpE,kBAAkB;AAClB,MAAM,iBAAiB,GAAG;IACxB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE;IACtB,WAAW,EAAE,IAAI,CAAC,EAAE,EAAE;IACtB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;IACxB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;IACzB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC5B,CAAC;AAsNA,8CAAiB;AAlNnB,MAAM,sBAAsB,GAAG;IAC7B,eAAe,EAAE,IAAI,CAAC,EAAE,EAAE;IAC1B,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC9B,oBAAoB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAC9C,mBAAmB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,YAAoB,EAAE,YAAqB,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,qBAAqB;IAC1G,kBAAkB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,YAAoB,EAAE,EAAE,GAAE,CAAC,CAAC;IACzD,gBAAgB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,YAAoB,EAAE,EAAE,CAAC,IAAI,CAAC;IACzD,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,gCAAgC,EAAE,IAAI,CAAC,EAAE,EAAE;CAC5C,CAAC;AA0MA,wDAAsB;AAtMxB,MAAM,WAAW,GAAG;IAClB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;CACjC,CAAC;AAoMA,kCAAW;AA/Kb,2BAA2B;AAC3B,MAAM,eAAe,GAAG;IACtB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;CACjC,CAAC;AA6KA,0CAAe;AAzKjB,MAAM,iBAAiB,GAAG;IACxB,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;IACd,GAAG,EAAE,IAAI,CAAC,EAAE,EAAE;IACd,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,eAAe,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAe,CAAC,EAAE,mCAAmC;IACpF,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC5B,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3B,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE;IACjB,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;CAC5C,CAAC;AAiKA,8CAAiB;AA/InB,MAAM,eAAe,GAAG;IACtB,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7B,CAAC;AA8IA,0CAAe;AA1IjB,MAAM,YAAY,GAAG;IACnB,uBAAuB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,6BAA6B,CAAC,EAAE,mCAAmC;IAC1G,iBAAiB,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC;IACtC,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;CACjC,CAAC;AAsIA,oCAAY;AAlId,MAAM,cAAc,GAAG;IACrB,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,iBAAiB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC7B,CAAC;AAgIA,wCAAc;AA5HhB,MAAM,gBAAgB,GAAG;IACvB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,gBAAgB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC3B,2BAA2B,EAAE,IAAI,CAAC,EAAE,EAAE;CACvC,CAAC;AAyHA,4CAAgB;AArHlB,MAAM,gBAAgB,GAAG;IACvB,UAAU,EAAE,IAAI,CAAC,EAAE,EAAE;IACrB,kBAAkB,EAAE,IAAI,CAAC,EAAE,EAAE;CAC9B,CAAC;AAmHA,4CAAgB;AA/GlB,MAAM,kBAAkB,GAAG;IACzB,qBAAqB,EAAE,IAAI,CAAC,EAAE,EAAE;IAChC,mBAAmB,EAAE,IAAI,CAAC,EAAE,EAAE;IAC9B,YAAY,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IACxD,cAAc,EAAE,IAAI,CAAC,EAAE,EAAE;IACzB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;IACxB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;CACzB,CAAC;AAyGA,gDAAkB;AArGpB,MAAM,kBAAkB,GAAG;IACzB,qBAAqB,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,YAAoB,EAAE,EAAE;QACtD,OAAO,yCAAyC,YAAY,OAAO,CAAC;IACtE,CAAC,CAAC;CACH,CAAC;AAkGA,gDAAkB;AA9FpB,4CAA4C;AAErC,MAAM,oBAAoB,GAAG,GAAG,EAAE;IACvC,iBAAiB,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC1C,iBAAiB,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;IAC1C,iBAAiB,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IAC5C,iBAAiB,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IACpD,iBAAiB,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;IAC7C,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAE/C,sBAAsB,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;IACnD,sBAAsB,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACvD,sBAAsB,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC;IACxD,sBAAsB,CAAC,oBAAoB,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,yBAAyB;IACjG,sBAAsB,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACvD,sBAAsB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC,YAAoB,EAAE,YAAqB,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,yBAAyB;IAC/I,sBAAsB,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;IACtD,sBAAsB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,CAAC,YAAoB,EAAE,EAAE,GAAE,CAAC,CAAC,CAAC,CAAC,yBAAyB;IACrH,sBAAsB,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IACpD,sBAAsB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,YAAoB,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,yBAAyB;IACrH,sBAAsB,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAEpD,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IAC9C,WAAW,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IAE9C,eAAe,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IAElD,wEAAwE;IACxE,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;IAC9D,MAAM,OAAO,GAAG,iBAAiB,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;IAC9D,MAAM,oBAAoB,GAAG,iBAAiB,CAAC,gBAAgB,CAAC,qBAAqB,EAAE,CAAC;IACxF,MAAM,mBAAmB,GAAG,iBAAiB,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAC;IACtF,MAAM,qBAAqB,GAAG,iBAAiB,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC;IAC1F,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;IACpE,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,CAAC,qBAAqB,EAAE,CAAC;IACpE,MAAM,aAAa,GAAG,iBAAiB,CAAC,SAAS,CAAC,qBAAqB,EAAE,CAAC;IAE1E,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IAClC,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC;IAClC,iBAAiB,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC/C,iBAAiB,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;IAC9C,iBAAiB,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IAChD,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;IACrC,iBAAiB,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;IACrC,iBAAiB,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;IAExC,IAAI,OAAO;QAAE,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC/D,IAAI,OAAO;QAAE,iBAAiB,CAAC,GAAG,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;IAC/D,IAAI,oBAAoB;QAAE,iBAAiB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;IACtG,IAAI,mBAAmB;QAAE,iBAAiB,CAAC,eAAe,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,CAAC;IACnG,IAAI,qBAAqB;QAAE,iBAAiB,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,qBAAqB,CAAC,CAAC;IACzG,IAAI,UAAU;QAAE,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IACxE,IAAI,UAAU;QAAE,iBAAiB,CAAC,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;IACxE,IAAI,aAAa;QAAE,iBAAiB,CAAC,SAAS,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;IAEjF,eAAe,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IAE9C,YAAY,CAAC,uBAAuB,CAAC,SAAS,EAAE,CAAC;IACjD,YAAY,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IAC3C,YAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC1C,YAAY,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IAE/C,cAAc,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC5C,cAAc,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;IAE7C,gBAAgB,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IACnD,gBAAgB,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;IAC9C,gBAAgB,CAAC,2BAA2B,CAAC,SAAS,EAAE,CAAC;IAEzD,gBAAgB,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACxC,gBAAgB,CAAC,kBAAkB,CAAC,SAAS,EAAE,CAAC;IAEhD,kBAAkB,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;IACrD,kBAAkB,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACnD,kBAAkB,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAC5C,kBAAkB,CAAC,cAAc,CAAC,SAAS,EAAE,CAAC;IAC9C,kBAAkB,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IAC7C,kBAAkB,CAAC,aAAa,CAAC,SAAS,EAAE,CAAC;IAE7C,kBAAkB,CAAC,qBAAqB,CAAC,SAAS,EAAE,CAAC;AACvD,CAAC,CAAC;AA9EW,QAAA,oBAAoB,wBA8E/B","names":[],"sources":["/Users/dwk/Developer/gitlab.com/davidwkeith/@dwk/anglesite/test/mocks/app-modules.ts"],"sourcesContent":["// test/mocks/app-modules.ts\n\n// Mock UI modules\nconst mockWindowManager = {\n  showPreview: jest.fn(),\n  hidePreview: jest.fn(),\n  reloadPreview: jest.fn(),\n  togglePreviewDevTools: jest.fn(),\n  getNativeInput: jest.fn(),\n  getBagItMetadata: jest.fn(),\n};\n\njest.mock('../../app/ui/window-manager', () => mockWindowManager);\n\nconst mockMultiWindowManager = {\n  closeAllWindows: jest.fn(),\n  restoreWindowStates: jest.fn(),\n  getAllWebsiteWindows: jest.fn(() => new Map()),\n  createWebsiteWindow: jest.fn((_websiteName: string, _websitePath?: string) => ({})), // Return mock object\n  loadWebsiteContent: jest.fn((_websiteName: string) => {}),\n  getWebsiteWindow: jest.fn((_websiteName: string) => null),\n  saveWindowStates: jest.fn(),\n  setupServerManagerEventListeners: jest.fn(),\n};\n\njest.mock('../../app/ui/multi-window-manager', () => mockMultiWindowManager);\n\nconst mockAppMenu = {\n  createApplicationMenu: jest.fn(),\n  updateApplicationMenu: jest.fn(),\n};\n\njest.mock('../../app/ui/menu', () => mockAppMenu);\n\n// Mock individual IPC modules\njest.mock('../../app/ipc/website', () => ({\n  setupWebsiteHandlers: jest.fn(),\n}));\n\njest.mock('../../app/ipc/file', () => ({\n  setupFileHandlers: jest.fn(),\n}));\n\njest.mock('../../app/ipc/preview', () => ({\n  setupPreviewHandlers: jest.fn(),\n}));\n\njest.mock('../../app/ipc/export', () => ({\n  setupExportHandlers: jest.fn(),\n}));\n\n// Mock IPC handlers module\nconst mockIpcHandlers = {\n  setupIpcMainListeners: jest.fn(),\n};\n\njest.mock('../../app/ipc/handlers', () => mockIpcHandlers);\n\nconst mockStoreInstance = {\n  get: jest.fn(),\n  set: jest.fn(),\n  saveWindowStates: jest.fn(),\n  getWindowStates: jest.fn(() => [] as unknown[]), // Default for multi-window-manager\n  clearWindowStates: jest.fn(),\n  getAll: jest.fn(() => ({})),\n  setAll: jest.fn(),\n  forceSave: jest.fn(() => Promise.resolve()),\n};\n\n// Store class removed - now using DI with StoreService\n\n// Mock the service registry to provide mocked services\njest.mock('../../app/core/service-registry', () => ({\n  initializeGlobalContext: jest.fn(() => Promise.resolve()),\n  getGlobalContext: () => ({\n    getService: (key: string) => {\n      if (key === 'store') {\n        return mockStoreInstance;\n      }\n      throw new Error(`Unknown service: ${key}`);\n    },\n  }),\n  shutdownGlobalContext: jest.fn(() => Promise.resolve()),\n}));\n\nconst mockFirstLaunch = {\n  handleFirstLaunch: jest.fn(),\n};\n\njest.mock('../../app/utils/first-launch', () => mockFirstLaunch);\n\nconst mockEleventy = {\n  getCurrentLiveServerUrl: jest.fn(() => 'https://anglesite.test:8080'), // Default for multi-window-manager\n  isLiveServerReady: jest.fn(() => true),\n  setLiveServerUrl: jest.fn(),\n  setCurrentWebsiteName: jest.fn(),\n};\n\njest.mock('../../app/server/eleventy', () => mockEleventy);\n\nconst mockHttpsProxy = {\n  createHttpsProxy: jest.fn(),\n  restartHttpsProxy: jest.fn(),\n};\n\njest.mock('../../app/server/https-proxy', () => mockHttpsProxy);\n\nconst mockHostsManager = {\n  addLocalDnsResolution: jest.fn(),\n  cleanupHostsFile: jest.fn(),\n  checkAndSuggestTouchIdSetup: jest.fn(),\n};\n\njest.mock('../../app/dns/hosts-manager', () => mockHostsManager);\n\nconst mockThemeManager = {\n  initialize: jest.fn(),\n  applyThemeToWindow: jest.fn(),\n};\n\njest.mock('../../app/ui/theme-manager', () => ({ themeManager: mockThemeManager }));\n\nconst mockWebsiteManager = {\n  createWebsiteWithName: jest.fn(),\n  validateWebsiteName: jest.fn(),\n  listWebsites: jest.fn(() => ['test-site', 'my-website']),\n  getWebsitePath: jest.fn(),\n  renameWebsite: jest.fn(),\n  deleteWebsite: jest.fn(),\n};\n\njest.mock('../../app/utils/website-manager', () => mockWebsiteManager);\n\nconst mockTemplateLoader = {\n  loadTemplateAsDataUrl: jest.fn((templateName: string) => {\n    return `data:text/html;charset=utf-8,<h1>Mock ${templateName}</h1>`;\n  }),\n};\n\njest.mock('../../app/ui/template-loader', () => mockTemplateLoader);\n\n// Path is already mocked by node-modules.ts\n\nexport const resetAppModulesMocks = () => {\n  mockWindowManager.showPreview.mockClear();\n  mockWindowManager.hidePreview.mockClear();\n  mockWindowManager.reloadPreview.mockClear();\n  mockWindowManager.togglePreviewDevTools.mockClear();\n  mockWindowManager.getNativeInput.mockClear();\n  mockWindowManager.getBagItMetadata.mockClear();\n\n  mockMultiWindowManager.closeAllWindows.mockClear();\n  mockMultiWindowManager.restoreWindowStates.mockClear();\n  mockMultiWindowManager.getAllWebsiteWindows.mockClear();\n  mockMultiWindowManager.getAllWebsiteWindows.mockReturnValue(new Map()); // Restore implementation\n  mockMultiWindowManager.createWebsiteWindow.mockClear();\n  mockMultiWindowManager.createWebsiteWindow.mockImplementation((_websiteName: string, _websitePath?: string) => ({})); // Restore implementation\n  mockMultiWindowManager.loadWebsiteContent.mockClear();\n  mockMultiWindowManager.loadWebsiteContent.mockImplementation((_websiteName: string) => {}); // Restore implementation\n  mockMultiWindowManager.getWebsiteWindow.mockClear();\n  mockMultiWindowManager.getWebsiteWindow.mockImplementation((_websiteName: string) => null); // Restore implementation\n  mockMultiWindowManager.saveWindowStates.mockClear();\n\n  mockAppMenu.createApplicationMenu.mockClear();\n  mockAppMenu.updateApplicationMenu.mockClear();\n\n  mockIpcHandlers.setupIpcMainListeners.mockClear();\n\n  // Store mock instance needs special handling to preserve implementation\n  const getImpl = mockStoreInstance.get.getMockImplementation();\n  const setImpl = mockStoreInstance.set.getMockImplementation();\n  const saveWindowStatesImpl = mockStoreInstance.saveWindowStates.getMockImplementation();\n  const getWindowStatesImpl = mockStoreInstance.getWindowStates.getMockImplementation();\n  const clearWindowStatesImpl = mockStoreInstance.clearWindowStates.getMockImplementation();\n  const getAllImpl = mockStoreInstance.getAll.getMockImplementation();\n  const setAllImpl = mockStoreInstance.setAll.getMockImplementation();\n  const forceSaveImpl = mockStoreInstance.forceSave.getMockImplementation();\n\n  mockStoreInstance.get.mockClear();\n  mockStoreInstance.set.mockClear();\n  mockStoreInstance.saveWindowStates.mockClear();\n  mockStoreInstance.getWindowStates.mockClear();\n  mockStoreInstance.clearWindowStates.mockClear();\n  mockStoreInstance.getAll.mockClear();\n  mockStoreInstance.setAll.mockClear();\n  mockStoreInstance.forceSave.mockClear();\n\n  if (getImpl) mockStoreInstance.get.mockImplementation(getImpl);\n  if (setImpl) mockStoreInstance.set.mockImplementation(setImpl);\n  if (saveWindowStatesImpl) mockStoreInstance.saveWindowStates.mockImplementation(saveWindowStatesImpl);\n  if (getWindowStatesImpl) mockStoreInstance.getWindowStates.mockImplementation(getWindowStatesImpl);\n  if (clearWindowStatesImpl) mockStoreInstance.clearWindowStates.mockImplementation(clearWindowStatesImpl);\n  if (getAllImpl) mockStoreInstance.getAll.mockImplementation(getAllImpl);\n  if (setAllImpl) mockStoreInstance.setAll.mockImplementation(setAllImpl);\n  if (forceSaveImpl) mockStoreInstance.forceSave.mockImplementation(forceSaveImpl);\n\n  mockFirstLaunch.handleFirstLaunch.mockClear();\n\n  mockEleventy.getCurrentLiveServerUrl.mockClear();\n  mockEleventy.isLiveServerReady.mockClear();\n  mockEleventy.setLiveServerUrl.mockClear();\n  mockEleventy.setCurrentWebsiteName.mockClear();\n\n  mockHttpsProxy.createHttpsProxy.mockClear();\n  mockHttpsProxy.restartHttpsProxy.mockClear();\n\n  mockHostsManager.addLocalDnsResolution.mockClear();\n  mockHostsManager.cleanupHostsFile.mockClear();\n  mockHostsManager.checkAndSuggestTouchIdSetup.mockClear();\n\n  mockThemeManager.initialize.mockClear();\n  mockThemeManager.applyThemeToWindow.mockClear();\n\n  mockWebsiteManager.createWebsiteWithName.mockClear();\n  mockWebsiteManager.validateWebsiteName.mockClear();\n  mockWebsiteManager.listWebsites.mockClear();\n  mockWebsiteManager.getWebsitePath.mockClear();\n  mockWebsiteManager.renameWebsite.mockClear();\n  mockWebsiteManager.deleteWebsite.mockClear();\n\n  mockTemplateLoader.loadTemplateAsDataUrl.mockClear();\n};\n\nexport {\n  mockWindowManager,\n  mockMultiWindowManager,\n  mockAppMenu,\n  mockIpcHandlers,\n  mockStoreInstance,\n  mockFirstLaunch,\n  mockEleventy,\n  mockHttpsProxy,\n  mockHostsManager,\n  mockThemeManager,\n  mockWebsiteManager,\n  mockTemplateLoader,\n};\n"],"version":3}